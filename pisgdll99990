|******************************************************************************
|* tfisgdll9999  0  VRC B61U a7 isg 
|* File Handling
|* baan
|* 15-03-13 [14:24]
|******************************************************************************
|* Script Type: Library
|******************************************************************************
|* ID: PATCH001021,	Sujeet Kumar,	2015-03-11
|******************************************************************************
#pragma used dll        ottdllbw
#include <bic_desktop>

function extern boolean tfisgdll9999.create.file
				(
				ref	long				file_pointer,		|File Pointer
				ref 	domain	tcmcs.str100m		temp.file,		|Server File Name
				ref	domain	tcmcs.str100m		error			|Error
				)
{
	
	
	temp.file = creat.tmp.file$(bse.tmp.dir$())
	file_pointer = seq.open(temp.file,"w+")
	
	if file_pointer <= 0 then
		file.rm(temp.file)
		error = "CRITICAL ERROR: Cannot open file " & temp.file & ". Contact administrator"
		return(false)
	endif
	
	return(true)
}


function extern tfisgdll9999.close.file
				(
				ref	long				file_pointer,
					domain	tcmcs.str100m		temp.file
				)
{
	domain	tcmcs.str100m	local.path
	seq.close(file_pointer)
	local.path = "c:\temp\" & str$(utc.num())  & ".xls"
	Server2client(temp.file,local.path,true)	
	app_start(local.path,"c:","","","")
}
function extern tfisgdll9999.create.file.header
				(
					long 	file_pointer,		|File Pointer,
					long 	seprator,
					...
				)
{
	long i
	
	string line(2048) mb
	
	line = ""
	
	for i = 3 to get.argc()
		line = line & strip$(get.string.arg(i)) & chr$(seprator) 
	endfor
	
	line = line & chr$(13)
	seq.write(line,len(line), file_pointer)
	
}

function extern tfisgdll9999.create.detail.line
				(
					long 	file_pointer,		|File Pointer,
					long 	seprator,
					...
				)
{
	long i
	string line(2048) mb
	
	line = ""
	for i = 3 to get.argc()
		on case get.arg.type(i)
			case 	DB.STRING:
			case	DB.MULTIBYTE:
				line = line & strip$(get.string.arg(i)) & chr$(seprator)
			break
			case	DB.DOUBLE:
				line = line & str$(get.double.arg(i)) & chr$(seprator)
			break
			case	DB.LONG:
				line = line & str$(get.long.arg(i)) & chr$(seprator)
			break
			
		endcase	
	endfor
	
	line = line & chr$(13)
	seq.write(line,len(line), file_pointer)
}


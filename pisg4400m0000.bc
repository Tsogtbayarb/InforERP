 |******************************************************************************
|* tdisg4400m000  0  VRC B61U a7 live
|* Print Purchase Order Revision Wise
|* Tools                         
|* 2014-03-20
|******************************************************************************
|* Form Type 4
|******************************************************************************
|* IDENT ISG001030   Somak Mondal	18-060-2014	     VRC B61U a7 live
|*
|* IDENT ISGEC0104 Arjit Kr. Gupta	02-09-2014	VRC B61U a7 isg
|* Landed cost to be calculated for tdpur401.oltp(2,3,4) and project description
|* for first po line. Tax Code logic added/modified.
|*
|* ISGECDV001067, IT0205, Arjit Gupta, VRC B61U a7 live,  Dt. 30-09-2014
|* Child Item purchase text to be printed
|*
|* IDENT ISGEC001071, Kuldeep Sharma, 2014-10-06
|* calculate tax on other charges line
|*
|* ID: ISGEC001106, IT0327, Ritu Shrivastava, VRC B61U a7 isg Dt. 16-10-2014
|* Print value of Child item for lowest version
|*
|* ISGEC001107, IT0205, Arjit Gupta, VRC B61U a7 isg, Dt. 16-10-2014
|* Get LD date of PO Line of last seqn
|*
|* ID: ISGEC001120, IT0327, Ritu Shrivastava, VRC B61U a7 isg Dt. 20-10-2014
|* Print Revision value
|
|* ID: ISGEC001139, IT0327, Ritu Shrivastava, VRC B61U a7 isg Dt. 31-10-2014
|* To print proper amount value for child item
|*
|* ISGECDV001165, IT0205, Arjit Gupta, VRC B61U a7 live, Dt. 18-11-2014
|* If Child Item is Standard then Text will be printed from Item General.
|*
|* ISGECDV001168, IT0205, Arjit Gupta, VRC B61U a7 live, Dt. 20-11-2014
|* Print Reason for Modification of Current Revision.
|*
|* ISGECDV001198, IT0205, Arjit Gupta, VRC B61U a7 live, Dt. 11-12-2014
|* Import order and Revision when called from tdisg0189m000, tdisg0186m000.

|* ISG10102, IT0289, Shilpa Janardanan, VRC B61U a7 live, Dt. 19-12-2014
|* ST Rate calculation 

|* ID ISGEC0134
|* Manish Kumar
|* 30-01-2015
|* Changes for Document and referenc Number Printing on report.
|*
|* ISGEC01057, IT0289, Shilpa Janardanan, VRC B61U a7 live, Dt. 19-02-2015
|* ST Rate calculation 
|*
|* IDENT ISGEC001164, IT0301, Ritu Sharma, VRC B61U a7 isg Dt. 24-02-2015 
|* Modifications to calculate LST tax
|* IDENT ,IT0387 ,Radheshyam VRC B61U a7 isg,25-02-2015  add cost component field in report 
|
|* IDENT ISGEC01075, IT0289, Shilpa Janardanan, VRC B61U a7 isg Dt. 05-03-2015 
|* Initialising LD Date  
|******************************************************************************
|* IDENT PATCH002026, IT0376, Mani sharma, VRC B61U a7 isg Dt. 03.04.2015
|* Add user and  name on report


|* IDENT ISGEC015006, Shilpa Janardanan, VRC B61U a7 isg Dt. 16.05.2015
|* LD date not getting printed properly
|* Functional - Mamta

|* ISGEC015019,Radheshyam, 23-06-2015, VRC B61U a7 isg
|* Modification in report layout
|* Size of PO quantity increased, Sample Packing list removed, changes in header
|*
|* IDENT ISGEC015035, Ankit Sharma, VRC B61U a7 isg Dt. 31.07.2015
|* Change filter logic on version
|*
|* IDENT ISGEC015039, Shilpa Janardanan, VRC B61U a7 isg Dt.17-08-2015
|* Amount printing as zero for lower version
|*
|* ID ISGEC015084, Manish Manchanda, 2016-02-05
|* new logic for QAP data.
|*
|* ID ISGEC015086, Manish Manchanda, 2016-03-01
|* MOdification in City2,  description and zip code logic
|*
|* ID : ISGECFIN012, IT0386, Saurabh Dubey, VRC B61U a7 isg Dt. 17.06.2016
|* Krishi Kalyan Cess Logic
|*
|* ISGEC016032, Manish Manchanda, 2016-10-28
|* Modifications - print report to show deleted lines in previous revision as it is. 
|*
|* ISGEC016048, Manish Manchanda, 2016-12-15
|* Modifications - Footer description and Line Description field added.
|*
|* ISGEC017006,Shilpa Janardanan,3/3/2016, VRC B61U 10 mil
|* COrrection for the calculation of total basic amount
|*
|* ISGEC017006, Saurabh Dubey, 13 June 2017
|* GST Related Modificatons
|* Same Variable used for IGST and CGST that were earlier used for Excise and Service 
|* Taxes because user Wants to see their old PO. Since Provision of providing extra column
|* for GST taxes is not available in reports due to space constraints, therefore, only variable for 
|* SGST has been taken new.
|*
|* But considering the future requirements, Variables in script for GST taxes has been 
|* defined and script logic has been commented for now.
|*
|* Modifications in PO Line Quantity Calculation has been completely modified.
|
|* ID: ISGEC01038, Sumit Bansal, 14/08/2017
|* Modifications in GSTIN, CIN No and Heading
|*
|* ID: ISGECMOD011, Gokul Chaurasia, 10-02-2018, VRC B61U a7 isg
|* Printing of workflow status on Audit clearance request form printed with
|* auditable purchase/work orders
|*
|* ID: ISGEC01050, Priya Jindal, 21/2/2018, VRC B61U a7 isg
|* Changes for printing report from payment request session
|*
|* ID: ISGECMOD020, Atul Ojha, 27/03/2018, VRC B61U a7 isg
|* GST Cess Amount added in PO GST Report
|*
|* ID: ISGEC018004, Ritu Shrivastava, 13-08-2018, VRC B61U a7 isg
|* To correct the mismatch basic value in case line is deleted
|****************************** declaration section ***************************
declaration:
	table	ttdpur400
	table	ttdpur401
	table	ttdmsl400
	table	ttcibd001
	table	ttcmcs036
	table	ttcmcs041
	table	ttctax941
	table	ttccom000
	table	ttccom001
	table	tbpmdm001
	table	ttccom130
	table	ttcmcs065
	table	ttctax940
	table	ttcmcs052
	table	ttdmsl500
	table	ttdmsl501
	table	ttcmsl200
	table	ttdisg502
	table	ttclct200
	table	ttcmsl200
	table	ttccom139
	table	ttcmcs143
	table	ttcemm170
	table	ttppdm740
	table	ttdisg002
	table	ttdisg502
	table	tdmisg001
	table	tdmisg003
	table	ttdpur012
	table	ttdpur402
	table	ttdpur201
	table	tdmisg002			|#ISGECDV001067.n
	table	ttdisg400			|#ISGECDV001168.n
	
	table	ttdisg869			|#ISGEC01034.n
	table	ttdisg874			|#ISGEC015084.n
	table	ttcmsl111			|#ISGEC015086.n
	table	ttdmsl502			|#ISGEC016048.n
	table	ttdmsl503			|#ISGEC016048.n
	table	ttpisg122
	table	ttctax400
	table	ttdmsl504
	table	ttttxt010
	
	extern	domain	tcorno	i.orno
	extern	domain	tcsern	i.vrsn,last.vrsn
	extern	domain	tcamnt	iamt.m,exc.amnt,exc.rate,stx.rate,
				stx.amnt,tot.amnt,oth.chg1,oth.chg2
	extern	domain	tcamnt	tot.exc,tot.stx,tot.oth1,tot.oth2,tot.bas,
				cess						|#ISGECMOD020.n
	extern	domain	tcamnt	o.kkcess.rate	|#ISGECFIN012.n
	extern	domain	tcamnt	sgst.amnt, tot.sgst, ind.sgst, sgst.rate,	|#ISGEC017006.n
				cess.amnt, cess.rate				|#ISGECMOD020.n
	extern	domain	tcamnt	cgst.amnt, tot.cgst, ind.cgst, cgst.rate	|#ISGEC017006.n
	extern	domain	tcamnt	igst.amnt, tot.sgst, ind.igst, igst.rate	|#ISGEC017006.n
	extern	domain	tcamnt	ind.exc,ind.stx,ind.oth1,ind.oth2,ind.bas
	extern	domain	tcamnt	tot.oth.stx,oth.stx,oth.exc			|#ISGEC001071.n
	extern	domain	tcwght	iwgt.m
	extern	domain	tcaitm	ialt.m
	extern	domain	tcdsca	oDs1.m,oDs2.m
	extern  domain  tppdm.dscl      aX1a.m 
	extern	domain	tcnama	comp.nama,comp.namb,
				brnc.nama,brnc.namb,brnc.namc,
				vend.nama,vend.namb,vend.namc,
				vend.namd,vend.namf,vend.pstc,
				brnc.namd,sign.nama,sign.desg,
				brnc.city,brnc.state,vend.dsca
	extern	domain 	tccity		brnc.ccit,vend.ccit
	extern	domain	tcmcs.cste	brnc.cste,vend.cste
	extern	domain	tcpstc		brnc.pstc
	extern	domain	tcccty		brnc.ccty,vend.ccty			
	extern  domain  tppdm.s100      pHed.m    | PO Header
	extern  domain  tppdm.s100      pFot.m
	extern  domain  tppdm.s100      aHed.m    | Acknowledgement Header
	extern  domain  tppdm.s100      aBd1.m    | Acknowledgement Body Text Line 1
	extern  domain  tppdm.s100      aBd2.m    | Acknowledgement Body Text Line 2
	extern  domain  tppdm.s100      de1f.m    | PO Header E1 form Text
	extern  domain  tppdm.s100      dcfr.m    | PO Header C form text
	extern	domain	tcncmp	curr.comp
	extern	domain	tctax.txnb.l	brnc.lst,brnc.cst
	extern	domain	tctelp	brnc.telp,vend.telp
	extern	domain	tctefx	brnc.tefx,vend.tefx
	extern	domain	tcpono		line.indc	
	extern boolean highest.vrsn
	string 	borf(5)
	extern domain tcdate	adat.c
	extern	domain	tcsern	alvl.c
	extern	domain	tcsern	prty.c
	extern	domain	tcdsca	qap.c
	extern domain tcdate	qdat.c,ldat.c
	extern	domain	tcqsl1		add.qty
	extern	domain	tcyesno	order.accp.print
	extern domain	tcmcs.str16	prog.name				|ISG001030.n
	extern	domain	tcdsca		rep.refb
	extern	domain	tcccty		var.reas			|#ISGECDV001168.n
	domain	tcpvat		rate	|ISG10102.n
	extern domain   tcnama   name.emp				|PATCH002026.n
	extern domain   tcemno 	log.name
	extern	domain	tcbool	printed					|#ISGEC01034.n
	extern domain tctax.layr.l	layer.temp1,layer.temp2			|#ISGEC001164.n
	extern domain  tcsern  i.version
	
	extern	domain	tcmcs.str300m	v.qapa				|#ISGEC015084.n
	extern	domain	tcmcs.str100m	rep.city2			|#ISGEC015086.n
		domain	tcsern		v.vrsn				|#ISGEC016032.n
		domain	tcpono		v.pono				|#ISGEC016032.n
		domain	tcbool		print.data.not.in.history	|#ISGEC016032.n
	extern	domain	tcmcs.str300m	v.ldes, v.lde2, v.lde3, v.fdes, v.fde2, v.fde3, final.line		|#ISGEC016048.n
	extern	domain	tcmcs.str300m	final.line	
	domain	tcmcs.long		v.count				|#ISGEC016048.n
	domain	tcpono	latest.version				|#ISGEC017006.n
							|#SD04052017.sn
	extern	domain	tcdsca		del.cste.desc, del.ccty.desc	
	extern	domain	tcmcs.cste	del.cste
	extern	domain	tcnamf		del.namf
	extern	domain	tcmcs.str80	del.cadr
	extern	domain	tctax.txnb.l	i.gstn.c.no
	extern	domain	tccprj		temp.cprj
	extern	domain	tccom.cadr	get.cadr
	extern	domain	tcccty		del.ccty
	extern domain	tcmcs.str50	rep.name
	extern domain	tctax.txnb	rep.fovn		|#ISGEC01038.sn
	extern domain	tccom.cadr	rep.otad
	extern	domain	tcmcs.str25	rep.cin			|#ISGEC01038.en
							|#SD04052017.en
							|#ISGECMOD011.sn
	extern	domain	tcdsca		work.flow
	extern	domain	tcdate		re.apdt
		domain	tfgld.user	rep.user
		domain	tcnama		rep.user.nama
	extern	domain	tcmcs.str60	user.name
	extern	domain	tcmcs.str100	comp.namc      |test.n 09-08-2018
							|#ISGECMOD011.en
|****************************** program section ********************************
before.program:								|ISG001030.sn
	import("prog.name$",prog.name)
| 	if strip$(prog.name) = "tdpur4100m900" then			|#ISGECDV001198.o
								|#ISGECDV001198.sn
	on case trim$(prog.name)
		case "tdpur4100m900":	
								|#ISGECDV001198.en
			import("tdpur400.orno",i.orno)
								|#ISGECDV001198.sn
								
								|#ISGEC015035.sn
			select tdmsl400.vrsn from tdmsl400
			where tdmsl400._index1 = {:i.orno}
			order by tdmsl400.vrsn desc
			as set with 1 rows
			selectdo
				i.vrsn = tdmsl400.vrsn	
			endselect				|#ISGEC015035.en				
			break
		case "tdisg0186m000":
			import("tdisg086.orno", i.orno)
			import("tdisg086.revi", i.vrsn)
			break	
		case "tdisg0189m000":
			import("tdisg089.orno", i.orno)
			import("tdisg089.revi", i.vrsn)
			break
								|#ISG01009.sn
		case	"tfisg1201m000":
			import("v.orno",i.orno)
			import("i.vrsn",i.vrsn)
			break
								
		case "tfmsl0520m000":				|ISGEC01050.sn
								
			import("tfmsl020.orno",i.orno)
								
			select tdmsl400.vrsn 
			from	tdmsl400
			where	tdmsl400._index1 = {:i.orno}
			order by tdmsl400.vrsn desc
			as set with 1 rows
			selectdo
				i.vrsn = tdmsl400.vrsn	
			endselect							
			break					|ISGEC01050.en					
	ENDCASE		
								
| 	endif					|#ISGECDV001198.o
										|ISG001030.en	
|****************************** group section **********************************

group.1:
init.group:
   get.screen.defaults()

|****************************** choice section ********************************

choice.cont.process:
on.choice:
   execute(print.data)

choice.print.data:
on.choice:
   if rprt_open() then
       read.main.table()
       rprt_close()
   else
       choice.again()
   endif


|****************************** field section *********************************
field.i.orno:
check.input:
	select tdpur400.orno from tdpur400
	where tdpur400._index1 = {:i.orno}
	as set with 1 rows
	selectdo
	selectempty
		message("Purchase Order not allowed")
		set.input.error("",e)
	endselect
after.input:
										|#ISGEC015035.sn
	select tdmsl400.vrsn from tdmsl400
	where tdmsl400._index1 = {:i.orno}
	order by tdmsl400.vrsn desc
	as set with 1 rows
	selectdo
		i.vrsn = tdmsl400.vrsn	
	endselect								|#ISGEC015035.en
| 	query.extend.where.in.zoom("tdmsl400.orno = "&quoted.string(i.orno))	|#ISGEC015035.n	
	
field.i.vrsn:

check.input:
	select tdmsl400.vrsn from tdmsl400
	where tdmsl400._index1 = {:i.orno,:i.vrsn}
	as set with 1 rows
	selectdo
	selectempty
		message("Version not allowed")
		set.input.error("",e)
	endselect
	
selection.filter:								|#ISGEC015035.sn	
	tdmsl400.orno	=	i.orno						|#ISGEC015035.en
	


	
|****************************** function section ******************************

functions:

function read.main.table()
{
	domain	tccom.cadr	temp.cadr
	domain	tcmcs.str100m	temp.ln01	
	domain	tcmcs.str100m	temp.ln02	
	domain	tcmcs.str100m	temp.ln03	
	domain	tcmcs.str100m	temp.ln04
	domain	tctax.seqn	o.gstn.c	|* ISGEC GSTIN Seq.		
					|#ISGEC01034.sn
	printed = false
	select	tdisg869.*
	from	tdisg869
	where	tdisg869._index1 = {:i.orno}
	and	tdisg869.sele = tcyesno.yes
	selectdo
		if not isspace(tdisg869.refe) then
			printed = true
		endif
	endselect
					|#ISGEC01034.en
	
	curr.comp = get.compnr()
	select	tccom000.cadr,tccom130.*
	from 	tccom130,tccom000
	where	tccom000._index1 = {0,:curr.comp}
	and	tccom000.cadr refers to tccom130
	as set with 1 rows
	selectdo
		comp.nama = tccom130.nama
		comp.namb = tccom130.namb
		comp.namc = trim$(comp.nama) & " " & trim$(comp.namb)			|test.n 09-08-2018
	endselect
	brnc.nama = ""
	brnc.namb = "" 
	brnc.namc = ""
	brnc.telp = ""
	brnc.tefx = ""
	brnc.ccit = ""
	brnc.cste = ""
	brnc.pstc = ""
	brnc.ccty = ""
	brnc.city = ""
	brnc.state = ""
	vend.nama = ""
	vend.namb = "" 
	vend.namc = ""
	vend.telp = ""
	vend.tefx = ""
	vend.namd = ""
	vend.namf = "" 
	vend.pstc = ""
	vend.telp = ""
	vend.tefx = ""
	vend.dsca = ""
	vend.ccit = ""
	vend.cste = ""
	sign.nama = ""
	sign.desg = ""
	pHed.m = "Purchase Order" | Supplier I002, U017
	pFot.m = "PL. SEND BACK THE ATTACHED ACKNOWLEDGEMENT OF PURCHASE ORDER DULY STAMPED AND SIGNED BY SELLER"
|         pFot.m = "Not for use. Purchase Order Not Locked."			| Logic to be checked
	aHed.m = "ORDER ACCEPTANCE"
	highest.vrsn = true
	select tdmsl400.vrsn from tdmsl400
	where tdmsl400._index1 = {:i.orno}
	order by tdmsl400.vrsn desc
	as set with 1 rows
	selectdo
		if tdmsl400.vrsn <> i.vrsn then
			highest.vrsn = false
		endif
	endselect
	order.accp.print = tcyesno.no
	select	tdmsl400.stat,tdmsl400.apby 
	from	tdmsl400
	where	tdmsl400._index1 = {:i.orno,:i.vrsn}
	and	tdmsl400.stat = tcyesno.yes
	as set with 1 rows
	selectdo
		order.accp.print = tcyesno.yes
		select tccom001.nama:sign.nama,
			bpmdm001.jobt:sign.desg
		from tccom001,bpmdm001
		where tccom001._index4 = {:tdmsl400.apby}
		and	tccom001.emno refers to bpmdm001
		as set with 1 rows
		selectdo
		endselect
	endselect
	
	select tdpur400.*,tcmcs065.cadr,
		tdmsl400.vrsn, tdmsl400.apdt, 
		tccom130brnc.nama:brnc.nama,
		tccom130brnc.namb:brnc.namb,
		tccom130brnc.namc:brnc.namc,
		tccom130brnc.telp:brnc.telp,
		tccom130brnc.tefx:brnc.tefx,
		tccom130brnc.ccit:brnc.ccit,
		tccom130brnc.cste:brnc.cste,
		tccom130brnc.pstc:brnc.pstc,
		tccom130brnc.ccty:brnc.ccty,
		tccom130vend.nama:vend.nama,
		tccom130vend.namb:vend.namb,
		tccom130vend.namc:vend.namc,
		tccom130vend.telp:vend.telp,
		tccom130vend.tefx:vend.tefx,
		tccom130vend.namd:vend.namd,
		tccom130vend.namf:vend.namf,
		tccom130vend.pstc:vend.pstc,
		tccom130vend.dsca:vend.dsca,
		tccom130vend.ccty:vend.ccty,
		tccom130vend.ccit:vend.ccit,
		tccom130vend.cste:vend.cste,
		tccom001.nama,bpmdm001.mail,
		tcmcs041.txta,tdpur012.dsca,
		tdmsl400.work,tdmsl400.upby,		|#ISGECMOD011.sn
		tdmsl400.updt,tdmsl400.apby		|#ISGECMOD011.en
	from tdmsl400,tdpur400,tcmcs065,
		tccom130 tccom130brnc,
		tccom130 tccom130vend,
		bpmdm001,tccom001,tcmcs041,
		tdpur012
	where tdmsl400._index1 = {:i.orno,:i.vrsn}
	and	tdmsl400.orno refers to tdpur400
	and	tdpur400.cofc refers to tcmcs065
	and	tcmcs065.cadr refers to tccom130brnc
	and	tdpur400.otad refers to tccom130vend
	and	tdpur400.ccon refers to tccom001 unref clear
	and	tdpur400.cdec refers to tcmcs041
	and	tdpur400.cofc refers to tdpur012
	and	tccom001.emno refers to bpmdm001
	as set with 1 rows
	selectdo
							|#ISGECMOD011.sn
		user.name = ""
		work.flow = enum.descr$("tdmsl.work",tdmsl400.work)
		if tdmsl400.work = tdmsl.work.yes	then
			re.apdt = tdmsl400.updt
			rep.user = tdmsl400.upby
		else
			re.apdt = tdmsl400.apdt
			rep.user = tdmsl400.apby
		endif
		tt.user(rep.user,rep.user.nama)
		user.name = trim$(rep.user) & " " & trim$(rep.user.nama)
							|#ISGECMOD011.en
		rep.otad = tdpur400.otad						|#ISGEC01038.n
		get.var(pid, "tdpur400.cdf_refb", rep.refb)
		if not highest.vrsn then
			select.header.from.history()
		endif
					|#SD04052017.sn
		select	tdpur401.cprj:temp.cprj,
		 	tdpur401.rnso.l:o.gstn.c
		from	tdpur401
		where	tdpur401._index1 = {:i.orno}
		selectdo
		selectempty
			temp.cprj = ""
			o.gstn.c = 0
		endselect
		
								|#ISGEC017006.sn
		select	tctax940.cdf_cadr, tctax940.stpv, tctax940.regn:i.gstn.c.no
		from	tctax940
		where	tctax940._index1 = {:o.gstn.c}
		selectdo
			get.var(pid, "tctax940.cdf_cadr", get.cadr)
		selectempty
			tctax940.stpv = ""
			i.gstn.c.no = ""
			get.cadr = ""
		endselect
		
		select	tccom130.nama:brnc.nama,
			tccom130.namb:brnc.namb,
			tccom130.namc:brnc.namc,
			tccom130.ccit:brnc.city,
			tccom130.telp:brnc.telp,
			tccom130.tefx:brnc.tefx,
			tccom130.ccit:brnc.ccit,
			tccom130.cste:brnc.cste,
			tccom130.pstc:brnc.pstc,
			tccom130.ccty:brnc.ccty
		from	tccom130
		where	tccom130._index1 = {:get.cadr}
		selectdo
		selectempty
			brnc.nama = ""
			brnc.namb = ""
			brnc.namc = ""
			brnc.city = ""
		endselect
								|#ISGEC017006.en
		
		select	tpisg122.*
		from	tpisg122
		where	tpisg122._index1 = {:temp.cprj}
		selectdo
		selectempty
			db.set.to.default(ttpisg122)
		endselect
		
		select	tccom130.ln01:temp.ln01,
		 	tccom130.ln02:temp.ln02,
		 	tccom130.ln03:temp.ln03,
		 	tccom130.ln04:temp.ln04,
			tccom130.cste:del.cste,
			tccom130.ccty:del.ccty
		from	tccom130
		where	tccom130._index1 = {:tpisg122.stad}
		selectdo
			del.cadr = trim$(temp.ln01) & ", " & trim$(temp.ln02) & ", " & trim$(temp.ln03) & " " & trim$(temp.ln04)
		selectempty
			del.cadr = ""
			del.cste = ""
			del.ccty = ""
		endselect
		
		select	tcmcs010.dsca:del.ccty.desc
		from	tcmcs010
		where	tcmcs010._index1 = {:del.ccty}
		selectdo
		selectempty
			del.ccty.desc = ""
		endselect
		
		select	tcmcs143.dsca:del.cste.desc
		from	tcmcs143
		where	tcmcs143._index1 = {:del.ccty, :del.cste}
		selectdo
		selectempty
			del.cste.desc = ""
		endselect
		
| 		select	tctax400.fovn, tctax400.stpv.l						|#ISGEC01038.o
		select	tctax400.fovn, tctax400.stpv.l						|#ISGEC01038.n
| 		from	tctax400								|#ISGEC01038.o
		from	tctax400								|#ISGEC01038.n
		where	tctax400._index1 = {:tdpur400.otbp, :vend.ccty}
		and	tctax400.stpv.l = :vend.cste
		and	tctax400.catg.l	=  tctax.catg.l.gst
		and	tctax400.cadr.l = :rep.otad						|#ISGEC01038.n
		selectdo
			rep.fovn = tctax400.fovn						|#ISGEC01038.n
		selectempty
| 			tctax400.fovn = ""							|#ISGEC01038.o
			rep.fovn = ""								|#ISGEC01038.n
			tctax400.stpv.l = ""
		endselect
					|#SD04052017.en
		

		
						|#ISGECDV001168.sn
		var.reas = ""				
		get.var(pid, "tdpur400.cdf_reas", var.reas)
		select	tdisg400.desc
		from	tdisg400
		where	tdisg400._index1 = {:var.reas}
		selectdo
		selectempty
			tdisg400.desc = ""
		endselect
						|#ISGECDV001168.en
		select tcmcs143.dsca from tcmcs143
		where tcmcs143._index1 = {:brnc.ccty,:brnc.cste}
		as set with 1 rows
		selectdo
		endselect
| 		if isspace(vend.namf) then			|#ISGEC015086.so
| 			vend.namf = vend.dsca
| 		endif						
| 		if isspace(vend.namf) then			
| 			select tccom139.dsca from tccom139	|#ISGEC015086.eo
			select	tccom139.dsca,			|#ISGEC015086.sn
				tccom139.city				
			from	tccom139			|#ISGEC015086.en	
			where tccom139._index1 = {:vend.ccty,:vend.cste,:vend.ccit}
			as set with 1 rows
			selectdo
	| 			vend.namf = tccom139.dsca		|#ISGEC015086.o
			endselect
| 		endif						|#ISGEC015086.o
		select tccom139.dsca from tccom139	
		where tccom139._index1 = {:brnc.ccty,:brnc.cste,:brnc.ccit}
		as set with 1 rows
		selectdo
		endselect
		
		brnc.city = strip$(tccom139.dsca)&"-"&strip$(brnc.pstc) & "," & tcmcs143.dsca
							|#ISGEC015086.sn
		if	trim$(tccom139.city)	=	"DEF"	then
			rep.city2	=	vend.pstc
			vend.pstc	=	""
		else
			rep.city2	=	trim$(vend.ccit)&" - "&vend.pstc
			vend.pstc	=	""
		endif
		
							|#ISGEC015086.en
		if isspace(tdpur400.ccon) then
			tccom001.nama = ""
			bpmdm001.mail = ""
		endif
		
		brnc.lst = ""
		brnc.cst = ""
		last.vrsn = 0
		select tdmsl400.vrsn:last.vrsn 
		from tdmsl400
		where tdmsl400._index1 = {:i.orno}
		order by tdmsl400.vrsn desc
		as set with 1 rows
		selectdo
		endselect
		if strip$(shiftl$(tdpur400.otbp)) = "I002" or strip$(shiftl$(tdpur400.otbp)) = "U017" then
			pHed.m = "Branch Transfer Requisition"
		else
			pHed.m = "Purchase Order"
		endif
		select tcemm170.fcua from tcemm170
		where tcemm170._index1 = {:curr.comp}
		as set with 1 rows
		selectdo
		endselect
		select tdpur401.cprj from tdpur401
		where tdpur401._index1 = {:tdpur400.orno}
		as set with 1 rows
		selectdo
			|#ISGEC0104.sn
			select	tcmcs052.dsca
			from	tcmcs052
			where	tcmcs052._index1 = {:tdpur401.cprj}
			selectdo
			selectempty
				tcmcs052.dsca = ""
			endselect	
			|#ISGEC0104.en
		endselect
		select tppdm740.ccur from tppdm740
		where tppdm740._index1 = {:tdpur401.cprj,:tdpur400.otbp}
		and tppdm740.ccur = :tcemm170.fcua
		as set with 1 rows
		selectdo
			de1f.m = "E1-Form (as applicable)"
			dcfr.m = "C-Form to suppliers (as applicable)"
		selectempty
			de1f.m = ""
			dcfr.m = ""			
		endselect
		
		select tdmsl400.stat,tdmsl400.work,tdmsl400.vrsn,tdmsl400.orno				|PATCH002026.sn
		from    tdmsl400
		where   tdmsl400._index1 = {:i.orno,:i.vrsn}
		selectdo
			if tdmsl400.stat = tcyesno.no and tdmsl400.work = tdmsl.work.no then
				select tdmsl500.logn
				from   tdmsl500
				where  tdmsl500._index1 = {:tdmsl400.orno,:tdmsl400.vrsn}
				selectdo
					if strip$(shiftl$(tdmsl500.logn)) <> "" then
						log.name = tdmsl500.logn
					else
						log.name = ""
					endif	
				selectempty	
					log.name = logname$
				endselect	
			endif
			if tdmsl400.stat = tcyesno.yes and tdmsl400.work = tdmsl.work.completed then
				select tdmsl500.logn
				from    tdmsl500
				where   tdmsl500._index1 = {:tdmsl400.orno,:tdmsl400.vrsn}
				selectdo
					if strip$(shiftl$(tdmsl500.logn)) <> "" then
						log.name = tdmsl500.logn
					else
						log.name = ""
					endif	
				selectempty
					log.name = ""
				endselect	
			endif	
			if tdmsl400.stat = tcyesno.no and tdmsl400.work = tdmsl.work.yes then
				select tdmsl500.logn
				from   tdmsl500
				where  tdmsl500._index1 = {:tdmsl400.orno,:tdmsl400.vrsn}
				selectdo
					if strip$(shiftl$(tdmsl500.logn)) <> "" then
						log.name = tdmsl500.logn
					else
						log.name = ""
					endif	
				selectempty	
					log.name = logname$
				endselect	
			endif
			if tdmsl400.stat = tcyesno.yes and tdmsl400.work = tdmsl.work.yes then
				select tdmsl500.logn
				from   tdmsl500
				where  tdmsl500._index1 = {:tdmsl400.orno,:tdmsl400.vrsn}
				selectdo
					if strip$(shiftl$(tdmsl500.logn)) <> "" then
						log.name = tdmsl500.logn
					else
						log.name = ""
					endif	
				selectempty	
					log.name = logname$
				endselect	
			endif
		endselect
		
		
		
		select ttaad200.name:name.emp					
		from    ttaad200
		where   ttaad200._index1 = {:log.name}
		and     ttaad200._compnr = {000}
 		selectdo
		selectempty
			name.emp = ""
		endselect							|PATCH002026.en
		|*** Locking logic to be implemented  start
| 		if strip$(shiftl$(tdpur400.otbp)) = "I002" or strip$(shiftl$(tdpur400.otbp)) = "U017" then
| 			pHed.m = "Provisional Branch Transfer Requisition"
| 		else
| 			pHed.m = "Provisional Purchase Order"
| 		endif
		|*** Locking logic to be implemented  end
		
| 		if last.vrsn = i.vrsn and tdpur400.hdst = tdpur.hdst.modified or tdpur400.hdst = tdpur.hdst.created then
		if last.vrsn = i.vrsn and order.accp.print <> tcyesno.yes then
| 			pFot.m = "Not for use. Purchase Order Not Locked."
		endif

		if last.vrsn > i.vrsn then
			pFot.m = "This is old revision of Purchase Order. Please refer latest Revision No. : " & str$(last.vrsn)
		endif
		if tdpur400.hdst = tdpur.hdst.cancelled then
			pFot.m = "Please do not refer any revision of this Purchase Order. This Purchase Order is cancelled."
		endif
		select tctax940.regn:brnc.lst
		from tctax940
		where tctax940._index5 = {tcemm.enty.l.pur.office,:tdpur400.cofc}
		and	tctax940.catg = tctax.catg.l.vat
		and	tctax940.efdt <= :tdpur400.odat
		and 	(tctax940.exdt = 0 or tctax940.exdt >= :tdpur400.odat)
		as set with 1 rows
		selectdo
		endselect
		select tctax940.regn:brnc.cst
		from tctax940
		where tctax940._index5 = {tcemm.enty.l.pur.office,:tdpur400.cofc}
		and	tctax940.catg = tctax.catg.l.cst
		and	tctax940.efdt <= :tdpur400.odat
		and 	(tctax940.exdt = 0 or tctax940.exdt >= :tdpur400.odat)
		as set with 1 rows
		selectdo
		endselect
		aBd1.m = "We acknowledge and accept your Purchase Order No. " & str$(tdpur400.orno) & " dated " & 
			  sprintf$("%u(%02d:%02m:%04Y)",tdpur400.odat) & " Rev. " & str$(tdmsl400.vrsn) & " dated " &
			  sprintf$("%u(%02d:%02m:%04Y)",tdmsl400.apdt)
		get.var(pid, "tdpur400.cdf_adat", adat.c)
		get.var(pid, "tdpur400.cdf_alvl", alvl.c)
		get.var(pid, "tdpur400.cdf_prty", prty.c)
		get.var(pid, "tdpur400.cdf_qap", qap.c)
		get.var(pid, "tdpur400.cdf_qdat", qdat.c)
		get.qap.details()						|#ISGEC015084.n
	endselect
	get.po.totals()
	line.indc = 0
	if curr.comp = 200 then							|#ISGEC01038.sn
		rep.cin = "L23423HR1933PLC000097"
	else
		rep.cin = "U29308HR2017PTC067285"
	endif									
	
	rep.name = trim$(brnc.nama) & " " & trim$(brnc.namb)				|#ISGEC01038.en
	rprt_send()
										|#ISGEC016032.sn
	print.data.not.in.history	=	false	
	v.count	=	0
	v.pono	=	0
	latest.version = 0			|#ISGEC017006.	
	select 	tdmsl501.*,
		tcibd001.*,
		tcmcs052.dsca 
	from 	tdmsl501,tcibd001,tcmcs052
	where 	tdmsl501._index1 	= 		{:i.orno,:i.vrsn}
	and	tdmsl501.item 		refers to	tcibd001
	and	tdmsl501.cprj 		refers to 	tcmcs052 unref clear
	selectdo
| 		if not highest.vrsn then
| 		else
			if	tdmsl501.vrsn	=	v.vrsn	and		|#ISGEC016032.sn
				tdmsl501.pono	=	v.pono	then
				v.count	=	v.count	+	1
				continue
			endif
| 		endif
		v.vrsn	=	tdmsl501.vrsn
		v.pono	=	tdmsl501.pono
		v.count	=	v.count	+	1
		latest.version = 0			|#ISGEC017006.
										|#ISGEC016032.en
		select tdpur401.*,tcibd001.*,tcmcs052.dsca 
		from tdpur401,tcibd001,tcmcs052
	| 	where tdpur401._index1 = {:i.orno}					|#ISGEC016032.o
		where tdpur401._index1 = {:i.orno,:tdmsl501.pono}			|#ISGEC016032.n
		and	tdpur401.oltp in (1,4)
		and	tdpur401.item refers to tcibd001
		and	tdpur401.cprj refers to tcmcs052 unref clear
		selectdo
			if not highest.vrsn then
				if not select.line.from.history() then
					continue
				endif
			endif		
	| 		get.var(pid, "tdpur401.cdf_ldat", ldat.c)			|#ISGEC001071.o
	| 		get.ld.date()			|#ISGEC015006.n						|#ISGEC001071.n
			add.qty = 0.0
			if highest.vrsn then
				add.qty = get.additional.qty.from.401()
			else
				add.qty = get.additional.qty.from.501()
			endif
			if isspace(tdpur401.cprj) then
				tcmcs052.dsca = ""
			endif
			
			tdpur401.oamt = (tdpur401.oamt / tdpur401.qoor ) * (add.qty)
			tdpur401.tase.l = (tdpur401.tase.l / tdpur401.qoor ) * (add.qty)
			tdpur401.tasv.l = (tdpur401.tasv.l / tdpur401.qoor ) * (add.qty)
			tdpur401.tass.l = (tdpur401.tass.l / tdpur401.qoor ) * (add.qty)
			tdpur401.tasg.l = (tdpur401.tasg.l / tdpur401.qoor ) * (add.qty)
| 			tdpur401.qoor = tdpur401.qoor + add.qty	|#ISGEC017006.o
			tdpur401.qoor = add.qty			|#ISGEC017006.n
			iamt.m = 0
			exc.amnt = 0
			sgst.amnt = 0	|#ISGEC017006.n
			cess.amnt = 0	|#ISGECMOD020.n
			cgst.rate = 0	
			cgst.amnt = 0	
			igst.rate = 0	
			igst.amnt = 0
			sgst.rate = 0	|#ISGEC017006.n
			cess.rate = 0	|#ISGECMOD020.n
			exc.rate = 0
			stx.rate = 0
			stx.amnt = 0
			o.kkcess.rate = 0	|#ISGECFIN012.n
			tot.amnt = 0
			oth.chg1 = 0
			oth.chg2 = 0
			ialt.m = ""
			aX1a.m = ""
			|#ISGEC0104.sn
			Get_Landed_Cost(tdpur401.orno, tdpur401.pono)
			|#ISGEC0104.en
			|#ISGEC0104.so
				| borf = str$(tdpur401.pono)&"/"&str$(tdpur401.sqnb)
				| select tclct200.* from tclct200
				| where tclct200._index1 = {2}
				| and	tclct200.bobj = :tdpur400.orno
				| and	tclct200.borf = :borf
				| order by tclct200._index1
				| as set with 2 rows
				| selectdo
				| 	if not highest.vrsn then
				| 		select tcmsl200.* from tcmsl200
				| 		where tcmsl200._index1 ={:tclct200.boty,:tclct200.boor,:tclct200.bobj,:tclct200.borf,:tdmsl400.vrsn,:tclct200.lcln}
				| 		as set with 1 rows
				| 		selectdo
				| 			tdmsl.dll0500.move.tcmsl200.to.tclct200()
				| 		endselect
				| 	endif
				| 	if oth.chg1 = 0 then
				| 		oth.chg1 = tclct200.lcam
				| 	else
				| 		oth.chg2 = tclct200.lcam
				| 	endif
				| endselect
			|#ISGEC0104.eo
			if isspace(tdpur401.item(1;9)) then
				select tcibd004.aitc:ialt.m 
				from tcibd004
				where tcibd004._index1 = {"SUP",:tdpur401.otbp,:tdpur401.item}
				as set with 1 rows
				selectdo
				endselect
			endif
			iWgt.m = 0
			if highest.vrsn then
				select sum(tdisg002.wght):iwgt.m from tdisg002
				where tdisg002._index1 = {:tdpur401.orno,:tdpur401.pono}
				and	tdisg002.slct = tcyesno.yes
				and	tdisg002.stat = tcyesno.yes
				selectdo
				endselect
			else
				select sum(tdisg502.wght):iwgt.m from tdisg502
				where tdisg502._index1 = {:tdpur401.orno,:i.vrsn,:tdpur401.pono}
				and	tdisg502.slct = tcyesno.yes
				and	tdisg502.stat = tcyesno.yes
				selectdo
				endselect
			endif
			
	| 		aX1a.m = "Details as per Annexure I(a) attached"
			
			populate.tax.amounts()
										|#ISGEC001071.sn
			exc.amnt = exc.amnt + oth.exc
			stx.amnt = stx.amnt + oth.stx
										|#ISGEC001071.en
										|#ISGEC016048.sn
			get.line.text()
										|#ISGEC016048.en
				
			tot.amnt = tdpur401.oamt + exc.amnt + stx.amnt + oth.chg1 + oth.chg2 
					+ sgst.amnt + cgst.amnt + igst.amnt 	|#ISGEC017006.n
					+ cess.amnt				|#ISGECMOD020.n
			aBd2.m = "for project " & strip$(tdpur401.cprj) & " / " & strip$(tcmcs052.dsca)
			tdpur401.ddta = get.last.ld.date()		|#ISGEC001107.n
			line.indc = 1
			rprt_send()
			line.indc = 2
			send.document.detail()
			line.indc = 3
			send.document.detail()
		selectempty						|#ISGEC016032.sn
			if	last.vrsn	<>	tdmsl501.vrsn	then
				latest.version = tdmsl501.vrsn + 1			|#ISGEC017006.sn
				if check_if_deletedline_exist(tdmsl501.orno,tdmsl501.pono,latest.version) then
					tdmsl.dll0500.move.tdmsl501.to.tdpur401()
					process.data.revision.wise()
				endif						|#ISGEC017006.n	
				
			endif						|#ISGEC016032.en
		endselect
	selectempty						|#ISGEC016032.sn
		print.data.without.history()
		print.data.not.in.history	=	true
	endselect	
| 	v.pono	=	0
	if	highest.vrsn	and	not	print.data.not.in.history	then
		select 	tdpur401.*,
			tcibd001.*,
			tcmcs052.dsca 
		from 	tdpur401,tcibd001,tcmcs052
	 	where 	tdpur401._index1 	= 		{:i.orno}				
		and	tdpur401.oltp 		in 		(1,4)
		and	tdpur401.item 		refers to 	tcibd001
		and	tdpur401.cprj 		refers to 	tcmcs052 unref clear
		selectdo
			if	tdpur401.pono	=	v.pono	then
				continue
			endif
			v.pono	=	tdpur401.pono
			get.line.text()						|#ISGEC016048.n
			select 	tdmsl501.pono
			from 	tdmsl501
			where 	tdmsl501._index1 	= 		{:tdpur401.orno,:i.vrsn,:tdpur401.pono}
			as	set with 1 rows
			selectdo
				if	v.count	=	1	and
					i.vrsn	=	0	then
					process.data.revision.wise()
				endif
			selectempty
				process.data.revision.wise()
			endselect	
		endselect	
	endif	
								|#ISGEC016032.en
}
function send.document.detail()
{
	domain	tccprj		tmp.cprj Fixed	|#ISGECDV001165.n
	
	if highest.vrsn then
		select tdisg002.*,dmisg001.*
		from tdisg002,dmisg001
		where tdisg002._index1 = {:i.orno,:tdpur401.pono}
		and	tdisg002.cmba refers to dmisg001
		and	tdisg002.slct = tcyesno.yes
		and	tdisg002.stat = tcyesno.yes
		selectdo
					|#ISGECDV001067.sn
			select	dmisg002.txtb,
				dmisg002.itmt, dmisg002.oitm			|#ISGECDV001165.n
			from	dmisg002
			where	dmisg002._index1 = {:dmisg001.docn, :dmisg001.revn}
			and	dmisg002.item = :tdisg002.item
			selectdo
								|#ISGECDV001165.sn
				tmp.cprj = ""
				tmp.cprj = string.set$(" ", 9)
				if	trim$(dmisg002.itmt) = "S"	then
					select	tcibd001.txta:dmisg002.txtb
					from	tcibd001
					where	tcibd001._index1 = {:1}
					wherebind(1, tmp.cprj & trim$(dmisg002.oitm))
					selectdo
					selectempty
						dmisg002.txtb = 0
					endselect
				endif	
								|#ISGECDV001165.en
			selectempty
				dmisg002.txtb = 0
			endselect
					|#ISGECDV001067.en
			rprt_send()
			read.child.documents()
		endselect
	else
		select tdisg502.*,dmisg001.*
		from tdisg502,dmisg001
		where tdisg502._index1 = {:i.orno,:i.vrsn,:tdpur401.pono}
		and	tdisg502.cmba refers to dmisg001
		and	tdisg502.slct = tcyesno.yes
		and	tdisg502.stat = tcyesno.yes
		selectdo
			tdmsl.dll0500.move.tdisg502.to.tdisg002()
| 			read.child.documents()	|#ISGEC015039.o
						|#ISGECDV001067.sn
			select	dmisg002.txtb,
				dmisg002.itmt, dmisg002.oitm			|#ISGECDV001165.n
			from	dmisg002
			where	dmisg002._index1 = {:dmisg001.docn, :dmisg001.revn}
			and	dmisg002.item = :tdisg502.item
			selectdo
								|#ISGECDV001165.sn
				tmp.cprj = ""
				tmp.cprj = string.set$(" ", 9)
				if	trim$(dmisg002.itmt) = "S"	then
					select	tcibd001.txta:dmisg002.txtb
					from	tcibd001
					where	tcibd001._index1 = {:1}
					wherebind(1, tmp.cprj & trim$(dmisg002.oitm))
					selectdo
					selectempty
						dmisg002.txtb = 0
					endselect
				endif	
								|#ISGECDV001165.en
			selectempty
				dmisg002.txtb = 0
			endselect
					|#ISGECDV001067.en
					
			tdisg002.qnty = tdisg502.qnty			|#ISGEC001106.sn
			tdisg002.quom = tdisg502.quom
			tdisg002.wght = tdisg502.wght			|#ISGEC001106.en
			
			
			rprt_send()
			read.child.documents()		|#ISGEC015039.n
		endselect
	endif
}
function read.child.documents()
{
	tdisg002.qnty = 0			
	tdisg002.wght = 0
	tdisg002.amnt = 0						|#ISGEC001139.n
	select dmisg003.* from dmisg003
	where dmisg003._index1 = {:tdisg002.docn,:tdisg002.revi}
	selectdo
		dmisg001.dcid = dmisg003.drgn
		dmisg001.dttl = dmisg003.dcfn
		dmisg001.revn = dmisg003.drev			|#ISGEC001120.n
		rprt_send()
	endselect
}
function populate.tax.amounts()
{
	domain	tcamnt		line.tax.amount.array(1, 1)	based
	domain	tcamnt		line.base.amount.array(1, 1)	based
	domain	tccvat		line.tax.code.array(1, 1)	based
	domain	tctax.indt.l	o.line.indirect.tax.array(1, 1)	based
	domain	tctax.indt.l	i.duty.type.array(1, 1)		based
	domain	tcyesno		expensed.tax(1, 1)		based
	domain	tcmcs.s250m	o.comb.output.set(1)		based
	domain	tcpvat		o.tax.rates(1,1)		based
	domain	tcamnt		i.duties.array(1,1)		based
	domain tctax.seqn 	o.maximum.sequence.number
	domain tcamnt 		o.claimable.tax.amount
	domain tcamnt 		o.non.claimable.tax.amount
	domain tcamnt 		o.total.tax.amount
	domain tcamnt 		o.sales.tax
	domain tcmcs.s250m 	o.error.msg mb
	domain	tcamnt		tmp.rate		|#ISGEC0104.n
	domain	tcamnt		temp.1.rate, temp.amnt	|#ISG10102.n
	
	
	tmp.rate = 0					|#ISGEC0104.n
	o.kkcess.rate = 0.00	|#ISGECFIN012.n
	temp.1.rate = 0	|#ISG10102.n
	rate = 0	|#ISG10102.n
	temp.amnt = 0
	tctax.dll9141.determine.aggregate.tax.amounts.per.line( 
						tdpur401.ccty,				| domain tcccty i.tax.country, 
						tdpur401.cvat,				| domain tccvat i.aggregate.tax.code, 
						tdpur401.odat,				| domain tcdate i.tax.date, 
						tdpur401.oamt,				| domain tcamnt i.order.line.price, 
						tdpur401.cuva,				| domain tcamnt i.customs.value, 
						tdpur401.mrpi.l,			| domain tcamnt i.market.retail.price, 
						0.00,					| domain tcamnt i.retail.sales.price, 
						0.00,					| domain tcamnt i.tariff.price, 
						tdpur400.ccur,				| domain tcccur i.price.currency, 
						tdpur400.ratd,				| domain tcdate i.currency.rate.date, 
						tdpur400.ratt,				| domain tcrtyp i.currency.exchange.rate.type, 
						tdpur401.tase.l,			| domain tcpric i.asv.excise, 
						tdpur401.tasv.l,			| domain tcpric i.asv.vat, 
						tdpur401.tass.l,			| domain tcpric i.asv.service.tax, 
						tdpur401.tasg.l,			| domain tcpric i.asv.gst, 
						tdpur401.ddta,				| domain tcdate i.ship.or.receive.date, 
						tcyesno.no,				| domain tcyesno i.as.is.sales, 
						tcyesno.no,				| domain tcyesno i.yesno.flag, 
						i.duty.type.array,			| ref domain tctax.indt.l i.duty.type.array(,), 
						i.duties.array,				| ref domain tcamnt i.duties.array(,), 
						o.tax.rates,				| ref domain tcpvat o.tax.rates(,), 
						o.maximum.sequence.number,		| ref domain tctax.seqn o.maximum.sequence.number, 
						line.base.amount.array,			| ref domain tcamnt o.line.base.amount.array(,), 
						line.tax.amount.array,			| ref domain tcamnt o.line.tax.amount.array(,), 
						line.tax.code.array,			| ref domain tccvat o.line.tax.code.array(,) fixed, 
						o.line.indirect.tax.array,		| ref domain tctax.indt.l o.line.indirect.tax.array(,), 
						expensed.tax,				| ref domain tcyesno o.expensed.tax(,), 
						o.claimable.tax.amount,			| ref domain tcamnt o.claimable.tax.amount, 
						o.non.claimable.tax.amount,		| ref domain tcamnt o.non.claimable.tax.amount, 
						o.total.tax.amount,			| ref domain tcamnt o.total.tax.amount, 
						o.sales.tax,				| ref domain tcamnt o.sales.tax, 
						o.comb.output.set,			| ref domain tcmcs.s250m o.comb.output.set() fixed mb, 
						o.error.msg)				| ref domain tcmcs.s250m o.error.msg mb )
	select tctax941.*,tcmcs036.*
	from tctax941,tcmcs036
	where tctax941._index1 = {:tdpur401.ccty,:tdpur401.cvat}
	and	tctax941.type = 20		|tctax.type.l.tax
	and	tctax941.cmbb refers to tcmcs036
	selectdo
		on case tcmcs036.indt.l
		case	tctax.indt.l.kk.cess:	|#ISGECFIN012.n
		case	tctax.indt.l.bed:
		case	tctax.indt.l.service:			|#ISGEC0104.n
		case	tctax.indt.l.igst:	|#ISGEC017006.n
			exc.amnt = exc.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)
| 			exc.rate = o.tax.rates(tctax941.layr,tctax941.seqn)		|#ISGECFIN012.o		
			exc.rate = exc.rate + o.tax.rates(tctax941.layr,tctax941.seqn)	|#ISGECFIN012.n	
			tmp.rate = exc.rate			|#ISGEC0104.n
			break
		case	tctax.indt.l.aed:	
		case	tctax.indt.l.sed:	
		case	tctax.indt.l.e.cess.excise:	
		case	tctax.indt.l.e.cess.service:		|#ISGEC0104.n	
		case	tctax.indt.l.hse.cess.excise:
		case	tctax.indt.l.hse.cess.servic:		|#ISGEC0104.n
			exc.amnt = exc.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)
| 			exc.rate = exc.rate + o.tax.rates(tctax941.layr,tctax941.seqn)/10	|#ISGEC0104.o
			exc.rate = exc.rate + (tmp.rate * o.tax.rates(tctax941.layr,tctax941.seqn))/100	|#ISGEC0104.n
			break
			
		case	tctax.indt.l.sgst:								|#ISGEC017006.sn
		case	tctax.indt.l.utgst:								
			sgst.rate = sgst.rate + o.tax.rates(tctax941.layr,tctax941.seqn)
			sgst.amnt = sgst.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)
			break
			
| 		case	tctax.indt.l.cgst:							
| 			cgst.rate = cgst.rate + o.tax.rates(tctax941.layr,tctax941.seqn)
| 			cgst.amnt = cgst.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)
| 			break	
				
| 		case	tctax.indt.l.igst:							
| 			igst.rate = igst.rate + o.tax.rates(tctax941.layr,tctax941.seqn)
| 			igst.amnt = igst.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)
			break			
									|#ISGEC017006.en
													|#ISGECMOD020.sn	
		case	tctax.indt.l.gstcess:
			cess.amnt = cess.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)
			cess.rate = cess.rate + o.tax.rates(tctax941.layr,tctax941.seqn)
			break
													|#ISGECMOD020.en			
		default:
| 			stx.amnt = stx.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)	|#ISG10102.o
| 			stx.rate = o.tax.rates(tctax941.layr,tctax941.seqn)				|#ISG10102.o
			
			rate = rate + 1		|#ISG10102.sn
			if rate =  1 then
				stx.amnt = stx.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)
				stx.rate = o.tax.rates(tctax941.layr,tctax941.seqn)
				temp.1.rate = stx.rate
				get.layer(layer.temp1)	|#ISGEC001164.n
				
				
			else
| 				if tctax941.lr06 = tcyesno.no	then						|#ISGEC001164.so to test
| 					stx.rate = stx.rate + o.tax.rates(tctax941.layr,tctax941.seqn)
| 					stx.amnt = stx.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)
| 				else										|#ISGEC001164.eo
					get.layer(layer.temp2)	|#ISGEC001164.sn
					if layer.temp1 = layer.temp2 then
						stx.amnt = stx.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)			
						stx.rate = stx.rate + o.tax.rates(tctax941.layr,tctax941.seqn)
					else			|#ISGEC001164.en
						
						stx.amnt = stx.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)			
						stx.rate = stx.rate + (temp.1.rate * o.tax.rates(tctax941.layr,tctax941.seqn))/100	|#ISG10102.n
					endif					|#ISGEC001164.n	
| 				endif										|#ISGEC001164.o					
			endif			|#ISG10102.en
		endcase
		
	endselect
}

function select.header.from.history()
{
	select tdmsl500.*,tcmcs065.cadr,
		tccom130brnc.nama:brnc.nama,
		tccom130brnc.namb:brnc.namb,
		tccom130brnc.namc:brnc.namc,
		tccom130brnc.telp:brnc.telp,
		tccom130brnc.tefx:brnc.tefx,
		tccom130brnc.ccit:brnc.ccit,
		tccom130brnc.cste:brnc.cste,
		tccom130brnc.pstc:brnc.pstc,
		tccom130brnc.ccty:brnc.ccty,
		tccom130vend.nama:vend.nama,
		tccom130vend.namb:vend.namb,
		tccom130vend.namc:vend.namc,
		tccom130vend.telp:vend.telp,
		tccom130vend.tefx:vend.tefx,
		tccom130vend.namd:vend.namd,
		tccom130vend.namf:vend.namf,
		tccom130vend.pstc:vend.pstc,
		tccom130vend.dsca:vend.dsca,
		tccom130vend.ccty:vend.ccty,
		tccom130vend.ccit:vend.ccit,
		tccom130vend.cste:vend.cste,
		tccom001.nama,bpmdm001.mail,
		tcmcs041.txta,tdpur012.dsca
		
	from tdmsl500,tcmcs065,
		tccom130 tccom130brnc,
		tccom130 tccom130vend,
		bpmdm001,tccom001,tcmcs041,tdpur012
	where tdmsl500._index1 = {:i.orno,:i.vrsn}
	and	tdmsl500.cofc refers to tcmcs065
	and	tcmcs065.cadr refers to tccom130brnc
	and	tdmsl500.otad refers to tccom130vend
	and	tdmsl500.ccon refers to tccom001 unref clear
	and	tdmsl500.cdec refers to tcmcs041
	and	tdmsl500.cofc refers to tdpur012
	as set with 1 rows
	selectdo
		tdmsl.dll0500.move.tdmsl500.to.tdpur400()
	endselect
}
function long select.line.from.history()
{
	select tdmsl501.*,tcibd001.*,tcmcs052.dsca 
	from tdmsl501,tcibd001,tcmcs052
	where tdmsl501._index1 = {:i.orno,:i.vrsn,:tdpur401.pono}
	and	tdmsl501.item refers to tcibd001
	and	tdmsl501.cprj refers to tcmcs052 unref clear
	as set with 1 rows
	selectdo
		select	tdmsl504.*
		from	tdmsl504
		where	tdmsl504._index1 = {:i.orno, :i.vrsn, :tdpur401.pono}
		selectdo
		selectempty
			db.set.to.default(ttdmsl504)
		endselect
		
		tdmsl.dll0500.move.tdmsl501.to.tdpur401()
	selectempty
		return(0)
	endselect
	return(1)
}

function domain tcqsl1	get.additional.qty.from.401()
{
	domain tcqsl1 ord.qty,app.qty,diff.qty,bac.qty
	domain tcqsl1 final.rcpt.qnty, non.final.rcpt.qnty	|#ISGEC017006.n
	ord.qty = 0
	app.qty = 0
	bac.qty = 0
	diff.qty = 0
	non.final.rcpt.qnty = 0	|#ISGEC017006.n
	final.rcpt.qnty = 0	|#ISGEC017006.n
						|#ISGEC017006.so
| 	select atdpur401.qoor:ord.qty,atdpur401.qiap:app.qty,
| 		atdpur401.qibo:bac.qty
| 	from tdpur401 atdpur401
| 	where atdpur401._index1 = {:tdpur401.orno,:tdpur401.pono}
| 	and atdpur401.oltp = 1
| 	selectdo
| 		diff.qty = diff.qty + bac.qty - (ord.qty - app.qty)
| 	endselect
						|#ISGEC017006.eo
						
					|#ISGEC017006.sn
	select	sum(tdpur401.qidl):final.rcpt.qnty
	from 	tdpur401 
	where 	tdpur401._index1 = {:tdpur401.orno, :tdpur401.pono}
	and	tdpur401.oltp <> 1		|* Not Total Line Type
	and	tdpur401.clyn <> tcyesno.yes 	|* Not Consider Cancelled PO Line
	selectdo
	selectempty
		final.rcpt.qnty = 0.00
	endselect
	
	select	sum(tdpur401.qidl):non.final.rcpt.qnty,
		sum(tdpur401.qoor):ord.qty
	from 	tdpur401 
	where 	tdpur401._index1 = {:tdpur401.orno, :tdpur401.pono}
	and	tdpur401.fire = tcyesno.no
	and	tdpur401.oltp <> 1		|* Not Total Line Type
	and	tdpur401.clyn <> tcyesno.yes 	|* Not Consider Cancelled PO Line
	selectdo
	selectempty
		ord.qty = 0.00
		non.final.rcpt.qnty = 0.00
	endselect
	
	diff.qty = final.rcpt.qnty + (ord.qty - non.final.rcpt.qnty)
					|#ISGEC017006.en
	return(diff.qty)
}
function domain tcqsl1	get.additional.qty.from.501()
{
	domain tcqsl1 ord.qty,app.qty,diff.qty,bac.qty
	domain tcqsl1 final.rcpt.qnty, non.final.rcpt.qnty	|#ISGEC017006.n
	ord.qty = 0
	app.qty = 0
	bac.qty = 0
	non.final.rcpt.qnty = 0	|#ISGEC017006.n
	final.rcpt.qnty = 0	|#ISGEC017006.n
					|#ISGEC017006.so
| 	select atdmsl501.qoor:ord.qty,atdmsl501.qiap:app.qty,
| 		atdmsl501.qibo:bac.qty
| 	from tdmsl501 atdmsl501
| 	where atdmsl501._index1 = {:tdpur401.orno,:i.vrsn, :tdpur401.pono}
| 	and atdmsl501.oltp = 1
| 	selectdo
| 		diff.qty = diff.qty + bac.qty - (ord.qty - app.qty)
| 	endselect
					|#ISGEC017006.eo
					
					|#ISGEC017006.sn
	select	sum(tdmsl501.qidl):final.rcpt.qnty
	from 	tdmsl501 
	where 	tdmsl501._index1 = {:tdpur401.orno,:i.vrsn, :tdpur401.pono}
	and	tdmsl501.oltp <> 1		|* Not Total Line Type
	and	tdmsl501.clyn <> tcyesno.yes 	|* Not Consider Cancelled PO Line
	selectdo
	selectempty
		final.rcpt.qnty = 0.00
	endselect
	
	select	sum(tdmsl501.qidl):non.final.rcpt.qnty,
		sum(tdmsl501.qoor):ord.qty
	from 	tdmsl501 
	where 	tdmsl501._index1 = {:tdpur401.orno,:i.vrsn, :tdpur401.pono}
	and	tdmsl501.fire = tcyesno.no
	and	tdmsl501.oltp <> 1		|* Not Total Line Type
	and	tdmsl501.clyn <> tcyesno.yes 	|* Not Consider Cancelled PO Line
	selectdo
	selectempty
		ord.qty = 0.00
		non.final.rcpt.qnty = 0.00
	endselect
	
	diff.qty = final.rcpt.qnty + (ord.qty - non.final.rcpt.qnty)
					|#ISGEC017006.en
	return(diff.qty)
}
function get.po.totals()
{	
	v.vrsn = 0			|MUDIT.n
	v.pono = 0			|MUDIT.n
	tot.exc = 0
	tot.sgst = 0	|#ISGEC017006.n
	tot.cgst = 0	|#ISGEC017006.n
	tot.sgst = 0	|#ISGEC017006.n
	tot.stx = 0
	tot.oth1 = 0
	tot.oth2 = 0
	tot.bas = 0
	cess = 0	|#ISGECMOD020.n	
	ind.exc = 0
	ind.stx = 0
	ind.oth1 = 0
	ind.oth2 = 0
	ind.bas = 0
	print.data.not.in.history	=	false
	select 	tdmsl501.*,								|#ISGEC016032.sn (Shilpa)
		tcibd001.*,
		tcmcs052.dsca 
	from 	tdmsl501,tcibd001,tcmcs052
	where 	tdmsl501._index1 	= 		{:i.orno,:i.vrsn}
	and	tdmsl501.item 		refers to	tcibd001
	and	tdmsl501.cprj 		refers to 	tcmcs052 unref clear
	selectdo
| 		if not highest.vrsn then
| 				else		
			if	tdmsl501.vrsn	=	v.vrsn	and
				tdmsl501.pono	=	v.pono	then
				continue
			endif
			v.vrsn	=	tdmsl501.vrsn
			v.pono	=	tdmsl501.pono
| 		endif											|#ISGEC016032.en (Shilpa)
	
		latest.version = 0
	select tdpur401.* 
	from tdpur401
| 	where tdpur401._index1 = {:i.orno}
	where tdpur401._index1 = {:i.orno,:tdmsl501.pono}			|#ISGEC016032.n
	and	tdpur401.oltp in (1,4)
	selectdo
		if not highest.vrsn then
			if not select.line.from.history() then
				continue
			endif
		endif		
		select tdpur402.rqno,tdpur402.rqpo,tdpur201.*
		from tdpur402,tdpur201
		where tdpur402._index1 = {:tdpur401.orno,:tdpur401.pono,:tdpur401.sqnb}
		and tdpur402.cmbe refers to tdpur201
		as set with 1 rows
		selectdo
			ind.exc = 0
			ind.stx = 0
			ind.oth1 = 0
			ind.oth2 = 0
			ind.bas = ind.bas + tdpur201.oamt			
		endselect
		add.qty = 0.0
		
		if highest.vrsn then
			add.qty = get.additional.qty.from.401()
		else
			add.qty = get.additional.qty.from.501()
		endif
		
		tdpur401.oamt = (tdpur401.oamt / tdpur401.qoor ) * (add.qty)
		tdpur401.tase.l = (tdpur401.tase.l / tdpur401.qoor ) * (add.qty)
		tdpur401.tasv.l = (tdpur401.tasv.l / tdpur401.qoor ) * (add.qty)
		tdpur401.tass.l = (tdpur401.tass.l / tdpur401.qoor ) * (add.qty)
		tdpur401.tasg.l = (tdpur401.tasg.l / tdpur401.qoor ) * (add.qty)
| 		tdpur401.qoor = tdpur401.qoor + add.qty	|#ISGEC017006.o
		tdpur401.qoor = add.qty			|#ISGEC017006.n
		iamt.m = 0
		exc.amnt = 0
		sgst.amnt = 0	|#ISGEC017006.sn
		cgst.amnt = 0	
		igst.amnt = 0	|#ISGEC017006.en
		exc.rate = 0
		stx.rate = 0
		sgst.rate = 0	|#ISGEC017006.sn
		cgst.rate = 0
		igst.rate = 0	|#ISGEC017006.en
		stx.amnt = 0
		tot.amnt = 0
		oth.chg1 = 0
		oth.chg2 = 0
		cess.amnt = 0	|#ISGECMOD020.sn
		cess.rate = 0	|#ISGECMOD020.en
		
		|#ISGEC0104.sn
		rate = 0		|#ISG10102.n
		
		Get_Landed_Cost(tdpur401.orno, tdpur401.pono)
		|#ISGEC0104.en
		|#ISGEC0104.so
			| borf = str$(tdpur401.pono)&"/"&str$(tdpur401.sqnb)
			| select tclct200.* from tclct200
			| where tclct200._index1 = {2}
			| and	tclct200.bobj = :tdpur400.orno
			| and	tclct200.borf = :borf
			| order by tclct200._index1
			| as set with 2 rows
			| selectdo
			| 	if not highest.vrsn then
			| 		select tcmsl200.* from tcmsl200
			| 		where tcmsl200._index1 ={:tclct200.boty,:tclct200.boor,:tclct200.bobj,:tclct200.borf,:tdmsl400.vrsn,:tclct200.lcln}
			| 		as set with 1 rows
			| 		selectdo
			| 			tdmsl.dll0500.move.tcmsl200.to.tclct200()
			| 		endselect
			| 	endif
			| 	if oth.chg1 = 0 then
			| 		oth.chg1 = tclct200.lcam
			| 	else
			| 		oth.chg2 = tclct200.lcam
			| 	endif
			| endselect
		|#ISGEC0104.eo
		populate.tax.amounts()
								|#ISGEC001071.so
| 		tot.exc = tot.exc + exc.amnt 
| 		tot.stx = tot.stx + stx.amnt 
								|#ISGEC001071.eo
								|#ISGEC001071.sn
		tot.exc = tot.exc + exc.amnt + oth.exc
 		tot.stx = tot.stx + stx.amnt + oth.stx
		tot.sgst = tot.sgst + sgst.amnt	|#ISGEC017006.n
		tot.cgst = tot.cgst + cgst.amnt	|#ISGEC017006.n
		tot.sgst = tot.sgst + igst.amnt	|#ISGEC017006.n
								|#ISGEC001071.en
		tot.oth1 = tot.oth1 + oth.chg1
		tot.oth2 = tot.oth2 + oth.chg2
		cess = cess + cess.amnt				|#ISGECMOD020.n
| 		tot.bas = tot.bas + tdpur401.oamt			|#ISGEC016032.sn (Shilpa)

		if not highest.vrsn then	
| 			get.total.from.history()		|#ISGEC017006.o
| 			tot.bas = tot.bas + (tdmsl501.oamt / tdmsl501.qoor ) * (tdmsl501.qoor + add.qty)	|#ISGEC017006.n
			tot.bas = tot.bas + (tdmsl501.oamt / tdmsl501.qoor ) * (add.qty)	|#ISGEC017006.n
		else
			tot.bas = tot.bas + tdpur401.oamt
		endif
									|#ISGEC016032.en (Shilpa)
| 		tot.amnt = tdpur401.oamt + exc.amnt + stx.amnt + oth.chg1 + oth.chg2 				|#ISGEC001071.n
 		tot.amnt = tdpur401.oamt + exc.amnt + stx.amnt + oth.chg1 + oth.chg2 + oth.exc + oth.stx + 	|#ISGEC001071.o
				 + sgst.amnt + cgst.amnt + igst.amnt + cess.amnt		|#ISGEC017.n
	selectempty								|#ISGEC016032.sn (Shilpa)
		if	last.vrsn	<>	tdmsl501.vrsn	then
			exc.amnt = 0
			stx.amnt = 0
			sgst.amnt = 0	|#ISGEC017006.sn
			cgst.amnt = 0	
			igst.amnt = 0	|#ISGEC017006.en
			cess.amnt = 0   |#ISGECMOD020.n    
			oth.exc  = 0
			oth.stx = 0
			latest.version = tdmsl501.vrsn + 1			|#ISGEC017006.sn
			if check_if_deletedline_exist(tdmsl501.orno,tdmsl501.pono,latest.version) then
				tdmsl.dll0500.move.tdmsl501.to.tdpur401()
				populate.tax.amounts()
				tot.exc = tot.exc + exc.amnt + oth.exc		
				tot.stx = tot.stx + stx.amnt + oth.stx
				tot.sgst = tot.sgst + sgst.amnt	|#ISGEC017006.n
				tot.cgst = tot.cgst + cgst.amnt	|#ISGEC017006.n
				tot.sgst = tot.sgst + igst.amnt	|#ISGEC017006.n
				cess = cess + cess.amnt		|#ISGECMOD020.n
				if not highest.vrsn then	
	| 				get.total.from.history()		|#ISGEC017006.o
| 					tot.bas = tot.bas + (tdmsl501.oamt / tdmsl501.qoor ) * (tdmsl501.qoor + add.qty)	|#ISGEC017006.N
| 					tot.bas = tot.bas + (tdmsl501.oamt / tdmsl501.qoor ) * (add.qty)	|#ISGEC017006.N		|#ISGEC018004.o
					tot.bas = tot.bas + (tdmsl501.oamt)	|#ISGEC017006.N								|#ISGEC018004.n
				else
					tot.bas = tot.bas + tdpur401.oamt	
				endif
				tot.amnt = tdpur401.oamt + exc.amnt + stx.amnt + oth.chg1 + oth.chg2 + oth.exc + oth.stx + 
					sgst.amnt + cgst.amnt + igst.amnt + cess.amnt	|#ISGEC017006.n
			endif
			
		endif								|#ISGEC016032.en (Shilpa)
	endselect
	selectempty						|#ISGEC016032.sn
		print.total.data.without.history()
		print.data.not.in.history	=	true
	endselect		|#ISGEC016032.en (Shilpa)
	v.vrsn	= 0
	v.pono	= 0
	if	highest.vrsn	and	not	print.data.not.in.history	then
		select 	tdpur401.*
		from 	tdpur401
	 	where 	tdpur401._index1 	= 		{:i.orno}				
		and	tdpur401.oltp 		in 		(1,4)
		selectdo
			if	tdpur401.pono	=	v.pono	then
				continue
			endif
			v.pono	=	tdpur401.pono
			select 	tdmsl501.pono
			from 	tdmsl501
			where 	tdmsl501._index1 	= 		{:tdpur401.orno,:i.vrsn,:tdpur401.pono}
			as	set with 1 rows
			selectdo
			selectempty						
				select 	tdpur402.rqno,
					tdpur402.rqpo,
					tdpur201.*
				from 	tdpur402,tdpur201
				where 	tdpur402._index1 	= 		{:tdpur401.orno,:tdpur401.pono,:tdpur401.sqnb}
				and 	tdpur402.cmbe 		refers to 	tdpur201
				as 	set with 1 rows
				selectdo
					ind.exc 	= 	0
					ind.stx 	= 	0
					ind.oth1 	= 	0
					ind.oth2 	= 	0
					ind.bas 	= 	ind.bas + tdpur201.oamt			
				endselect
				add.qty 	= 	0.0
				if 	highest.vrsn 	then
					add.qty 	= 	get.additional.qty.from.401()
				else
					add.qty 	= 	get.additional.qty.from.501()
				endif
				
				tdpur401.oamt 		= 	(tdpur401.oamt / tdpur401.qoor ) * (add.qty)
				tdpur401.tase.l 	= 	(tdpur401.tase.l / tdpur401.qoor ) * (add.qty)
				tdpur401.tasv.l 	= 	(tdpur401.tasv.l / tdpur401.qoor ) * (add.qty)
				tdpur401.tass.l 	= 	(tdpur401.tass.l / tdpur401.qoor ) * (add.qty)
| 				tdpur401.qoor = tdpur401.qoor + add.qty	|#ISGEC017006.o
				tdpur401.qoor = add.qty			|#ISGEC017006.n
				iamt.m 			=	0
				exc.amnt 		= 	0
				sgst.amnt 		= 	0	|#ISGEC017006.sn
				cgst.amnt 		= 	0	
				igst.amnt 		= 	0	|#ISGEC017006.en
				exc.rate 		= 	0
				stx.rate 		= 	0
				sgst.rate 		= 	0	|#ISGEC017006.sn
				cgst.rate 		= 	0	
				igst.rate 		= 	0	|#ISGEC017006.en
				stx.amnt 		= 	0
				tot.amnt 		=	0
				oth.chg1 		= 	0
				oth.chg2 		= 	0
				rate 			= 	0
				cess.amnt		= 	0	|#ISGECMOD020.sn
				cess.rate		=	0	|#ISGECMOD020.en	
				
				Get_Landed_Cost(tdpur401.orno, tdpur401.pono)
				populate.tax.amounts()
										
				tot.exc 	= 	tot.exc + exc.amnt + oth.exc
				tot.stx 	= 	tot.stx + stx.amnt + oth.stx
				tot.sgst = tot.sgst + sgst.amnt	|#ISGEC017006.sn
				tot.cgst = tot.cgst + cgst.amnt	
				tot.sgst = tot.sgst + igst.amnt	|#ISGEC017006.en
										
				tot.oth1 	= 	tot.oth1 + oth.chg1
				tot.oth2 	= 	tot.oth2 + oth.chg2
				
				cess		=	cess + cess.amnt	|#ISGECMOD020.n

				if 	not highest.vrsn 	then	
| 					get.total.from.history()		|#ISGEC017006.o
| 					tot.bas = tot.bas + (tdmsl501.oamt / tdmsl501.qoor ) * (tdmsl501.qoor + add.qty)	|#ISGEC017006.n
					tot.bas = tot.bas + (tdmsl501.oamt / tdmsl501.qoor ) * (add.qty)	|#ISGEC017006.n
				else
					tot.bas 	= 	tot.bas + tdpur401.oamt
				endif

				tot.amnt 	= 	tdpur401.oamt + exc.amnt + stx.amnt + oth.chg1 + oth.chg2 + oth.exc + oth.stx + 
							sgst.amnt + cgst.amnt + igst.amnt  + cess.amnt	|#ISGEC017006.n
			endselect	
		endselect	
	endif	
}

|#ISGEC0104.sn
function Get_Landed_Cost(domain tcorno		im.orno,
			domain	tcpono		im.pono)
{
	domain	tcpono	tmp.sqnb
	string	tmp.borf(5), prv.borf(5)
	
	oth.chg1 = 0
	oth.chg2 = 0
	oth.stx = 0					|#ISGEC001071.sn
	oth.exc = 0					|#ISGEC001071.en
	select	a_tdpur401.sqnb:tmp.sqnb 
	from	tdpur401 a_tdpur401
	where	a_tdpur401._index1 = {:im.orno, :im.pono}
	and	a_tdpur401.oltp in (2,3,4)
	selectdo
		tmp.borf = str$(im.pono)&"/"&str$(tmp.sqnb)
		select	tclct200.* from tclct200
		where	tclct200._index1 = {2}
		and	tclct200.bobj = :im.orno
		and	tclct200.borf = :tmp.borf
		order by tclct200._index1
		as set with 2 rows
		selectdo
			if not highest.vrsn then
				select	tcmsl200.*
				from	tcmsl200
				where	tcmsl200._index1 ={:tclct200.boty,:tclct200.boor,:tclct200.bobj,:tclct200.borf,:tdmsl400.vrsn,:tclct200.lcln}
				as set with 1 rows
				selectdo
					tdmsl.dll0500.move.tcmsl200.to.tclct200()
				endselect
			endif
			if	tmp.borf <> prv.borf	then
				prv.borf = tmp.borf
				oth.chg1 = oth.chg1 + tclct200.lcam
			else
				oth.chg2 = oth.chg2 + tclct200.lcam
			endif	
			calculate.oth.tax.amounts()			|#ISGEC001071.n
			
			| if oth.chg1 = 0 then
			| 	oth.chg1 = tclct200.lcam
			| else
			| 	oth.chg2 = tclct200.lcam
			| endif
			
		endselect
	endselect	
}
|#ISGEC0104.en
							|#ISGEC001071.sn

function calculate.oth.tax.amounts()
{
	domain	tcamnt		line.tax.amount.array(1, 1)	based
	domain	tcamnt		line.base.amount.array(1, 1)	based
	domain	tccvat		line.tax.code.array(1, 1)	based
	domain	tctax.indt.l	o.line.indirect.tax.array(1, 1)	based
	domain	tctax.indt.l	i.duty.type.array(1, 1)		based
	domain	tcyesno		expensed.tax(1, 1)		based
	domain	tcmcs.s250m	o.comb.output.set(1)		based
	domain	tcpvat		o.tax.rates(1,1)		based
	domain	tcamnt		i.duties.array(1,1)		based
	domain tctax.seqn 	o.maximum.sequence.number
	domain tcamnt 		o.claimable.tax.amount
	domain tcamnt 		o.non.claimable.tax.amount
	domain tcamnt 		o.total.tax.amount
	domain tcamnt 		o.sales.tax
	domain tcmcs.s250m 	o.error.msg mb
	if isspace(tclct200.cvat) then
		return
	endif
	tctax.dll9141.determine.aggregate.tax.amounts.per.line( 
						tdpur401.ccty,				| domain tcccty i.tax.country, 
						tclct200.cvat,				| domain tccvat i.aggregate.tax.code, 
						tdpur401.odat,				| domain tcdate i.tax.date, 
						tdpur401.oamt,				| domain tcamnt i.order.line.price, 
						tdpur401.cuva,				| domain tcamnt i.customs.value, 
						tdpur401.mrpi.l,			| domain tcamnt i.market.retail.price, 
						0.00,					| domain tcamnt i.retail.sales.price, 
						0.00,					| domain tcamnt i.tariff.price, 
						tdpur400.ccur,				| domain tcccur i.price.currency, 
						tdpur400.ratd,				| domain tcdate i.currency.rate.date, 
						tdpur400.ratt,				| domain tcrtyp i.currency.exchange.rate.type, 
						tclct200.lcam,				| domain tcpric i.asv.excise, 
						tclct200.lcam,				| domain tcpric i.asv.vat, 
						tclct200.lcam,				| domain tcpric i.asv.service.tax, 
						tclct200.lcam,				| domain tcpric i.asv.gst 
						tdpur401.ddta,				| domain tcdate i.ship.or.receive.date, 
						tcyesno.no,				| domain tcyesno i.as.is.sales, 
						tcyesno.no,				| domain tcyesno i.yesno.flag, 
						i.duty.type.array,			| ref domain tctax.indt.l i.duty.type.array(,), 
						i.duties.array,				| ref domain tcamnt i.duties.array(,), 
						o.tax.rates,				| ref domain tcpvat o.tax.rates(,), 
						o.maximum.sequence.number,		| ref domain tctax.seqn o.maximum.sequence.number, 
						line.base.amount.array,			| ref domain tcamnt o.line.base.amount.array(,), 
						line.tax.amount.array,			| ref domain tcamnt o.line.tax.amount.array(,), 
						line.tax.code.array,			| ref domain tccvat o.line.tax.code.array(,) fixed, 
						o.line.indirect.tax.array,		| ref domain tctax.indt.l o.line.indirect.tax.array(,), 
						expensed.tax,				| ref domain tcyesno o.expensed.tax(,), 
						o.claimable.tax.amount,			| ref domain tcamnt o.claimable.tax.amount, 
						o.non.claimable.tax.amount,		| ref domain tcamnt o.non.claimable.tax.amount, 
						o.total.tax.amount,			| ref domain tcamnt o.total.tax.amount, 
						o.sales.tax,				| ref domain tcamnt o.sales.tax, 
						o.comb.output.set,			| ref domain tcmcs.s250m o.comb.output.set() fixed mb, 
						o.error.msg)				| ref domain tcmcs.s250m o.error.msg mb )
	select tctax941.*,tcmcs036.*
	from tctax941,tcmcs036
	where tctax941._index1 = {:tdpur401.ccty,:tdpur401.cvat}
	and	tctax941.type = 20		|tctax.type.l.tax
	and	tctax941.cmbb refers to tcmcs036
	selectdo
		on case tcmcs036.indt.l
		case	tctax.indt.l.bed:
		case	tctax.indt.l.service:	
			oth.exc = oth.exc + line.tax.amount.array(tctax941.layr,tctax941.seqn)
			break
		case	tctax.indt.l.aed:	
		case	tctax.indt.l.sed:	
		case	tctax.indt.l.e.cess.excise:	
		case	tctax.indt.l.e.cess.service:	
		case	tctax.indt.l.hse.cess.excise:
		case	tctax.indt.l.hse.cess.servic:	
			oth.exc = oth.exc + line.tax.amount.array(tctax941.layr,tctax941.seqn)
			break
		default:
			oth.stx = oth.stx + line.tax.amount.array(tctax941.layr,tctax941.seqn)
		endcase
	endselect
}
function get.ld.date()
{
	select tdpur401a.cdf_ldat:ldat.c,tdpur401a.sqnb
	from tdpur401 tdpur401a
	where tdpur401a._index1 = {:i.orno,:tdpur401.pono}
	and	tdpur401a.cdf_ldat <> 0
	order by tdpur401a.sqnb desc 
	as set with 1 rows
	selectdo
	selectempty	
		ldat.c = 0				|#ISGEC01075.n		
	endselect
	
| 		get.var(pid, "tdpur401.cdf_ldat", ldat.c)			|#ISGEC001071.o
	
}

							|#ISGEC001071.en
							
							
							|#ISGEC001107.sn
function domain tcdate get.last.ld.date()
{
	domain	tcdate	ot.ddta
	domain	tcpono	t.seqn
	
	ot.ddta = 0
	if	highest.vrsn	then
		select	ld_tdpur401.ddta:ot.ddta,
			ld_tdpur401.sqnb:t.seqn,
			ld_tdpur401.cdf_ldat:ldat.c		|ISGEC015006.n
		from	tdpur401 ld_tdpur401
		where	ld_tdpur401._index1 = {:i.orno, :tdpur401.pono}
		order by ld_tdpur401.sqnb desc
		as set with 1 rows
		selectdo
		endselect
	else
		select	ld_tdmsl501.ddta:ot.ddta,
			ld_tdmsl501.sqnb:t.seqn,
			ld_tdmsl501.ldat.c:ldat.c		|ISGEC015006.n
		from	tdmsl501 ld_tdmsl501
		where	ld_tdmsl501._index1 = {:i.orno, :i.vrsn, :tdpur401.pono}
		order by ld_tdmsl501.sqnb desc
		as set with 1 rows
		selectdo
		endselect	
	endif
	
	return(ot.ddta)	
}
							|#ISGEC001107.en
							
function get.layer(ref domain tctax.layr.l layer.temp)	
{
	if tctax941.lr01 = tcyesno.yes then	
		layer.temp  = 1
	else
		if tctax941.lr02 = tcyesno.yes then	
			layer.temp  = 2
		else
			if tctax941.lr03 = tcyesno.yes then	
				layer.temp  = 3
			else
				if tctax941.lr04 = tcyesno.yes then	
					layer.temp  = 4		
				else
					if tctax941.lr05 = tcyesno.yes then	
						layer.temp  = 5
					else
						if tctax941.lr06 = tcyesno.yes then	
							layer.temp  = 6
						else
							if tctax941.lr07 = tcyesno.yes then	
								layer.temp  = 7
							else
								if tctax941.lr08 = tcyesno.yes then	
									layer.temp  = 8		
								else
									if tctax941.lr09 = tcyesno.yes then	
										layer.temp  = 9
									endif
								endif
							endif
						endif
					endif
				endif
			endif
		endif	
	endif
}									|#ISGEC001164.en							

function	get.qap.details()						|#ISGEC015084.sn
{
	v.qapa	=	"Material shall be inspected as per ISGEC "
	select	tdisg874.*	
	from	tdisg874
	where	tdisg874._index1	=	{:tdpur400.orno}
	selectdo
		on	case	tdisg874.resp
		case	tdisg.resp.isgec:
			v.qapa	=	v.qapa&", QAP Number "&trim$(tdisg874.qapn)&"- REV "&str$(tdisg874.revn)&" - "
					&sprintf$("%D(%02d %03h %04Y)",tdisg874.date) 
			break
		case	tdisg.resp.supplier:
			v.qapa	=	"Material shall be inpected as per supplier QAP, approved by ISGEC. Supplier to Submit QAP within 7 days on order receipt."
			break
		endcase
	selectempty
		v.qapa	=	"QAP is not applicable for this purchase order."
	endselect
	
				
}

									|#ISGEC016032.sn
function	process.data.revision.wise()
{
	add.qty	=	0.0
	if 	highest.vrsn 	then
		add.qty 	= 	get.additional.qty.from.401()
	else
		add.qty 	= 	get.additional.qty.from.501()
	endif
	
	if 	isspace(tdpur401.cprj) 	then
		tcmcs052.dsca 	= 	""
	endif
	tdpur401.oamt 	= 	(tdpur401.oamt / tdpur401.qoor ) * (add.qty)
	tdpur401.tase.l	= 	(tdpur401.tase.l / tdpur401.qoor ) * (add.qty)
	tdpur401.tasv.l = 	(tdpur401.tasv.l / tdpur401.qoor ) * (add.qty)
	tdpur401.tass.l = 	(tdpur401.tass.l / tdpur401.qoor ) * (add.qty)
| 	tdpur401.qoor = tdpur401.qoor + add.qty	|#ISGEC017006.o
	tdpur401.qoor = add.qty			|#ISGEC017006.n
	iamt.m 		= 	0
	exc.amnt 	= 	0
	sgst.amnt 	= 	0	|#ISGEC017006.sn
	cgst.amnt 	= 	0	
	igst.amnt 	= 	0	|#ISGEC017006.en
	exc.rate 	= 	0
	stx.rate 	= 	0
	sgst.rate 	= 	0	|#ISGEC017006.sn
	cgst.rate 	= 	0	
	igst.rate 	= 	0	|#ISGEC017006.en
	cess.rate	=	0	|#ISGECMOD020.sn
	cess.amnt	=	0	|#ISGECMOD020.en
	stx.amnt 	= 	0
	o.kkcess.rate 	= 	0	
	tot.amnt 	= 	0
	oth.chg1 	= 	0
	oth.chg2 	= 	0
	ialt.m 		= 	""
	aX1a.m 		= 	""

	Get_Landed_Cost(tdpur401.orno, tdpur401.pono)
	if 	isspace(tdpur401.item(1;9)) 	then
		select 	tcibd004.aitc:ialt.m 
		from 	tcibd004
		where 	tcibd004._index1 	= 	{"SUP",:tdpur401.otbp,:tdpur401.item}
		as 	set with 1 rows
		selectdo
		endselect
	endif
	iWgt.m 	= 	0
	if 	highest.vrsn 	then
		select 	sum(tdisg002.wght):iwgt.m 
		from 	tdisg002
		where 	tdisg002._index1 	= 	{:tdpur401.orno,:tdpur401.pono}
		and	tdisg002.slct 		= 	tcyesno.yes
		and	tdisg002.stat 		= 	tcyesno.yes
		selectdo
		endselect
	else
		select 	sum(tdisg502.wght):iwgt.m 
		from 	tdisg502
		where 	tdisg502._index1 	= 	{:tdpur401.orno,:i.vrsn,:tdpur401.pono}
		and	tdisg502.slct 		= 	tcyesno.yes
		and	tdisg502.stat 		= 	tcyesno.yes
		selectdo
		endselect
	endif
	
	populate.tax.amounts()
	get.line.text()
	
	stx.amnt	= 	stx.amnt + oth.stx
	tot.amnt	= 	tdpur401.oamt + exc.amnt + stx.amnt + oth.chg1 + oth.chg2 + 
				sgst.amnt + cgst.amnt + igst.amnt + cess.amnt		|#ISGEC017006.n
	aBd2.m 		= 	"for project " & strip$(tdpur401.cprj) & " / " & strip$(tcmcs052.dsca)
	tdpur401.ddta 	= 	get.last.ld.date()		
	line.indc 	= 	1
	rprt_send()
	line.indc 	= 	2
	send.document.detail()
	line.indc 	= 	3
	send.document.detail()
}

function	print.data.without.history()
{
	select	tdpur401.*,
		tcibd001.*,
		tcmcs052.dsca 
	from	tdpur401, tcibd001, tcmcs052
	where 	tdpur401._index1 	= 		{:i.orno}	
	and	tdpur401.oltp 		in 		(1,4)
	and	tdpur401.item 		refers to 	tcibd001
	and	tdpur401.cprj 		refers to 	tcmcs052 unref clear
	selectdo
		if 	not highest.vrsn 	then
			if 	not select.line.from.history() 	then
				continue
			endif
		endif		
		process.data.revision.wise()
	endselect	
}

function	print.total.data.without.history()
{
	select	tdpur401.* 
	from	tdpur401
	where	tdpur401._index1	=	{:i.orno}
	and	tdpur401.oltp		in	(1,4)
	selectdo
		if	not	highest.vrsn 	then
			if 	not	select.line.from.history() 	then
				continue
			endif
		endif		
		select 	tdpur402.rqno,
			tdpur402.rqpo,
			tdpur201.*
		from 	tdpur402,tdpur201
		where 	tdpur402._index1 	= 		{:tdpur401.orno,:tdpur401.pono,:tdpur401.sqnb}
		and 	tdpur402.cmbe 		refers to 	tdpur201
		as 	set with 1 rows
		selectdo
			ind.exc 	= 	0
			ind.stx 	= 	0
			ind.oth1 	= 	0
			ind.oth2 	= 	0
			ind.bas 	= 	ind.bas + tdpur201.oamt			
		endselect
		add.qty 	= 	0.0
		
		if 	highest.vrsn 	then
			add.qty 	= 	get.additional.qty.from.401()
		else
			add.qty 	= 	get.additional.qty.from.501()
		endif
		
		tdpur401.oamt 		= 	(tdpur401.oamt / tdpur401.qoor ) * (add.qty)
		tdpur401.tase.l 	= 	(tdpur401.tase.l / tdpur401.qoor ) * (add.qty)
		tdpur401.tasv.l 	= 	(tdpur401.tasv.l / tdpur401.qoor ) * (add.qty)
		tdpur401.tass.l 	= 	(tdpur401.tass.l / tdpur401.qoor ) * (add.qty)
| 		tdpur401.qoor = tdpur401.qoor + add.qty	|#ISGEC017006.o
		tdpur401.qoor = add.qty			|#ISGEC017006.n
		iamt.m 			=	0
		exc.amnt 		= 	0
		sgst.amnt 		= 	0	|#ISGEC017006.sn
		cgst.amnt 		= 	0	
		igst.amnt 		= 	0	|#ISGEC017006.en
		exc.rate 		= 	0
		stx.rate 		= 	0
		sgst.rate 		= 	0	|#ISGEC017006.sn
		cgst.rate 		= 	0	
		igst.rate 		= 	0	|#ISGEC017006.en
		stx.amnt 		= 	0
		tot.amnt 		=	0
		oth.chg1 		= 	0
		oth.chg2 		= 	0
		rate 			= 	0
		cess.rate		=	0	|#ISGECMOD020.sn
		cess.amnt		=	0	|#ISGECMOD020.en
		
		Get_Landed_Cost(tdpur401.orno, tdpur401.pono)
		populate.tax.amounts()
								
		tot.exc 	= 	tot.exc + exc.amnt + oth.exc
 		tot.stx 	= 	tot.stx + stx.amnt + oth.stx
		tot.sgst 	= 	tot.sgst + sgst.amnt	|#ISGEC017006.sn
		tot.cgst 	= 	tot.cgst + cgst.amnt	
		tot.sgst 	= 	tot.sgst + igst.amnt	|#ISGEC017006.en
								
		tot.oth1 	= 	tot.oth1 + oth.chg1
		tot.oth2 	= 	tot.oth2 + oth.chg2
		cess		=	cess + cess.amnt	|#ISGECMOD020.n
									|#ISGEC016048.sn
		get.line.text()
									|#ISGEC016048.en
		if 	not highest.vrsn 	then	
| 			get.total.from.history()		|#ISGEC017006.o
| 			tot.bas = tot.bas + (tdmsl501.oamt / tdmsl501.qoor ) * (tdmsl501.qoor + + add.qty)	|#ISGEC017006.n
			tot.bas = tot.bas + (tdmsl501.oamt / tdmsl501.qoor ) * (add.qty)	
		else
			tot.bas 	= 	tot.bas + tdpur401.oamt
		endif

 		tot.amnt 	= 	tdpur401.oamt + exc.amnt + stx.amnt + oth.chg1 + oth.chg2 + oth.exc + oth.stx + 
					sgst.amnt + cgst.amnt + igst.amnt + cess.amnt	 |#ISGEC017006.n
		
	selectempty							
		if	last.vrsn	<>	tdmsl501.vrsn	then
			exc.amnt 	= 	0
			stx.amnt 	= 	0
			sgst.amnt 	= 	0	|#ISGEC017006.sn
			cgst.amnt 	= 	0	
			igst.amnt 	= 	0	|#ISGEC017006.en
			oth.exc  	= 	0
			oth.stx 	= 	0
			cess.amnt	=	0	|#ISGECMOD020.n
			tdmsl.dll0500.move.tdmsl501.to.tdpur401()
			populate.tax.amounts()
			tot.exc 	= 	tot.exc + exc.amnt + oth.exc 	
			tot.stx 	= 	tot.stx + stx.amnt + oth.stx 
			tot.sgst = tot.sgst + sgst.amnt	|#ISGEC017006.sn
			tot.cgst = tot.cgst + cgst.amnt	|
			tot.sgst = tot.sgst + igst.amnt	|#ISGEC017006.en
			cess = cess + cess.amnt		|#ISGECMOD020.n
			if 	not highest.vrsn 	then	
| 				get.total.from.history()		|#ISGEC017006.o
				tot.bas = tot.bas + (tdmsl501.oamt / tdmsl501.qoor ) * (tdmsl501.qoor + add.qty)	|#ISGEC017006.n
			else
				tot.bas 	= 	tot.bas + tdpur401.oamt	
			endif
			tot.amnt 	= 	tdpur401.oamt + exc.amnt + stx.amnt + oth.chg1 + oth.chg2 + oth.exc + oth.stx + 
						sgst.amnt + cgst.amnt + igst.amnt  + cess.amnt	|#ISGEC017006.n
		endif							
	endselect
}
									|#ISGEC016032.en


function get.total.from.history()			|#ISGEC016032.sn (Shilpa)
{
	select	sum(tdmsl501.oamt):tot.bas
	from	tdmsl501
	where	tdmsl501._index1 = {:i.orno,:i.vrsn}
	and	tdmsl501.oltp 	in	(1,4)
| 	group	by tdmsl501.pono
	selectdo
	endselect
	
}						|#ISGEC016032.en (Shilpa)

										|#ISGEC016048.sn
function	get.line.text()
{
	select	tdmsl502.fdes:v.fdes,
		tdmsl502.fde2:v.fde2,
		tdmsl502.fde3:v.fde3
	from	tdmsl502
	where	tdmsl502._index1	=	{:tdpur401.orno}
	as	set with 1 rows
	selectdo
		if	isspace(v.fdes(261;40))	then
			v.fdes(261;40)	=	v.fde2(1;90)
			v.fde2(1;90)	=	""
		endif
		if	isspace(v.fde2(221;80))	then
			v.fde2(221;80)	=	v.fde3(1;50)
			v.fde3(1;50)	=	""
		endif
	selectempty
		v.fdes	=	""							
		v.fde2	=	""
		v.fde3	=	""
	endselect
	select	tdmsl503.ldes:v.ldes,
		tdmsl503.lde2:v.lde2,
		tdmsl503.lde3:v.lde3,
		tdmsl503.typo,
		tdmsl503.code
	from	tdmsl503
| 	where	tdmsl503._index1	=	{:tdpur401.orno,:tdpur401.pono,:tdpur401.sqnb}	|#SD04052017.o
	where	tdmsl503._index1	=	{:tdpur401.orno,:tdpur401.pono}			|#SD04052017.n
	as	set with 1 rows
	selectdo
| 		if	isspace(v.ldes(201;100))	then
| 			v.ldes(201;100)	=	v.lde2(1;100)
| 			v.lde2(1;100)	=	""
| 		endif
		
		final.line = trim$(v.ldes) & " " & trim$(v.lde2) & " " &  trim$(v.lde3)
		
	selectempty
		v.ldes	=	""
		v.lde2	=	""
		v.lde3	=	""
		final.line = ""
	endselect
}
										|#ISGEC016048.en
function long check_if_deletedline_exist(domain	tcorno	get.orno,
				domain		tcpono	get.pono,
				domain		tcpono	get.vrsn)
{
	domain	tcpono	hold.pono
	
	select	tdmsl501.pono:hold.pono
	from	tdmsl501
	where	tdmsl501._index1 = {:get.orno,:get.vrsn,:get.pono}
	selectdo
		return(1)
	endselect
	return(0)

}



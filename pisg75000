|******************************************************************************
|* tpisg7500  0  VRC B61U a  stnd
|* 
|* baan
|* 12-03-11 [04:47]
|******************************************************************************
|* Script Type: 0
|******************************************************************************

	#include <bic_tt>
	#include <bic_dam>		|Data access methods
	#include <bic_dialog>
	#include <bic_gbf>
	
	table	ttpisg012
	table	ttpisg011
	table	ttcmcs052
	table	ttppdm600
	table	ttppdm090
	
extern	domain	tccprj		import.cprj
extern	domain	tcorno		import.vers

domain	tppdm.s132m	window.title
| domain	tppdm.s132m	view.title

string view.title(500)

long object.value
long gbf.ret
string	object.key(100)
string	object.key1(100)

function main()
{
	import("tpisg011.cprj",import.cprj)
	import("tpisg011.vers",import.vers)
	
	define.gbf.window()
	
	|** Define Key Stroks for Menu
	
	|----
	
	|**
	
	|** Set GBF Resource
	
	gbf.ret = gbf.set.resource(DsNbackground,rgb(1000,1000,1000))
	gbf.ret = gbf.set.resource(DsNforeground,rgb(100,100,100))
	
	|** Active GBF
	activate.gbf.map()	
}

function extern long gbf.get.top.level()
{
	set.map.header()
	
	return(0)
}


function set.map.header()
{
	get.project.details()
	view.title = import.cprj & " " & tcmcs052.dsca
	gbf.ret = gbf.add.object("",
			view.title,
					0, GBF.HEADER)
					
	view.title = "Element" & string.set$(" ",15) & "Total Amnt" & string.set$(" ",8) & "Available Amnt" & string.set$(" ",8) &
^		"Soft Allocation Amnt" & string.set$(" ",8) & "Exhausted Amnt" & string.set$(" ",8) & "Distributed Amnt" & string.set$(" ",8) &
^		"Undistributed Amnt"
	gbf.ret = gbf.add.object("",
				view.title,
				0,
				GBF.LEAF,
				gbf.set.leaf.icon("gbf",
							"header.gif",
							"header.gif",
							false))
	
	select 	tpisg012.*
	from	tpisg012
	where	tpisg012._index1 = {:import.cprj,:import.vers}
	and	tpisg012.levl = 0
	selectdo
		object.key = ""
		object.key = tpisg012.cprj & "|" & tpisg012.vers & "|" & tpisg012.elem & "|" & tpisg012.cspa
		object.value = tpisg012.levl 
		view.title = ""
		
		view.title = tpisg012.elem & " " & get.element.description(tpisg012.elem) & " " & str$(tpisg012.totl)
^		& " " & str$(tpisg012.avai) & " " & str$(tpisg012.smnt) & " " & str$(tpisg012.exha) & " " & str$(tpisg012.aamt) & 
^		" " & str$(tpisg012.amnt) 
		
		if check.child.exists(tpisg012.cprj,tpisg012.vers,tpisg012.elem) then
			gbf.add.object(	object.key,
					view.title,
					object.value,
					GBF.INTERIOR,
					gbf.set.interior.icon(	"tpicons",
								"Element+b.gif",
								"Element-b.gif",
								"Element.gif",
								"Element.gif",
								false))
		else
			gbf.add.object(	object.key,
					view.title,
					object.value,
					GBF.LEAF,
					gbf.set.leaf.icon("tpicons",
							"Element.gif",
							"Element.gif",
							false))
		endif				
	endselect
	
}

function domain tcdsca get.element.description
			(
				domain	tppdm.cspa	i.tpisg012.elem
			)
{
	select 	tppdm090.desc
	from	tppdm090
	where	tppdm090._index1 = {:i.tpisg012.elem}
	as set with 1 rows
	selectdo
	selectempty
		tppdm090.desc = ""
	endselect
	
	return(tppdm090.desc)
}

function extern long gbf.get.children
				(
					const string object.key(),
					long   object.value,
					long   level
				)
{
	domain	tccprj		parent.project
	domain	tcorno		parent.version
	domain	tppdm.cspa	parent.element
	domain	tppdm.cspa	parent.parent.element
	
	view.title = "Element" & string.set$(" ",15) & "Total Amnt" & string.set$(" ",8) & "Available Amnt" & string.set$(" ",8) &
^		"Soft Allocation Amnt" & string.set$(" ",8) & "Exhausted Amnt" & string.set$(" ",8) & "Distributed Amnt" & string.set$(" ",8) &
^		"Undistributed Amnt"

	gbf.ret = gbf.add.object("",
				view.title,
				0,
				GBF.LEAF,
				gbf.set.leaf.icon("gbf",
							"header.gif",
							"header.gif",
							false))
	
	string.scan(object.key,"%s|%s|%s|%s",
				parent.project,
				parent.version,
				parent.element,
				parent.parent.element)
	
	select	tpisg012.*
	from	tpisg012
	where	tpisg012._index1 = {:parent.project,:parent.version}
	and	tpisg012.cspa = :parent.element
	selectdo
		object.key1 = ""
		object.key1 = tpisg012.cprj & "|" & tpisg012.vers & "|" & tpisg012.elem & "|" & tpisg012.cspa
		object.value = tpisg012.levl 
		view.title = ""
		view.title = tpisg012.elem & " " & get.element.description(tpisg012.elem) & " " & str$(tpisg012.totl)
^		& " " & str$(tpisg012.avai) & " " & str$(tpisg012.smnt) & " " & str$(tpisg012.exha) & " " & str$(tpisg012.aamt) & 
^		" " & str$(tpisg012.amnt) 
		
		if check.child.exists(tpisg012.cprj,tpisg012.vers,tpisg012.elem) then
			gbf.add.object(	object.key1,
					view.title,
					object.value,
					GBF.INTERIOR,
					gbf.set.interior.icon(	"tpicons",
								"Element+b.gif",
								"Element-b.gif",
								"Element.gif",
								"Element.gif",
								false))
		else
			gbf.add.object(	object.key1,
					view.title,
					object.value,
					GBF.LEAF,
					gbf.set.leaf.icon("tpicons",
							"Element.gif",
							"Element.gif",
							false))
		endif				
				
	endselect
			
	return(0)		
}

function get.project.details()
{
	select	tcmcs052.dsca, tppdm600.cprj,
		tppdm600.psts
	from	tppdm600, tcmcs052
	where	tppdm600._index1 = {:import.cprj}
	and	tppdm600.cprj refers to tcmcs052
	as set with 1 rows
	endselect
}

function define.gbf.window()
{
	window.title = "Sanction Control Tree View "
	gbf.init(	gbf.current.library(),
			window.title,
			GBF.MENU.ALL + GBF.MENU.FILE.OPEN +
			GBF.MENU.FILE.READ)
| 			0,
| 			GBF.OPT.DEFAULT)


	
}

function activate.gbf.map()
{
	gbf.ret = gbf.start()
}



function boolean check.child.exists
		(
			domain tccprj		i.tpisg012.cprj,
			domain	tcorno		i.tpisg012.vers,
			domain	tppdm.cspa	i.tpisg012.elem
		)
{
	domain	tppdm.cspa	o.elem
	select 	tpisg012.elem:o.elem
	from	tpisg012
	where	tpisg012._index1 = {:i.tpisg012.cprj,:i.tpisg012.vers}
	and	tpisg012.cspa = :i.tpisg012.elem
	as set with 1 rows
	selectdo
	selectempty
		return(false)
	endselect
	
	return(true)
}



|******************************************************************************
|* tfisg1410m100  0  VRC B61U a7 isg 
|* print cheque prepared report
|* merino1                       
|* 2016-06-23
|******************************************************************************
|* Main table tfisg110 , Form Type 4
|******************************************************************************
| IDENT:ISGEC01042 , ANSHU KUMARI, 2016-06-24,    VRC  B61U a7 isg  		
|******************************************************************************
|* ID ISGEC016007, Manish Manchanda, 2016-07-18
|* Modifications and Bug fixing
|******************************************************************************
|* ID ISGEC016018, Mudit Sharma, 29-08-2016, VRC  B61U a7 isg
|* Modification in Report
|*******************************************************************************
|* ID ISGEC01099, Lijo Clement, 12-07-2019, VRC  B61U a7 isg
|* Modification as report taking lot of time 
|****************************** declaration section ***************************
declaration:

	table   ttfcmg110  
	table   ttfcmg100 
	table   ttfcmg001 
	table   ttfmsl020
	table   ttfgld106
	table ttccom100
	table   ttfgld112
        table   ttfgld102
	table	ttfcmg103						|#ISGEC016007.n
   extern  domain   tfcmg.bank          bank.f   
   extern  domain   tfcmg.bank          bank.t    
   extern  domain   tfcmg.paym          paym.f
   extern  domain   tfcmg.paym          paym.t   
   extern  domain   tfcmg.cheq          cheq.f  
   extern  domain   tfcmg.cheq          cheq.t   
   extern  domain   tfgld.date          date.f ,rdat  
   extern  domain   tfgld.date          date.t    
   extern  domain   tfgld.amnt          amount
   extern  domain   tcyesno             tsale.stat
   extern domain     tfgld.ttyp        tran.typ
   extern domain     tfgld.docn         doc.number
   extern domain     tfgld.prod          fiscal.per
   extern domain     tfgld.year           fiscal.year
   domain	tfgld.ttyp	v.typt				|#ISGEC016007.n
   domain	tfgld.docn	v.doct				|#ISGEC016007.n
   string err.file(100), file.name(100), line(1500),date.fr(500)
   long   stat.fp, ret2,var.count

   #pragma used dll ottdllbw
|****************************** program section ********************************


|****************************** group section **********************************

group.1:
init.group:
   get.screen.defaults()

|****************************** choice section ********************************
| choice.cont.process:
| on.choice:
|    execute(print.data)

choice.print.report:
before.choice:
	if date.f = 0 then
		message("Please Enter Date")
		choice.again()
	endif	
on.choice:
generate.file()
  


|****************************** field section *********************************
 field.bank.f:
 check.input:
if not isspace(bank.f) then
	 select tfcmg001.bank
	 from   tfcmg001
	 where  tfcmg001._index1={:bank.f}
	 selectdo
	 selectempty
		 set.input.error("@enter the valid value for bank")
		 input.again()
	 endselect
endif
| when.field.changes:
|    bank.t = bank.f

field.paym.f:
before.zoom:								|#ISGEC016007.sn
	query.extend.where.in.zoom("tfcmg003.poda = 1")		|#ISGEC016007.en
| when.field.changes:
| paym.t = paym.f
check.input:
	if not isspace(paym.f) then
		select tfcmg003.paym
		from tfcmg003
		where tfcmg003._index1={:paym.f}
		as set with 1 rows
		selectdo
		selectempty
			 set.input.error("@enter the valid value for payment method")
			 input.again()
		 endselect
	 endif
	 
field.cheq.f:

| 	query.extend.where.in.zoom("tfcmg100._index1 inrange {" & quoted.string(bank.f) & "," & quoted.string(paym.f) & "} and {" & quoted.string(bank.f) & "," & quoted.string(paym.f) & "}")
| 	query.extend.where.in.zoom("tfcmg100._index1 = {" & quoted.string(bank.f) & "," & quoted.string(paym.f) & "}")| and {" & quoted.string(bank.f) & "," & quoted.string(paym.f) & "}")
 when.field.changes:
    cheq.t = cheq.f
| before.zoom:
			
| check.input:										|#ISGEC016007.so
| 	if not isspace(cheq.f) then
| 		select tfcmg100.cheq
| 		from tfcmg100
| 		where tfcmg100.cheq={:cheq.f}
| 		selectdo
| 		selectempty
| 			 set.input.error("@enter the valid value for cheq")
| 			 input.again()
| 		endselect
| 	endif										|#ISGEC016007.eo
selection.filter:
  tfcmg100.bank= bank.f
  tfcmg100.paym=paym.f
| field.date.f:
|  when.field.changes:
|     date.t = date.f


field.cheq.t:

| before.zoom:
| 	query.extend.where.in.zoom("tfcmg100._index1 inrange {" & quoted.string(bank.f) & "," & quoted.string(paym.f) & "} and {" & quoted.string(bank.f) & "," & quoted.string(paym.f) & "}")
| 	query.extend.where.in.zoom("tfcmg100._index1 = {" & quoted.string(bank.f) & "," & quoted.string(paym.f) & "}")
selection.filter:
tfcmg100.bank= bank.f
  tfcmg100.paym=paym.f
| check.input:										|#ISGEC016007.so
| if not isspace(cheq.t)   then
|         select tfcmg100.cheq
| 	from     tfcmg100
| 	where tfcmg100.cheq={:cheq.t}
| 	selectdo
| 	selectempty
| 		 set.input.error("@enter the valid value for cheq")
| 		 input.again()
| 	 endselect
|  endif										|#ISGEC016007.eo
 
|****************************** function section ******************************

 functions:

function generate.file()
{
	 err.file = bse.dir$() & str$(utc.num()) & ".xls"
	 
	 file.name = "C:\Temp\" & str$(utc.num())  & ".xls"
	 
	 stat.fp = seq.open(err.file, "w+")
	 before.header()
	 if stat.fp>0 then
		generate.header()
		get.transfer.material()
	endif
	
	 seq.close(stat.fp)
	 ret2 = server2client(err.file,file.name,1)
	 ret2 = app_start(file.name,"c:","","","")
}
function before.header()
{
	if stat.fp>0 then 
| 		line= concat$("    ",sprintf$("%s","      "),sprintf$("CHEQUES PREPARED NOT RECONCILED UPTO (DATE SELECTED ON INPUTS)"),sprintf$("%s","      "),sprintf$("COMPANY:"),"       ",sprintf$("%d",get.compnr())," ")	|#ISGEC016007.o
		line= concat$("	",sprintf$("CHEQUES PREPARED NOT RECONCILED UPTO DATE: %D(%02d-%02m-%04Y)", date.f),sprintf$(""),sprintf$(""),sprintf$(""),sprintf$(""),sprintf$(""),sprintf$(""),sprintf$(""),|#ISGEC016007.sn
				sprintf$(""),sprintf$(""),sprintf$(""),sprintf$(""),sprintf$(""),sprintf$(""),sprintf$(""),sprintf$(""),sprintf$(""),sprintf$(""),sprintf$(""),sprintf$(""),sprintf$("")
				,sprintf$(""),sprintf$("COMPANY: %d",get.compnr()))		|#ISGEC016007.en
		seq.puts(line, stat.fp)
| 		line= concat$(" ", sprintf$("Date"), " ", sprintf$("%u(%02d-%02m-%04Y) %U(%02H:%02m:%02s)",utc.num(), utc.num()))		|#ISGEC016007.o
		line= concat$("	", sprintf$("Date"), sprintf$("%u(%02d-%02m-%04Y) %U(%02H:%02m:%02s)",utc.num(), utc.num()))	|#ISGEC016007.n
		seq.puts(line,stat.fp)
		line= sprintf$("ISGEC Heavy Engineering Ltd.")
		seq.puts(line, stat.fp)
| 		line= concat$(" ",				|#ISGEC016007.o
		line= concat$("	",			|#ISGEC016007.n
| 			sprintf$("Bank Relation")," ",sprintf$("%s",bank.f))		|#ISGEC016007.o
			sprintf$("Bank Relation"),sprintf$("%s",bank.f))		|#ISGEC016007.n
			 seq.puts(line, stat.fp)
| 		line= concat$(" ",				|#ISGEC016007.o
		line= concat$("	",			|#ISGEC016007.n
| 			sprintf$("cheque#")," ",sprintf$("From"),sprintf$("%s",cheq.f)," ", sprintf$("To"),sprintf$("%s",cheq.t))	|#ISGEC016007.o
			sprintf$("Cheque#"),sprintf$("From"),sprintf$("%s",cheq.f), sprintf$("To"),sprintf$("%s",cheq.t))		|#ISGEC016007.n
		line = strip$(shiftl$(line))
	        seq.puts(line, stat.fp)
	endif
}
function generate.header()
{
	  
| 	line =concat$("|", 						|#ISGEC016007.o
	line =concat$("	", 					|#ISGEC016007.n
	sprintf$("Bank Relation"),     			|1
	sprintf$("Finance Company"),      			|2
	sprintf$(" Payment Request "),     			|3
	sprintf$("Payment advice/ Payment batch"),   	 	|4
	sprintf$("BP Code"),     				|5
	sprintf$("BP Name"),      				|6
	sprintf$("Anticipated Document T.type"),  	    	|7
	sprintf$("Anticipated Document No."),     		|8
	sprintf$("Ant. Doc. Date"),				|9
	sprintf$("Cheque Number"),     			|10
	sprintf$("Cheque Date"), 				|11
	sprintf$("Amount"),     				|12
	sprintf$("Status of cheque (Latest)"),   		|13
	sprintf$("Financial Batch"),      			|14
	sprintf$("Ant. Doc. Creation year/period"),     	|15
	sprintf$("Clearing Doc. year/period  "),		|16
	sprintf$("Clearing doc. T.Type"),     			|17
	sprintf$("Clearing Doc"),     			 	|18
	sprintf$("Clearing date"),   			   	|19
	sprintf$("Reconciliation status"),			|20
	sprintf$("Inter company"),				|21
| 	sprintf$("Inter co. Doc."),    				|22	|#ISGEC016007.o
	sprintf$("Inter co. Ant. Doc."),    			|22	|#ISGEC016007.n
| 	sprintf$("Inter Company Clearing Doc. "),    		|22	|#ISGEC016007.n
	sprintf$("Transfer to Stale (YES/No)"))   	  	|23

	line = strip$(shiftl$(line))
	seq.puts(line, stat.fp)
	 
}

function get.transfer.material()
{
	long yearno  
	long monthno  
	long month_dayno  
	long hours  
	long minutes  
	long seconds 
	long dat
	domain	tcdate	rdat.f								|#ISGEC016007.sn
	domain	tcncmp	v.ncmp
	
	v.ncmp		=	get.compnr()
	yearno		=	val(sprintf$("%D(%04Y)", date.f))			
	monthno		=	val(sprintf$("%D(%02m)", date.f))
	month_dayno	=	val(sprintf$("%D(%02d)", date.f))
	rdat.f	=	date.to.utc(yearno, monthno, month_dayno, 23, 59, 59)		|#ISGEC016007.en
	
	select 	  
		tfcmg100.bank,								|#ISGEC016007.sn
		tfcmg100.btno,
		tfcmg100.pbtn,
		tfcmg100.drec,
		tfcmg100.paym,								|#ISGEC016007.en
		tfcmg110.bank,
		tfcmg100.pbtn,
		tfcmg110.bpid,
		tfcmg100.cheq,
		tfcmg100.chnm,
		tfcmg110.tdoc,
		tfcmg110.pdoc,
		tfcmg110.rdat,
		tfcmg100.chst,
		tfcmg110.btno,
		tfcmg110.pyer,
		tfcmg110.pper,
		tfcmg110.ptyp,
		tfcmg110.docn,
		tfcmg110.pdat,
		tfcmg110.stpd,
		tfcmg110.amnt
| 		tfcmg103.plan										|#ISGEC016007.n  |ISGEC01099.o

	from  	tfcmg110,tfcmg100									|#ISGEC016007.o	|ISGEC01099.n
| 	from  	tfcmg100, tfcmg110, tfcmg103								|#ISGEC016007.n	|ISGEC01099.o
| 	where 	tfcmg100._index1 inrange {:bank.f,:paym.f,:cheq.f} and {:bank.t,:paym.t,:cheq.t}
	where 	tfcmg100._index1 inrange {:bank.f,:paym.f,:cheq.f} and {:bank.f,:paym.f,:cheq.t}
| 	and	tfcmg100.chst	in	(tfcmg.chst.anticipated, tfcmg.chst.rejected, tfcmg.chst.paid)	|#ISGEC016007.n | tv.rss.27/07/2020,original
	and	tfcmg100.chst	in	(tfcmg.chst.anticipated, tfcmg.chst.rejected)|, tfcmg.chst.paid)	tv.rss.27/07/2020
| 	and   	tfcmg110._index1 = {tfcmg100.bank}  |28/07/2020 commented by tv.rss
| 	and   	tfcmg110.paym = {tfcmg100.paym}		|28/07/2020 commented by tv.rss
	and 	tfcmg110._index4 ={tfcmg100.paym,tfcmg100.bank}
	and   	tfcmg110.cheq = {tfcmg100.cheq}		
| 	and	tfcmg110.pdat <= :date.f								|#ISGEC016007.o
| 	and	((tfcmg110.pdat	<=	:date.f	 and tfcmg110.pdat	<>	0) or	tfcmg110.rdat	<=	:rdat.f)		|#ISGEC016007.n
| 	and	tfcmg110.stpd	<>	tfcmg.stpd.rejected						|#ISGEC016007.n		|*new
| 	and	tfcmg103._index1	=	{tfcmg100.pbtn}						|#ISGEC016007.sn	|ISGEC01099.so	
| 	and	tfcmg103.ttyp		=	{tfcmg110.tdoc}		
| 	and	tfcmg103.docn		=	{tfcmg110.pdoc}						|#ISGEC016007.en	|ISGEC01099.eo	
	order	by tfcmg100._index1	asc
	selectdo
													|#ISGEC016007.sn
		
		select	tfcmg103.*									|ISGEC01099.sn	
		from	tfcmg103
		where	tfcmg103._index1 = {:tfcmg100.pbtn}
		and	tfcmg103.ttyp		=	:tfcmg110.tdoc	
		and	tfcmg103.docn		=	:tfcmg110.pdoc	
		selectdo										|ISGEC01099.en
		
			on	case	tfcmg110.stpd
| 			case	tfcmg.stpd.complete:
| 				break
| 			case	tfcmg.stpd.rejected:
			case	tfcmg.stpd.rejected:
				if	tfcmg110.pdat	<=	date.f	then	
					continue
				endif
				if	tfcmg110.rdat	>	rdat.f	then
					continue
				endif
				if	tfcmg100.drec		<=	date.f	then
					continue
				endif
				break
			case	tfcmg.stpd.open:
				if	tfcmg100.drec		>	date.f	or
					tfcmg103.plan		>	date.f	then	
					continue
				endif
				if	((tfcmg110.pdat	>	date.f	and 
					tfcmg110.pdat	=	0)	or	
					tfcmg110.rdat	>	rdat.f)	then
					continue
				endif
				break
			endcase	
											|#ISGEC016007.en

			utc.to.date(tfcmg110.rdat,yearno,monthno,month_dayno, hours,minutes,seconds)
			rdat=date.to.num(yearno,monthno,month_dayno)

	| 		if ( tfcmg100.chst= tfcmg.chst.paid or  tfcmg100.chst= tfcmg.chst.anticipated )		|#ISGEC016007.so
	| 			and tfcmg110.stpd <> tfcmg.stpd.complete and (date.f-rdat>90) then		|#ISGEC016007.eo
			
			if	tfcmg100.chst	=	tfcmg.chst.anticipated	then				|#ISGEC016007.n
				if	(date.f-rdat>90)	then							|#ISGEC016007.n
					tsale.stat=  tcyesno.yes
				else     
					tsale.stat= tcyesno.no
				endif		
			else											|#ISGEC016007.sn
				tsale.stat	=	empty
			endif											|#ISGEC016007.en
			 select tccom100.nama
			 from tccom100
			 where tccom100._index1={:tfcmg110.bpid}
			 selectdo
			 selectempty
				 tccom100.bpid=""
			 endselect
			  
			select tfcmg001.desc
			from    tfcmg001
			where tfcmg001._index1= {:tfcmg110.bank}
			selectdo
			selectempty 
				tfcmg001.desc=""
			endselect   			    
		     
			select 	   	tfmsl020.comp,tfmsl020.adrq
			from      	tfmsl020
			where     	tfmsl020.chqe= {:tfcmg100.cheq}
			selectdo
			selectempty   
					tfmsl020.comp=0
					tfmsl020.adrq=""
			endselect
	| 		     
			fiscal.per	=	0					|#ISGEC016007.n
			fiscal.year	=	0					|#ISGEC016007.n

			select 		tfgld106.fprd:fiscal.per, 
					tfgld106.fyer:fiscal.year, 
					tfgld106.odoc,tfgld106.ocmp:date.t,
					tfgld106.otyp
			from    tfgld106
			where   tfgld106._index1={:tfcmg110.tdoc,:tfcmg110.pdoc}		
	| 	        as	set with 1 rows					|#ISGEC016007.n
			selectdo
				select 	tfgld112.comt, 
					tfgld112.typt:tran.typ,
					tfgld112.doct:doc.number
				from    tfgld112
				where   tfgld112.ttyp= {:tfgld106.otyp}
				 and     tfgld112.docn= {:tfgld106.odoc}     
				selectdo
	| 				print.detail()
				selectempty  
					tran.typ	=	""			|#ISGEC016007.n
					tfgld112.comt=0
					tfgld112.ttyp=""
					doc.number=0
				endselect

			selectempty  
				select 		tfgld102.ttyp:tran.typ, 
						tfgld102.docn:doc.number,
						tfgld102.fprd:fiscal.per,
						tfgld102.fyer:fiscal.year,tfgld102.cono:date.t
				from   		tfgld102
				where  		tfgld102.ttyp={:tfcmg110.tdoc}
				and     	tfgld102.docn={:tfcmg110.pdoc}
	| 			as	set with 1 rows					|#ISGEC016007.n
				selectdo 
	| 				print.detail()
				selectempty
					tran.typ=""
					doc.number=0
					fiscal.per=0
					fiscal.year=0
				endselect
				select 	tfgld112.comt, 			|#ISGEC016007.sn
					tfgld112.typt:tran.typ,
					tfgld112.doct:doc.number
				from	tfgld112
				where	tfgld112._index1	=	{:v.ncmp,:tfcmg110.tdoc,:tfcmg110.pdoc}
				selectdo
				selectempty
					tran.typ	=	""
					tfgld112.comt	=	0
					doc.number	=	0
				endselect				|#ISGEC016007.en			
	|                 fiscal.per=0					|#ISGEC016007.o
	| 		fiscal.year=0					|#ISGEC016007.o
			
			endselect
	| 		select 	tfgld112.typt:v.typt, 			|#ISGEC016007.sn
	| 			tfgld112.doct:v.doct
	| 		from	tfgld112
	| 		where	tfgld112._index1	=	{:v.ncmp,:tfcmg110.tdoc,:tfcmg110.docn}
	| 		as	set with 1 rows
	| 		selectdo
	| 		selectempty
	| 			v.typt	=	""
	| 			v.doct	=	0
	| 		endselect				|#ISGEC016007.en			
			print.detail()
									|#ISGEC016007.sn					|#ISGEC016007.so
	| 		if	tfcmg110.stpd	=	tfcmg.stpd.complete or 	tfcmg110.stpd = tfcmg.stpd.rejected  then		|*new	
	| 			tfcmg100.chst	=	tfcmg.chst.anticipated
	| 			tfcmg110.amnt	=	-tfcmg110.amnt
	| 			tfcmg110.pdat	=	tfcmg110.plan
	| 			tfcmg110.pyer	=	0
	| 			tfcmg110.pper	=	0
	| 			tfcmg110.ptyp	=	""
	| 			tfcmg110.docn	=	0
	| 			tfcmg110.stpd	=	tfcmg.stpd.open
	| 			tfgld112.comt	=	0			|#ISGEC016018.n	
	| 			tran.typ	=	""			|#ISGEC016018.n
	| 			doc.number	=	0			|#ISGEC016018.n
	| 			print.detail()
	| 		endif
									|#ISGEC016007.en					|#ISGEC016007.eo
		endselect					|ISGEC01099.n
	selectempty
		tfcmg110.bank=""
		tfcmg100.pbtn=0
		tfcmg110.bpid=""
		tfcmg100.cheq=""
		tfcmg100.chnm=""
		tfcmg110.tdoc=""
		tfcmg110.pdoc=0
		tfcmg110.rdat=0
| 		tfcmg100.chst=""
		tfcmg110.btno=0
		tfcmg110.pyer=0
		tfcmg110.pper=0
		tfcmg110.ptyp=""
		tfcmg110.docn=0
		tfcmg110.pdat=0
| 		tfcmg110.stpd=""
		tfcmg110.amnt=0
	endselect
}
function print.detail()
{
										|#ISGEC016007.sn
	domain	tcorno	v.pyer, temp.docn, temp.docn.2, temp.docn.3, v.comt
	
	v.pyer		=	""
	temp.docn	=	""
	temp.docn.2	=	""
	temp.docn.3	=	""
	v.comt		=	""
	if	tfcmg110.pyer	<>	0	and	
		tfcmg110.pper	<>	0	then
		v.pyer		=	str$(tfcmg110.pyer)&" / "&str$(tfcmg110.pper)
	endif
	if	tfcmg110.docn	<>	0	then
		temp.docn	=	str$(tfcmg110.docn)
	endif
	if	doc.number	<>	0	then
		temp.docn.2	=	str$(doc.number)
	endif
	if	v.doct		<>	0	then
		temp.docn.3	=	str$(v.doct)	
	endif
	if	tfgld112.comt	<>	0	then
		v.comt		=	str$(tfgld112.comt)
	endif
										|#ISGEC016007.en
| 	line = concat$("|",							|#ISGEC016007.o
	line = concat$("	",						|#ISGEC016007.n
	sprintf$("%s", tfcmg001.desc),     					|1
| 	sprintf$("%d", tfmsl020.comp),      					|2
	sprintf$("%d", date.t),      					|2
	sprintf$("%s", tfmsl020.adrq),     					|3
	sprintf$("%d",tfcmg100.pbtn),      					|4
	sprintf$("%s",tfcmg110.bpid),      					|5
| 	sprintf$("%s",tfcmg100.chnm),      					|6
	sprintf$("%s",tccom100.nama),      					|6
	sprintf$("%s",tfcmg110.tdoc),      					|7
	sprintf$("%d",tfcmg110.pdoc),      					|8 
| 	sprintf$("%u(%02d-%02m-%04Y)", tfcmg110.rdat),    			|9
	sprintf$("%u(%02d/%02m/%04Y)", tfcmg110.rdat),    			|9
	sprintf$("%s", tfcmg100.cheq),    					|10
| 	shiftl$(sprintf$("%u(%02d-%02m-%04Y)", tfcmg110.rdat)),      			|11
	shiftl$(sprintf$("%u(%02d/%02m/%04Y)", tfcmg110.rdat)),      			|11
	sprintf$("%f",tfcmg110.amnt),     						|12
	sprintf$("%s",enum.descr$( "tfcmg.chst",tfcmg100.chst ) ),		|13
	sprintf$("%d",tfcmg110.btno),      					|14   
	sprintf$("%d / %d",fiscal.year,fiscal.per),   			|15
| 	sprintf$("%d / %d",tfcmg110.pyer,tfcmg110.pper),    			|16			|#ISGEC016007.o
	sprintf$("%s", v.pyer),   				 		|16			|#ISGEC016007.n
	sprintf$("%s", tfcmg110.ptyp),      					|17
| 	sprintf$("%d", tfcmg110.docn),      					|18			|#ISGEC016007.o
	sprintf$("%s", temp.docn),		      				|18			|#ISGEC016007.n
| 	sprintf$("%D(%02d-%02m-%04Y)", tfcmg110.pdat),      			|19
	sprintf$("%D(%02d/%02m/%04Y)", tfcmg110.pdat),      			|19
	sprintf$("%s",enum.descr$("tfcmg.stpd", tfcmg110.stpd) ), 		|20
| 	sprintf$("%d", tfgld112.comt),   			 		|21		|#ISGEC016007.o
	sprintf$("%s", v.comt),   			 			|21		|#ISGEC016007.n
| 	sprintf$("%s %d",tran.typ,doc.number),   				|22		|#ISGEC016007.o
	sprintf$("%s %s", tran.typ, temp.docn.2),   				|22		|#ISGEC016007.n
| 	sprintf$("%s %s", v.typt, temp.docn.3),					|24		|#ISGEC016007.n
	sprintf$("%s",enum.descr$("tcyesno",tsale.stat)) )    		|23
	line = strip$(shiftl$(line))
	seq.puts(line, stat.fp)
}

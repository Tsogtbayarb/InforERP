|******************************************************************************
|* tpisg0220m000  0  VRC B61U a7 live
|* Reimbursement Installments
|* Installation user             
|* 2014-07-29
|******************************************************************************
|* Main table tppin020 Installments, Form Type 4
|******************************************************************************
                                                                                
|****************************** declaration section ***************************
declaration:

  table   	ttppin020 | Installments
  table		ttdisg831
  table		ttppdm043
  table		ttpisg030
  table		ttcmcs036
  table		ttcmcs010
  table		twhisg312
  


|********** Form Fields ******************
extern	domain	tcorno		edrn.f	
extern	domain	tccprj		cprj.f
extern	domain	tccom.bpid	ofbp.f
extern	domain	whinh.shpm	rcno.f
extern	domain	tcpono		rcln.f
extern	domain	tcdsca		dsca.f
extern	domain	tcccty		rtyp.f
extern	domain	tppdm.cpro	cpro.f
extern	domain	tppdm.aalc	insa.f
extern	domain	tcccty		ccty.f
extern	domain	tccvat		cvat.f
extern	domain	tcccty		bptc.f
extern	domain	tcdsca		rtyp.dsca
extern	domain	tcdsca		cpro.dsca
extern	domain	tcdsca		ccty.dsca
extern	domain	tcdsca		cvat.dsca
extern	domain	tcdsca		bptc.dsca
|********** Defaulting Variables *********
	
domain	tppdm.cspa	o.tppin020.cspa
domain	tppdm.cact	o.tppin020.cact
domain	tcccur		o.tppin020.ccur
domain	tccvat		o.tppin020.cvat
domain	tcccty		o.tppin020.bptc
domain	tppss.cpla	o.tppin020.cpla
domain	tppdm.cpro	o.tppin020.cpro
domain	tcccty		o.tppin020.ccty
domain	tccpay		o.tppin020.cpay

domain	tctax.seqn.l	o.tppin020.rnsb.l
domain	tctax.seqn	o.tppin020.rnso.l
domain	tcccrs		o.tppin020.ccrs
domain	tppdm.paym	o.tppin020.paym

|********** IMPORT VARIABLES *************
extern	domain	tcorno		import.edrn
extern	domain	whinh.shpm	import.rcno
extern	domain	tcpono		import.rcln
extern	domain	tppdm.nins	import.nins,o.nins
|***
long ret_val

#include <bic_dam>
|****************************** program section ********************************

before.program:
	import("tdisg832.edrn",import.edrn)
	import("tdisg832.rcno",import.rcno)
	import("tdisg832.rcln",import.rcln)
	import("tdisg832.nins",import.nins)
	
	select 	tdisg831.ofbp,
		tdisg831.cprj
	from	tdisg831
	where	tdisg831._index1 = {:import.edrn}
	as set with 1 rows
	selectdo
	endselect
	
	select 	tppin020.cspa:o.tppin020.cspa,
		tppin020.cpla:o.tppin020.cpla,
		tppin020.cact:o.tppin020.cact,
		tppin020.cpro:o.tppin020.cpro,
		tppin020.ccur:o.tppin020.ccur,
		tppin020.ccty:o.tppin020.ccty,
		tppin020.cvat:o.tppin020.cvat,
		tppin020.bptc:o.tppin020.bptc,
		tppin020.cpay:o.tppin020.cpay,
		tppin020.rnsb.l:o.tppin020.rnsb.l,
		tppin020.rnso.l:o.tppin020.rnso.l,
		tppin020.ccrs:o.tppin020.ccrs,
		tppin020.paym:o.tppin020.paym	
	from	tppin020
	where	tppin020._index1 = {:tdisg831.cprj,:tdisg831.ofbp,:import.nins}
	as set with 1 rows
	selectdo
	selectempty
		select 	whisg312.cspa:o.tppin020.cspa,
			whisg312.cact:o.tppin020.cact
		from	whisg312
		where	whisg312._index1 = {:import.rcno,:import.rcln}
		as set with 1 rows
		selectdo
		endselect
		
			
		select	
			tppdm600.cpla:o.tppin020.cpla,
			tppdm740.ccty:o.tppin020.ccty,
			tppdm740.ccur:o.tppin020.ccur,
			tppdm740.cvat:o.tppin020.cvat,
			tppdm740.bptc:o.tppin020.bptc,
			tppdm740.cpay:o.tppin020.cpay,
			tppdm740.rnsb.l:o.tppin020.rnsb.l,
			tppdm740.rnso.l:o.tppin020.rnso.l,
			tppdm740.ccrs:o.tppin020.ccrs,
			tppdm740.paym:o.tppin020.paym
		from	tppdm740,tppdm600
		where	tppdm740._index1 = {:tdisg831.cprj,:tdisg831.ofbp}
		and	tppdm740.cprj refers to tppdm600
		as set with 1 rows
		selectdo
		endselect
| 		
	endselect
		
	
|****************************** choice section **********************************
choice.cont.generate:
before.choice:
	if not check.reimbursement.type(rtyp.f) then
		message("Enter Valid Reimbursement Type")
		choice.again()
	endif
	
	if not check.revenue.code(cpro.f) then
		message("Enter Valid Revenue Code")
		choice.again()
	endif
	
	if not check.country(ccty.f) then
		message("Enter Valid Tax Country ")
		choice.again()
	endif
	
	if not check.country(bptc.f) then
		message("Enter Valid BP Tax Country")
		choice.again()
	endif
	
	if not check.tax.code(ccty.f,cvat.f) then
		message("Enter Valid Tax Code")
		choice.again()
	endif
	
	
	if insa.f = 0 then
		message("Enter Installment Amount")
		choice.again()
	endif
	
	
on.choice:
	if inster.installment.line() then
		show.dal.messages(MSG.ALL)
	endif	
	
after.choice:
	execute(end.program)
	
|****************************** group section **********************************

group.1:
init.group:
   get.screen.defaults()

|****************************** Field section **********************************

field.edrn.f:
before.field:
	edrn.f = import.edrn

field.cprj.f:
before.field:
	cprj.f = tdisg831.cprj

field.ofbp.f:
before.field:
	ofbp.f = tdisg831.ofbp

field.rcno.f:
before.field:
	rcno.f = import.rcno

field.rcln.f:
before.field:
	rcln.f = import.rcln

field.rtyp.f:
after.field:
	rtyp.dsca = get.reimbursement.type(rtyp.f)
	display("rtyp.dsca")
field.ccty.f:
before.field:
	ccty.f = o.tppin020.ccty
after.field:
	ccty.dsca = get.city.description(ccty.f)
	display("ccty.dsca")
field.cvat.f:
before.field:
	cvat.f = o.tppin020.cvat
before.zoom:
	query.extend.where.in.zoom("tcmcs036.ccty = " & quoted.string(ccty.f))

after.field:
	cvat.dsca = get.tax.code.description(ccty.f,cvat.f)
	display("cvat.dsca")
field.bptc.f:
before.field:
	bptc.f = o.tppin020.bptc
after.field:
	bptc.dsca = get.city.description(bptc.f)
	display("bptc.dsca")
field.cpro.f:
after.field:
	cpro.dsca = get.revenue.description(cpro.f)
	display("cpro.dsca")
|*******************************  Functions ***************************************
functions:
function boolean check.reimbursement.type
			(
				domain	tcccty		i.rtyp
			)
{
	select 	tpisg030.rtyp
	from	tpisg030
	where	tpisg030._index1 = {:i.rtyp}
	as set with 1 rows
	selectdo
	selectempty
		return(false)
	endselect
	
	return(true)
}

function domain tcdsca	get.reimbursement.type
			(
				domain	tcccty		i.rtyp
			)
{
	select 	tpisg030.dsca
	from	tpisg030
	where	tpisg030._index1 = {:i.rtyp}
	as set with 1 rows
	selectdo
	selectempty
		tpisg030.dsca = ""
	endselect
	
	return(tpisg030.dsca)
	
}


function extern domain tcdsca get.city.description
			(
				domain	tcccty		i.ccty
			)
{
	select 	tcmcs010.dsca
	from	tcmcs010
	where	tcmcs010._index1 = {:i.ccty}
	as set with 1 rows
	selectdo
	selectempty
		tcmcs010.dsca = ""
	endselect
	
	return(tcmcs010.dsca)
		
}
function boolean check.revenue.code
			(
				domain	tppdm.cpro	i.cpro
			)
{
	select	tppdm043.cpro
	from	tppdm043
	where	tppdm043._index1 = {:i.cpro}
	as set with 1 rows
	selectdo
	selectempty
		return(false)
	endselect
	
	return(true)
}

function domain tcdsca get.revenue.description
			(
				domain	tppdm.cpro	i.cpro
			)
{
	select	tppdm043.desc
	from	tppdm043
	where	tppdm043._index1 = {:i.cpro}
	as set with 1 rows
	selectdo
	selectempty
		tppdm043.desc = ""
	endselect
	
	return(tppdm043.desc)
}
function boolean check.country(domain tcccty	i.ccty)
{
	select 	tcmcs010.ccty
	from	tcmcs010
	where	tcmcs010._index1 = {:i.ccty}
	as set with 1 rows
	selectdo
	selectempty
		return(false)
	endselect
	return(true)
}


function boolean check.tax.code
			(
				domain	tcccty		i.ccty,		|Country
				domain	tccvat		i.cvat		|Tax Code
			)
{
	select 	tcmcs036.cvat
	from	tcmcs036
	where	tcmcs036._index1 = {:i.ccty,:i.cvat}
	as set with 1 rows
	selectdo
	selectempty
		return(false)
	endselect
	
	return(true)
}


function domain tcdsca	get.tax.code.description
			(
				domain	tcccty		i.ccty,	
				domain	tccvat		i.cvat
			)
{
	select tcmcs036.dsca
	from	tcmcs036
	where	tcmcs036._index1 = {:i.ccty,:i.cvat}
	as set with 1 rows
	selectdo
	selectempty
		tcmcs036.dsca = ""
	endselect
	
	return(tcmcs036.dsca)
}


function long inster.installment.line()
{
	dal.new.object("tppin020")
	db.set.to.default(ttppin020)
	
	select 	max(tppin020.nins):o.nins
	from	tppin020
	where	tppin020._index1 = {:tdisg831.cprj,:tdisg831.ofbp}
	selectdo
	endselect
	
	o.nins = o.nins + 1
	
	dal.set.field("tppin020.cprj",cprj.f)
	dal.set.field("tppin020.ofbp",ofbp.f)
	dal.set.field("tppin020.nins",o.nins)
	dal.set.field("tppin020.desc",dsca.f)
	dal.set.field("tppin020.cspa",o.tppin020.cspa)
	dal.set.field("tppin020.cpla",o.tppin020.cpla)
	dal.set.field("tppin020.cact",o.tppin020.cact)
	dal.set.field("tppin020.cpro",cpro.f)
	dal.set.field("tppin020.ccur",o.tppin020.ccur)
	dal.set.field("tppin020.insa",insa.f)
	dal.set.field("tppin020.ccty",ccty.f)
	dal.set.field("tppin020.cvat",cvat.f)
	dal.set.field("tppin020.bptc",bptc.f)
	dal.set.field("tppin020.sidt",utc.num())
	dal.set.field("tppin020.cpay",o.tppin020.cpay)
| 	dal.set.field("tppin020.rnsb.l",o.tppin020.rnsb.l)
	dal.set.field("tppin020.rnso.l",o.tppin020.rnso.l)
	dal.set.field("tppin020.invo",tppdm.yeno.yes)
	dal.set.field("tppin020.inia",insa.f)
| 	dal.set.field("tppin020.inpr",100.0)
	dal.set.field("tppin020.vasv.l",insa.f)
	dal.set.field("tppin020.sasv.l",insa.f)
	dal.set.field("tppin020.ccrs",o.tppin020.ccrs)
	dal.set.field("tppin020.paym",o.tppin020.paym)
| 	dal.set.field("tppin020.sasa.l",insa.f)
| 	dal.set.field("tppin020.vasa.l",insa.f)
dal.set.field("tppin020.easv.l",insa.f)
	put.var(pid,"tppin020.cdf_edrn",edrn.f)
| 	put.var(pid,"tppin020.cdf_rcno",rcno.f)
| 	put.var(pid,"tppin020.cdf_rcln",rcln.f)
	put.var(pid,"tppin020.cdf_remb",1)
	put.var(pid,"tppin020.cdf_rtyp",rtyp.f)
	ret_val = dal.save.object("tppin020")
	if ret_val <> 0 then
		show.dal.messages(MSG.ALL)
		abort.transaction()
	else
		if tdisgdll0831.update.inst.wise.receipt(
					edrn.f		,tdisg831.cprj,
					tdisg831.ofbp	,o.nins,
					import.rcno	,import.rcln,
					insa.f		,0,
					""		,0,0,tcyesno.yes,rtyp.f,10) then
			return(DALHOOKERROR)
		endif
		
		commit.transaction()
	endif
	
	return(0)
}

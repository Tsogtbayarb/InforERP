|******************************************************************************
|* dmisg010  0  VRC B61U a7 live
|* DAL for dmisg010
|* tools
|* 14-07-22 [11:05]
|******************************************************************************
|* Script Type: DAL
|******************************************************************************
                                                                                
	|******************** Includes
	#include <bic_dal2>
	#include "itcmcs2000"	|* DAL(-GUI) Support Defines

	|*************** Table declaration ******************
		table	tdmisg010
		table	ttpmsl000
		extern	domain	tcorno	gbl.issu

|****************************** object hooks **********************************

function extern boolean method.is.allowed(
			long		i.method)
{
	on case i.method
		case DAL_NEW:
		if not new.method.is.allowed() then
			dal.set.error.message("@Cannot insert a record.")	
			return(false)
		endif
		break
	case DAL_UPDATE:
		if not update.method.is.allowed() then
			dal.set.error.message("@Cannot modify this record.")
			return(false)
		endif
		break
	case DAL_DESTROY:
		if not destroy.method.is.allowed() then
			dal.set.error.message("@Cannot delete this record.")
			return(false)
		endif
		break
	endcase

	return(true)
}

function extern long before.open.object.set()
{
	read.parameters()
	define.field.dependencies()
	return(0)
}

function extern long before.save.object(long type)
{
	on case type
		case DAL_NEW :
			if  tcmcs.dll0050.check.and.generate.order.number(
					3, dmisg010.issu, tpmsl000.isng, 
					9, dmisg010.issu) then
				return(DALHOOKERROR)
			endif
			gbl.issu = dmisg010.issu
			dmisg010.prpb = toupper$(logname$)
			dmisg010.prdt = utc.num()
			break
		case DAL_UPDATE:
			dmisg010.prdt = utc.num()	
			break
	ENDCASE
	return(0)
}

function extern long set.object.defaults()
{
	dmisg010.issu.object.default()
	return(0)
}

function extern long before.new.object()
{	
| 	if	len(trim$(dmisg010.issu)) <> 9	then
		dmisg010.issu = tpmsl000.issr
| 	endif	
	return(0)
}

function extern long before.get.object()
{
	return(0)
}

function extern long after.get.object()
{
	
	return(0)
}

function long read.parameters()
{
	RETIFNOK(tcmcs.dll0095.read.parm("tpmsl000"))
	return(0)
}

|**** Dependencies Section ****************************************************

function void define.field.dependencies()
{
	|* Initialize field relations.
	dal.init.field.dependencies()
	
	
	|* Add direct dependent fields.
	|* Please keep the fields in alphabetical order.

	dal.finalize.field.dependencies()
}

function boolean new.method.is.allowed()
{
	return(true)
}

function boolean update.method.is.allowed()
{
	return(true)
}
function boolean destroy.method.is.allowed()
{
			long		delete.allowed

	with.old.object.values.do(	deleting_allowed,
					delete.allowed)	|* ref
	if not delete.allowed then
		return(false)
	endif

	return(true)
}

function void deleting_allowed(
	ref		long		o.delete.allowed)
{
	o.delete.allowed = true
}

|**********************  Issue Number ****************
function void dmisg010.issu.object.default()
{
	dmisg010.issu = tpmsl000.issr	
}


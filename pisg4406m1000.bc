|******************************************************************************
|* whmsl3410r  0  VRC B61U a  msl 
|* Purchase Bill Approval Memo
|* Dhirender                     
|* 2009-07-23
|******************************************************************************
|* Main table whinh310 Receipt Headers, Form Type 4
|******************************************************************************
|* ISGECDV001031, IT0205, Arjit Gupta, Dt. 19-09-2014, VRC B61U a7 live
|* Calculate Excise on tdpur401.tase.l and Service on tdpur401.tass.l
|*
|* ISGECDV001032, IT0205, Arjit Gupta, Dt. 20-09-2014, VRC B61U a7 live
|* Calculate Excise on tdpur401.tase.l and Service on tdpur401.tass.l on the basis 
|* of receipt quantity.
|*
|* ISGECDV001074, IT0205, Arjit Gupta, Dt. 04-10-2014, VRC B61U a7 live
|* Add SRN Details in Annexure Report.
|*
|* ISGECDV001078, IT0205, Arjit Gupta, Dt. 04-10-2014, VRC B61U a7 Live
|* Tax Calculation based on PO line wise 
|*
|* ISGECDV001146, IT0205, Arjit Gupta, Dt. 07-11-2014, VRC B61U a7 live
|* Add column GR Weight & Vehicle Number
|* Revert As GR Patch is not on 192.9.200.121 server, Arjit, 14-11-2014
|*
|* ISGECDV001154, IT0205, Arjit Gupta, Dt. 13-11-2014, VRC B61U a7 live
|* Add a Purchase Receipt Text
|* 
|* ISGECDV001166, IT0205, Arjit Gupta, Dt. 18-11-2014, VRC B61U a7 live
|* Add a new Annexure for Vehicle which repeated within 15 days.

|*ISG10103, IT0289, Shilpa Janardanan, Dt. 22-12-2014, VRC B61U a7 live
|* Picking Service tax from the financial company maintained against the Purchase Office
|*
|*PATCH002016 , Mani sharma , Dt . 24-03-2015, VRC B61U a7 isg
|* Change supplier address fields

|* ISGEC015016, IT0289, Shilpa Janardanan, Dt. 22-12-2014, VRC B61U a7 live
|* tax rate to be calculated on the basis of date

|******************************************************************************
|* ISGEC015036, IT0308, Somak Mondal, Dt. 04-08-2015, VRC B61U a7 isg
|* 			
|* ISGEC015024, IT0302, Ankit Sharma, Dt. 20-08-2015, VRC B61U a7 isg
|* New report layout developed for concatenate approval bill memo annexure
|* and Annexure Repeated Vehicle within 15 days.
|
|* If in session tdisg8131m600 on line level To be Billed check box is selected 
|* then Billing value associate with that line will be printed in the below 
|* mentioned Purchase Bill Approval Memo report. And if To be billed check box 
|* is unticked then Reason Code associated to that Billing advice line will be printed. 
|* ----- Report field added - rep.bivl-----

|* ISGEC01033, IT0417, Vishal Anand, Dt. 20-01-2016, VRC B61U a7 live
|* Change calculation logic for swacch bharat tax
|
|* ISGEC015087, IT0302, Ankit Sharma, Dt. 24-02-2016, VRC B61U a7 live
|* Added currency column in field
|
|* ID ISGEC015086, Manish Manchanda, 2016-03-01
|* Modification for city2 and zip postal code
|*
|* ID : ISGECFIN012, IT0386, Saurabh Dubey, VRC B61U a7 isg Dt. 17.06.2016
|* Krishi Kalyan Cess Logic
|*
|* ID : ISGECGST002, IT0386, Saurabh Dubey, VRC B61U a7 isg
|* GST Related Correctons done in report
|*
|* ID: ISGECMOD020, IT0478, Atul Ojha, 27/03/2018, VRC B61U a7 isg
|* GST Cess field added in GST Report
|*
|* ID: ISGEC01099,Manav Singh, 17-08-2018,VRC B61U a7 isg
|* Modification in Purchase Bill approval Memo 
|*
|* ID: ISGEC001222, IT0478, Atul Ojha, 27/08/2018, VRC B61U a7 isg
|* Modifications
|*
|* ID: ISGEC016019, Manav Singh, 09/02/2019, VRC B61U a7 isg
|* Modifications
|****************************** declaration section ***************************
declaration:

table	twhinh310 | Receipt Headers
table	twhinh312
table	twhinh940
table	ttdpur400
table	ttdpur401	
table	ttdpur406	
table	ttccom130
table	ttcibd001
table	ttctax400
table	ttctax941
table   ttcmcs041
table	ttcmcs013
table	ttcmcs032
table	ttcmcs036
table	ttdmsl503
table   ttcmcs143
table	ttcmcs010
table	ttctax940
table	ttpisg122
table	ttpisg039
table   ttcmcs080  | transporter Name
table   ttccom139  |PATCH002016.n
	table	ttppdm600
	table	ttfisg001
	table	ttfisg003
	table	ttcisg001
	table	ttdisg001
	table	ttpisg005
	table	twhisg312
	table	tttaad200
	table	ttppdm740
| 	table	ttdmsl121
| 	table   ttimsl000
table   twhinh936
table	ttclct200, ttclct115, ttfacp935
table	ttcmcs003
	table	ttdmsl400
	table	ttfisg002
	table	ttfisg000
	table	ttdisg452				|#ISGECDV001074.n
	table	ttdisg406				|#ISGECDV001154.n
	table	ttdisg832 |Billing Advice Lines		|#ISGEC015036.n
	table	ttcmsl111				|#ISGEC015086.n
	table	ttfacp200			|#ISGEC01099.n
	table	ttfacp250			|#ISGEC01099.n
	table	ttfisg151			|#ISGEC01099.n	
	table	ttfmsl020			|#ISGEC01099.n
	table	ttfcmg112			|#ISGEC01099.n
	table	ttfacp203			|#ISGEC01099.n
	table	ttdpur456			|#ISGEC01099.n
	table	ttdisg209			|#ISGEC01099.n
	table	ttfgld106			|#ISGEC01099.n
	table	ttfgld102			|#ISGEC01099.n
	table	ttfcmg101			|#ISGEC01099.n
	table	ttfisg207			|#ISGEC001222.sn
	table	ttccom001			|#ISGEC001222.en

extern  domain  whinh.shpm       rcno.f    
extern  domain  whinh.shpm       rcno.t  
extern  domain  tcdsca           v.dsca
extern  domain  tcpric           v.totl,g.totl,gv.totl,rate.pric
extern  domain  tcfovn           v.tino,v.ecno 
extern  domain  tcsern	    srno
extern  domain tcamnt	    bed.amount, ecess.amount,hecess.amount,cst.amount,ad.amount, total.amount, decc, final.amount
extern  domain tcmcs.st65m       amount1,amount2,amount3,amount4, amount5, amount6
extern  domain tcmcs.s130m       decode0,decode1,decode2,decode3,decode4,decode5,decode6,decode7
extern 	domain tcmcs.str20	rcpt.date,pur.date,inv.date
extern	domain	tcnama		reportdesc,company_name,tc
extern	domain	tcamnt	r.eces.per, r.cess.per, r.vat.per, r.kk.cess.per, r.kk.cess.amnt
extern	domain	tcpvat	r.sgst.per, r.cgst.per, r.igst.per,	|#ISGECGST002.n
			r.gst.cess.per				|#ISGECMOD020.n
extern	domain	tcamnt	temp.cgst.amnt, temp.igst.amnt		|#ISGECGST002.n
			
extern	domain	tcamnt	r.eces, r.cess, r.vat, add.chg,frt.amnt,add.chg.tax
extern	domain	tcamnt	total.vat,v.eces, v.cess, v.vat, v.add.chg,tax.amnt,tot.amnt
extern	domain	tcamnt	r.disc,cal.per
extern	domain	tclang	language
extern	domain	tcdsca	additional.code
string	qury.strg(5000)
extern 	domain tcsern a
extern  domain  tcpono  pono
extern	string additional.array(20, 5)
extern	domain	tcamnt		additional.value(5)
extern	domain	tcsern	printed.addition
extern	domain	tcemno	i.proc				|#ISGEC001222.n
|Varibales for Additional Charges

extern  domain	tcccty		g.imp.tax.country
extern  domain	tccvat		g.imp.group.tax.code
extern  domain	tcdate		g.imp.tax.date
extern  domain	tcamnt		g.imp.order.line.price
extern  domain	tcamnt		g.imp.customs.value
extern  domain	tcamnt		g.imp.market.retail.price
extern  domain	tcamnt		g.imp.retail.sales.price 
extern  domain	tcamnt		g.imp.tariff.price
extern  domain	tcccur		g.imp.price.currency
extern  domain	tcdate		g.imp.rate.date
extern  domain	tcrtyp		g.imp.exchange.rate.type				
extern  domain	tcpric		g.imp.asv.excise,previous.maximum.amount
extern  domain	tcpric		g.imp.asv.vat
extern  domain	tcpric		g.imp.asv.service.tax
extern	domain	tcdate		g.ship.or.recreive.date
extern	domain	tcyesno		g.as.is.sales
extern	domain	tcyesno		g.used.goods
extern	domain	tctax.indt.l	g.duty.type.array(1,1)	based
extern	domain	tcamnt		g.duties.array(1,1)	based
extern	domain	tcpvat		g.layer.tax.rate(1,1)	based
extern	domain	tcamnt		g.layer.base.amount.array(1, 1)	based
extern	domain	tcamnt		g.layer.tax.amount.array(1, 1)	based
extern	domain	tccvat		g.layer.tax.code.array(1, 1)	based
extern	domain	tctax.indt.l	g.line.indirect.tax.array(1,1) 	based
extern	domain	tcyesno		g.expensed.tax(1,1)		based
domain	tcmcs.s250m	comb.output.set(1)	based
extern	domain	tcamnt		f.claimable
extern	domain	tcamnt		f.non.claimable
extern	domain	tcamnt		f.total,totaltax ,grndtotaltax ,truetotaltax
extern	domain	tcamnt		f.layer.base.amnt,var
extern	domain	tcamnt		f.layer.tax.amnt	
extern	domain	tcpvat		f.layer.tax.rate	
extern	domain	tctax.indt.l	f.indirect.tax		
extern	domain	tcdsca		f.tax.code.dsca
extern		long	i, j
extern	domain	tccvat		f.cvat
extern	domain	tcnamb		tax   
	long	line.no
domain	tcmcs.s250m	i.comb.output.set(1) based
domain	tccvat		o.line.tax.code.array(1,1)	based
domain	tctax.indt.l	i.duty.type.array(1,1)	based
domain	tcamnt 		i.duties.array(1,1)	based
domain	tcpvat		o.tax.rates(1,1)	based
domain	tctax.seqn	o.maximum.sequence.number
domain	tcamnt		o.line.base.amount.array(1,1)	based
domain	tcamnt		o.line.tax.amount.array(1,1)	based
domain	tctax.indt.l	o.line.indirect.tax.array(1,1)	based
domain	tcyesno		o.expensed.tax(1,1)	based
domain	tcamnt		o.total.tax.amount
domain	tcamnt		o.sales.tax
domain	tcmcs.s250m	o.error.msg

extern	domain	tcnama		v.nama
extern	domain	tcmcs.str100	v.ln01,v.ln02,v.ln03,v.ln04,v.ln05
	extern	domain	tcyesno		with.tax
	extern	domain	tcnama		rep.prj.nama
	extern	domain	tcnamd		rep.prj.namd
	extern	domain	tcmcs.str100m	rep.prj.ln01
	extern	domain	tcmcs.str100m	rep.prj.ln03
	extern	domain	tcdsca		rep.prj.dsca
	extern	domain	tcmail		rep.prj.info
	extern	domain	tcamnt		rep.ot.amnt
	extern	domain	tcamnt		rep.exc.amnt
	extern	domain	tcamnt		tmp.rep.st.amnt
	extern	domain	tcamnt		tmp.rep.exc.amnt
	extern	domain	tcamnt		tmp.rep.sgst.amnt	|#ISGECGST002.n
	extern	domain	tcamnt		rep.sgst.amnt, gross.sgst.amnt,	|#ISGECGST002.n
					cess.amnt, gross.cess.amnt	|#ISGECMOD020.n	
	extern	domain	tcamnt		rep.st.amnt
	extern	domain	tcamnt		line.amnt
	extern	domain	tcamnt		gros.total
	extern	domain	tcamnt		line.total
	extern	domain	tfgld.amnt	gros.amnt.total
	extern	domain	tcbool		fwhinh936.found
	extern	domain	tfgld.amnt	gros.exc.amnt
	extern	domain	tfgld.amnt	gros.ot.amnt
	extern	domain	tfgld.amnt	gros.st.amnt
	extern	domain	tfgld.amnt	less.amnt
	extern	domain	tfgld.amnt	gros.less.amnt
	extern	domain	tcmcs.long	prnt
	extern	domain	tcyesno		free.issue
	extern	domain	tcdsca		rep.free.issue
	extern	domain	tcnama		rep.prd.by
	extern	domain	tcmcs.str10	rep.stat
	extern	domain	tcnama		rep.tran.name
	extern	domain	tcmcs.long	rpt.no
	extern	domain	tcdsca		rep.from.place
	extern	domain	tcdsca		rep.to.place
		domain	tcbool		service.tax			|#ISGECDV001031.n
								|#ISGECDV001166.sn
	extern	domain	tcmcs.long	rpt.vhno
	extern	domain	tcorno		rep.rcno
	extern	domain	tfacp.isup	rep.grno
	extern	domain	tccom.bpid	rep.bpid
	extern	domain	tfgld.date	rep.grdt
	extern	domain	tcmcs.str15	rep.vhno
	extern	domain	tcdsca		rep.vhtp
	extern	domain	tcorno		rep.srct
	extern	domain	tfgld.date	rep.srdt
	extern	domain	tcnama		rep.bpnm
								|#ISGECDV001166.en
	domain	tcncmp			fin_comp, curr_comp			|#ISG1010103.n							
	extern domain tcdesc  		vend.nama,vend.namb,vend.namc,vend.namd,vend.namf,vend.pstc,
					vend.telp,vend.tefx,vend.dsca,vend.ccty,vend.cste,vend.ccit		|PATCH002016.n	
	extern	domain	tcmcs.str14	rep.bivl				|ISGEC015036.n	
	extern	domain	tcpono	r.var			|ISGEC015024.n
	extern	domain	tcmcs.str100m	rep.city2	|#ISGEC015086.n
						
						|#ISGECGST002.sn
	extern	domain	tcmcs.cste	gstn.b.cste, gstn.c.cste
	extern	domain	tcfovn		gstn.b.no
	extern	domain	tctax.txnb	gstn.c.no
	extern	domain	tcdsca		gstn.b.cste.dsca, gstn.c.cste.dsca
	extern	domain	tcnama		addr.nama
	extern	domain	tcmcs.str100m	addr.ln01, addr.ln02
	extern	domain	tcmcs.str100m	addr.ln03, addr.ln04
	extern	domain	tccom.cadr	temp.cadr
	extern	domain	tfgld.amnt	bas.val,adas.w,adua.w,tot.value,add.value,deduct.value,total,total.payment	|#ISGEC01099.sn
	extern	domain	tfgld.amnt	uaas.w,uaua.w,adas.w,adua.w	|#ISGEC01099.n
	extern	domain	tcyesno		cdf_lc01			|#ISGEC01099.n
	extern	domain	tcmcs.str30	lc_present			|#ISGEC01099.n
	extern	domain	tcpono		pymt.seqn			|#ISGEC01099.n
	extern	domain	tfgld.amnt	old.pymt,dnas.w,dnus.w,balance_advance,deduction.val,bal.payable		|#ISGEC01099.n
	extern	domain	tfgld.amnt	adv.un.assign,un.adv.balance,total.advance,inam.w				|#ISGEC01099.n
	extern	domain	tcorno		i.orno				|#ISGEC01099.n
	extern	domain	tfacp.isup	isup.w				|#ISGEC01099.n
	extern	domain	tcmcs.str30	purc.invo			|#ISGEC01099.n
	extern	domain	tfgld.amnt	l.tfacp200.amth(3)		|#ISGEC01099.n
	extern	domain	tcamnt		a.damt,b.oamt			|#ISGEC01099.n
			long		history.table.insert		|#ISGEC01099.n
	extern	domain	tcmcs.str15	i.stat				|#ISGEC01099.n	
	extern	domain	tcamnt		tax.amount,gross.amount		|#ISGEC01099.n	
	extern	domain	tfgld.amnt	i.amth				|#ISGEC01099.n
	extern	domain	tcamnt		amount_assigned,amount_unassigned		|#ISGEC01099.n	
	extern	domain	tcamnt		i.aamt				|#ISGEC01099.n	
					,oth.chg1,			|#ISGECMOD035.sn
					oth.chg2,
					oth.stx,					
					oth.exc,
					exc.amnt,
					sgst.amnt,
					cess.amnt,
					stx.amnt,
					tot.bas,
					tot.exc,
					tot.stx,
					tot.sgst,
					tot.cess,
					tot.oth1,
					tot.oth2,
					gross.val
		domain	tcccty		i.ccty 
		domain	tcdate		i.odat, i.ddta, i.ratd		
		domain	tcamnt		i.oamt 
		domain	tcpric		i.cuva, i.mrpi.l, 
					i.tase.l, i.tasv.l, 
					i.tass.l, i.tasg.l 
		domain	tcpono		i.pono
		domain	tcccur		i.ccur
		domain	tcrtyp		i.ratt
		domain	tccvat		i.cvat
									|#ISGECMOD035.en
	
	long	generated.flag			|#ISGEC001222.n
	
	#include "itcisg00001"
	#pragma used dll otcisgdll0100
						|#ISGECGST002.en
|****************************** program section ********************************
before.program:
	reportdesc = "Purchase Bill Approval Memo"
	language = language$
	curr_comp = get.compnr()
	
	
|****************************** group section **********************************

group.1:
init.group:
   get.screen.defaults()

|****************************** choice section ********************************

choice.cont.process:
on.choice:
   execute(print.data)
   
choice.generate_history:
on.choice:
| 	if insert.into.history.table() then						|#ISGEC01099.sn
	if rcno.is.confirmed(rcno.f)	then						|#ISGEC001222.n	
			message("Data alredy generated,Please select PRINT button")
			choice.again()
	else
		generated.flag = 1							|#ISGEC001222.sn
		delete.history.data(rcno.f)						|#ISGEC001222.en
		execute(print.data)	
	endif										|#ISGEC01099.en

choice.print.data:
on.choice:
| 	if rprt_open() then
| 		if	reportno = 1	then
| 			read.main.table()
| 		endif	
| 		rprt_close()
| 	else
| 		choice.again()
| 	endif
	rpt.no = 0
	spool.open("",spool.device,1)
	if	reportno = 2	then
		rpt.no = brp.open("rtdisg40600105",spool.device,0)
	else	
		rpt.no = brp.open("rtdisg40600101",spool.device,0)
	endif	
		if rpt.no > 0 then
			read.main.table()
			brp.close(rpt.no)
		else
			choice.again()
		endif
	|endif
	|if	reportno = 2	then
| 		rpt.no = brp.open("rtdisg40600002",spool.device,0)			|ISGEC015024.o
		rpt.no = brp.open("rtdisg4060104",spool.device,0)			|ISGEC015024.n
| 		rpt.vhno = brp.open("rtdisg40600003",spool.device,0)	|temp.o		|#ISGECDV001166.n |#ISGEC015024.o
		if rpt.no > 0 then
			read.main.table.annexure()
			brp.close(rpt.no)
| 			brp.close(rpt.vhno)				|#ISGECDV001166.n	|ISGEC015024.o
		else
			choice.again()
		endif
		
		rpt.no = brp.open("rtdisg40600106",spool.device,0)		|#ISGEC01099.sn		
		if rpt.no > 0 then
			read.main.table.pmt.rqst()
			brp.close(rpt.no)				
		else
			choice.again()
		endif								|#ISGEC01099.en	
	|endif
	spool.close()

|****************************** field section *********************************

field.rcno.f:
after.field:						|#ISGEC001222.sn
	if not isspace(rcno.f) then		
		if rcno.is.confirmed(rcno.f) then
			disable.commands("generate_history")
		else
			enable.commands("generate_history")
		endif
	endif	
							|#ISGEC001222.en
when.field.changes:
	rcno.t = rcno.f
	
before.zoom:
| 	qury.strg = "whinh310.rcno in (select whinh312.rcno from whinh312 where whinh312.oorg in (1,2,3,80,81,82))"	
| 	query.extend.where.in.zoom(qury.strg)

|****************************** function section ******************************

functions:

function read.main.table()
{
	srno =0
	g.totl = 0
	v.totl =0
	bed.amount =0
	ecess.amount =0
	hecess.amount =0
	cst.amount =0
	ad.amount =0
	total.amount =0
	decc =0
	final.amount =0
	r.eces.per = 0 
	r.cess.per = 0
	r.vat.per = 0
	r.eces = 0
	r.cess = 0
	r.vat = 0
	add.chg = 0
	
	v.eces = 0
	v.cess = 0
	v.vat = 0
	v.add.chg = 0
	total.vat = 0
	fwhinh936.found = false	
	gros.total = 0
	gros.amnt.total = 0
	gros.exc.amnt = 0
	gross.sgst.amnt = 0	|#ISGECGST002.n
	gross.cess.amnt = 0	|#ISGECMOD020.n
	gros.ot.amnt = 0
	gros.st.amnt = 0
	gros.less.amnt = 0
	prnt = 0
	bas.val = 0		|#ISGEC01099.n
	
										|#ISGECMOD035.sn
	initialize.po.gross.value.variables()
										|#ISGECMOD035.en
	
	fin_comp = 0		|ISG10103.n
	select	ttaad200.name:rep.prd.by
	from	ttaad200
	where	ttaad200._index1 = {:1}
	and	ttaad200._compnr = 000
	wherebind(1, logname$)
	selectdo
	selectempty
		rep.prd.by = ""
	endselect

	select	tdpur406.*
	from	tdpur406
	where	tdpur406._index2 inrange {:rcno.f} and	{:rcno.t}
	selectdo
		insert.into.history.table()       		|#ISGEC01099.n
		select	tfisg151.refr,tfisg151.orno,tfisg151.bgam			|#ISGEC01099.sn
		from	tfisg151
		where	tfisg151.orno = {:tdpur406.orno}
		selectdo
		endselect								|#ISGEC01099.en	
		
											|#ISGECMOD035.sn
		initialize.po.gross.value.variables()
		get.po.gross.amount(tdpur406.orno)					
											|#ISGECMOD035.en
		
		select	tdmsl400.orno,tdmsl400.vrsn,tdmsl400.work			|ISGEC016019.sn
		from	tdmsl400
		where 	tdmsl400._index1 = {:tdpur406.orno}
		and	tdmsl400.work = tdmsl.work.completed
| 		and	tdms400._index1 refers to tdmsl500
		selectdo
			select	tdmsl500.oamt:gross.val
			from	tdmsl500
			where	tdmsl500._index1 = {:tdmsl400.orno,:tdmsl400.vrsn}
			selectdo
			selectempty
				gross.val = 0.00
				
				select	tdpur400.oamt:gross.val
				from	tdpur400
				where	tdpur400._index1 = {:tdmsl400.orno}
				selectdo
				selectempty
					gross.val = 0.00	
				endselect	
			endselect	
		selectempty
		endselect								|ISGEC016019.en	

		tmp.rep.st.amnt = 0
		tmp.rep.exc.amnt = 0
		tmp.rep.sgst.amnt = 0.00
		
		select	tdpur401.*, tdpur400.*, tppdm600.padr, tcibd001.dsca, 
			tcmcs065.dsca, tccom100.nama, tcmcs041.dsca, tcmcs052.dsca,
			tcmcs065.comp:fin_comp				|ISG10103.n
		from	tdpur401, tdpur400, tppdm600, tcibd001, tcmcs065,
			tccom100, tcmcs041, tcmcs052
		where	tdpur401._index1 = {:tdpur406.orno, :tdpur406.pono, :tdpur406.sqnb}
		and	tdpur401.orno refers to tdpur400 Unref Clear
		and	tdpur401.cprj refers to tppdm600 Unref Clear
		and	tdpur401.item refers to tcibd001 Unref Clear
		and	tdpur400.cofc refers to tcmcs065 Unref Clear
		and	tdpur400.otbp refers to tccom100 Unref Clear
		and	tdpur400.cdec refers to tcmcs041 Unref Clear
		and	tdpur401.cprj refers to tcmcs052 Unref Clear
		selectdo
			get.var(pid,"tdpur400.cdf_lc01", cdf_lc01)			|#ISGEC01099.sn
			if etol(cdf_lc01) = 1 then
				lc_present = "LC present Against this PO"
			else
				lc_present = ""	
			endif								|#ISGEC01099.en
| 			select	tfacp251.ityp, tfacp251.idoc, tfacp251.orno, sum(tfacp251.amth(1)):bas.val     |#ISGEC01099.sn	|#ISGEC001222.o
			select	tfacp251.ityp, tfacp251.idoc, tfacp251.orno   				 |#ISGEC001222.n
			from	tfacp251
			where	tfacp251._index3 = {:curr_comp, tfacp.otyp.purchase, :tdpur400.orno}
			and	tfacp251._compnr = :fin_comp
			group by tfacp251.ityp, tfacp251.idoc, tfacp251.orno
			order by tfacp251.orno	
			selectdo
			endselect							|#ISGEC01099.en
			
			get.processsor.account(tdpur401.cprj)				|#ISGEC001222.n
			
			if history.table.insert = 1 then				|#ISGEC01099.sn
				bas.val = tdisg209.poba
				total.advance = tdisg209.tadv
				total.payment = tdisg209.tpay
				dnas.w = tdisg209.dbnt 					|#ISGEC001222.sn
				adas.w = tdisg209.adas  
				uaas.w = tdisg209.uaas 
				adua.w = tdisg209.adua   
				uaua.w = tdisg209.uaua   	
											|#ISGEC001222.en
			else	
				Total_Payment_against_PO()							|#ISGEC01099.n
			endif								|#ISGEC01099.en		
			
			if	free.issue = tcyesno.yes	then
				rep.free.issue = "Free Issue Delivery"
			else
				rep.free.issue = ""
			endif
			
			
			select	tdmsl503.code
			from	tdmsl503
			where	tdmsl503._index1 = {:tdpur406.rcno, :tdpur406.rseq}
			selectdo
			selectempty
				tdmsl503.code = ""
			endselect
			
			select	tppdm740.ofbp
			from	tppdm740
			where	tppdm740._index1 = {:tdpur401.cprj}
			as set with 1 rows
			selectdo
			selectempty
				tppdm740.ofbp = ""
			endselect
			
			if	not isspace(tppdm600.padr)	then
				Get_Project_addr(tppdm600.padr)
			endif	
				
			select	tfisg001.irno, tfisg001.irdt, tfacp100.isup, tfacp100.invd,
				tfacp100.amti
			from	tfisg001, tfacp100
			where	tfisg001._index1 = {:1}
			and	tfisg001.irno refers to tfacp100 Unref Clear
			as set with 1 rows
			wherebind(1, lval(tdpur406.dino))
			selectdo
				select	tfisg002.grno, tfisg002.grdt
				from	tfisg002
				where	tfisg002._index1 = {:tfisg001.irno}
				as set with 1 rows
				selectdo
					tfisg003.grno = tfisg002.grno
					tfisg003.grdt = tfisg002.grdt
				selectempty
					tfisg003.grno = ""
					tfisg003.grdt = 0
				endselect	
				| select	tfisg003.grno, tfisg003.grdt
				| from	tfisg003
				| where	tfisg003._index3 = {:tfisg001.irno}
				| as set with 1 rows
				| selectdo
				| endselect
			endselect	
					
			srno = srno +1
			
| 			select	whisg312.inrq						|#ISGEC015036.o
			select	whisg312.inrq,whisg312.rcno,whisg312.rcln		|#ISGEC015036.n
			from	whisg312
			where	whisg312._index1 = {:tdpur406.rcno, :tdpur406.rseq}
			selectdo
			selectempty
				whisg312.inrq = ""
			endselect
			
								|#ISGECGST002.sn
			select	tpisg039.ityp, tpisg039.idoc
			from	tpisg039
			where	tpisg039.rcno = :tdpur406.rcno
			and	tpisg039.rcln = :tdpur406.rseq
			selectdo
			selectempty
				tpisg039.ityp = ""
				tpisg039.idoc = 0
			endselect
						|#ISGECGST002.en
													
			get.billing.advics.lines(whisg312.rcno,whisg312.rcln)		|#ISGEC015036.n	
												
			select	tdmsl400.vrsn, tdmsl400.apdt
			from	tdmsl400
			where	tdmsl400._index1 = {:tdpur406.orno}
			and	tdmsl400.stat = tcyesno.yes
			order by tdmsl400.vrsn desc
			as set with 1 rows
			selectdo
			endselect
			
			select	tctax400.*
			from	tctax400
			where	tctax400._index1 = {:tdpur400.otbp}
			and	tctax400.efdt <= :whinh312.ardt
			and	(tctax400.exdt >= :whinh312.ardt or tctax400.exdt =0)
			selectdo
				if	tctax400.catg.l = tctax.catg.l.excise then
					v.ecno = tctax400.fovn
				endif 
				if	tctax400.catg.l = tctax.catg.l.lst then
					v.tino = tctax400.fovn
				endif	
			endselect
								|#ISGECGST002.sn
			
			tctax.dll4100.get.bp.reg.number.based.on.seq.l(tdpur401.rnsb.l, gstn.b.no)
			
			tcisgdll0100.get.bp.country.state.from.tax.seqn.l(	tdpur401.rnsb.l, 
										tctax400.ccty, 
										gstn.b.cste)	|* BP Tax State
			
			tcisgdll0100.get.state.description(tctax400.ccty, gstn.b.cste, gstn.b.cste.dsca)
			
			select	tpisg122.stad,
				tccom130.nama:addr.nama,
				tccom130.ln01:addr.ln01,
				tccom130.ln02:addr.ln02,
				tccom130.ln03:addr.ln03,
				tccom130.ln04:addr.ln04
			from	tpisg122, tccom130 
			where	tpisg122._index1 = {:tdpur401.cprj}
			and	tpisg122.stad refers to tccom130 UNREF CLEAR
			selectdo
			selectempty
				addr.nama = ""
				addr.ln01 = ""
				addr.ln02 = ""
				addr.ln03 = ""
				addr.ln04 = ""
			endselect

			select	tctax940.stpv:gstn.c.cste, 
				tctax940.regn:gstn.c.no, 
				tctax940.cdf_cadr
			from	tctax940
			where	tctax940._index1 = {:tdpur401.rnso.l}
			selectdo
				tcisgdll0100.get.state.description(OWN.COUNTRY, gstn.c.cste, gstn.c.cste.dsca)
			selectempty
				gstn.c.cste = ""
				gstn.c.cste.dsca = ""
				gstn.c.no = ""
			endselect	
							|#ISGECGST002.en
			get.address(tdpur400.otad)				|PATCH002016.n			
			select	tccom130.*
			from	tccom130
			where	tccom130._index1 = {:tdpur400.otad}
			selectdo
				select	tcmcs143.dsca
				from	tcmcs143
				where	tcmcs143._index1 ={:tccom130.ccty, :tccom130.cste} 
				selectdo
				endselect

				select	tcmcs010.dsca
				from	tcmcs010
				where	tcmcs010._index1 = {:tccom130.ccty} 
				selectdo
				endselect
			endselect
				
			total.vat = 0
			line.amnt = 0
			rep.ot.amnt = 0
			rep.exc.amnt = 0
			rep.sgst.amnt = 0	|#ISGECGST002.n
			cess.amnt = 0		|#ISGECMOD020.n
			rep.st.amnt = 0
			
			total.vat = total.vat + tdpur401.tasv.l
| 			line.amnt = line.amnt + (tdpur406.qiap * tdpur401.pric)		|#ISGECDV001031.o
			| select	tdpur401.*, tppdm600.padr
			| from	tdpur401, tppdm600
			| where	tdpur401._index1 = {:whinh312.orno ,:whinh312.pono, :whinh312.seqn}
			| and	tdpur401.item = :whinh312.item
			| and	tdpur401.cprj refers to tppdm600 Unref Clear
			| selectdo
			| 	get.discount.amount()
			| 	v.totl = (tdpur401.pric - r.disc ) * whinh312.qrec
			| 	g.totl = g.totl + v.totl	
			| endselect
			service.tax = false			|#ISGECDV001031.n
			calculate_freight()
			get.tax.rate(tdpur401.ccty, tdpur401.cvat)
			
								|#ISGECDV001031.sn
			if	service.tax	then
| 				line.amnt = tdpur401.tass.l	|#ISGECDV001032.o
											|#ISGECDV001032.sn
				if	tdpur401.qoor <> 0	then
					line.amnt = (tdpur401.tass.l/tdpur401.qoor) * tdpur406.qiap
				else
					line.amnt = 0
				endif
											|#ISGECDV001032.en
			else
| 				line.amnt = tdpur401.tase.l				|#ISGECDV001032.o
										|#ISGECDV001032.sn
				if	tdpur401.qoor <> 0	then
					line.amnt = (tdpur401.tase.l/tdpur401.qoor) * tdpur406.qiap
				else
					line.amnt = 0
				endif
				
				if tdpur401.tasg.l <> 0.00 and tdpur401.gsta.l = tcyesno.yes then
					line.amnt = (tdpur401.tasg.l/tdpur401.qoor) * tdpur406.qiap
				endif
				
										|#ISGECDV001032.en
			endif
								|#ISGECDV001031.en
					
			v.eces =  ( (line.amnt * r.eces.per) / 100 )
			v.cess = (v.eces * r.cess.per) / 100 
			
			r.kk.cess.amnt = (line.amnt * r.kk.cess.per) / 100 	|#ISGECFIN012.n
			temp.cgst.amnt = (line.amnt * r.cgst.per) / 100 	|#ISGECGST002.sn
			rep.sgst.amnt = (line.amnt * r.sgst.per) / 100 	
			temp.igst.amnt = (line.amnt * r.igst.per) / 100 	|#ISGECGST002.en
			cess.amnt = (line.amnt * r.gst.cess.per) / 100		|#ISGECMOD020.n
			
| 			rep.exc.amnt = rep.exc.amnt + (v.eces + v.cess)		|#ISGECFIN012.o
			rep.exc.amnt = rep.exc.amnt + (v.eces + v.cess + r.kk.cess.amnt)  +	|#ISGECFIN012.n
					temp.igst.amnt
					
			if	tdpur401.qoor <> 0	then
				total.vat = (total.vat/tdpur401.qoor)*tdpur406.qiap
			else
				total.vat = 0
			endif	
			|rep.st.amnt = ((total.vat + rep.exc.amnt  ) * r.vat.per) / 100
| 			rep.st.amnt = ((total.vat ) * r.vat.per) / 100  |#ISGEC01033.o
			
			if tdpur401.gsta.l = tcyesno.yes then				|#ISGECGST002.sn
				rep.st.amnt = temp.cgst.amnt
			else								|#ISGECGST002.en
				rep.st.amnt = ((line.amnt ) * r.vat.per) / 100 |#ISGEC01033.n
			endif	
			
			if	tdpur406.conf = tcyesno.yes	then
				rep.stat = "Confirmed"
				get.tax.from.tfacp935()
			else
				rep.stat = "Open"
				tmp.rep.exc.amnt = rep.exc.amnt
				tmp.rep.st.amnt = rep.st.amnt
				tmp.rep.sgst.amnt = rep.sgst.amnt	|#ISGECGST002.n
				fwhinh936.found = false		|#ISGECDV001020.n
				get.tax.from.whinh936()
			endif	
			
			line.total = 0
			line.total = (rep.ot.amnt + rep.exc.amnt + rep.st.amnt + rep.sgst.amnt) + (tdpur406.qiap * tdpur401.pric) 
					+ cess.amnt				|#ISGECMOD020.n
			gros.amnt.total = gros.amnt.total + (tdpur406.qiap * tdpur401.pric)
			gros.exc.amnt = gros.exc.amnt + rep.exc.amnt
			gross.sgst.amnt = gross.sgst.amnt + rep.sgst.amnt	|#ISGECGST002.n
			gross.cess.amnt = gross.cess.amnt + cess.amnt		|#ISGECMOD020.n
			gros.ot.amnt = gros.ot.amnt + rep.ot.amnt
			gros.st.amnt = gros.st.amnt + rep.st.amnt
			gros.total = gros.total + line.total
			
			if history.table.insert = 1 then			|#ISGEC01099.sn		
				deduction.val = tdisg209.npay
			else
				balance.payable()
				deduction.val =(Balance_advance/bal.payable) * gros.amnt.total
			endif							|#ISGEC01099.en
					
			tcmcs.dll0006.decode(g.totl,2,decode0,decode1,decode2,decode3, language)
			decc= lval(decode3) * 1
			tcmcs.dll0006.decode(decc,2,decode4,decode5,decode6,decode7, language)
			if isspace(decode3)  then
| 				amount1=toupper$("Rs. " & strip$(decode0))                       
				amount1=toupper$(tdpur400.ccur & strip$(decode0))                       
				amount2 =toupper$(" and " & strip$(decode4) & " Paise" &" ONLY") 
			
			endif
			if not isspace(decode3)  then
| 				amount1=toupper$("Rs. " & strip$(decode0))                         
				amount1=toupper$(tdpur400.ccur & strip$(decode0))                         
				amount2=toupper$(" and " & strip$(decode4)  & " Paise" &  " ONLY") 
				
			endif
								|#ISGECDV001154.sn
			select	tdisg406.txta
			from	tdisg406
			where	tdisg406._index1 = {:tdpur406.rcno}
			selectdo
			selectempty
				tdisg406.txta = 0
			endselect
								|#ISGECDV001154.en
			prnt = 1
			|rprt_send()
			brp.ready(rpt.no)
			prnt = 0	
		endselect
		
		
	endselect
	
	prnt = 2
	|rprt_send()
	brp.ready(rpt.no)
	prnt = 0
	
| 	gros.less.amnt = Deduction.val			|#ISGEC01099.n
	select	tcisg001.*
	from	tcisg001
	where	tcisg001._index1 = {:tdpur406.orno, :tdmsl400.vrsn}
	and	tcisg001.cpay = {:tdpur400.cpay}
	selectdo
		select	tdisg001.*, tpisg005.desc
		from	tdisg001, tpisg005
		where	tdisg001._index1 = {:tdpur406.orno, :tdmsl400.vrsn}
		and	tdisg001.pmtl = :tcisg001.srno
		and	tdisg001.docn refers to tpisg005 Unref Clear
		selectdo
			prnt = 3
			|rprt_send()
			brp.ready(rpt.no)
			prnt = 0
		selectempty
			prnt = 3
			|rprt_send()
			brp.ready(rpt.no)
			prnt = 0
		endselect	
	endselect
	
	prnt = 4
| 	rprt_send()
	brp.ready(rpt.no)
	prnt = 0
	
| 	select	tcisg001.*					|#ISGEC01099.so
| 	from	tcisg001
| 	where	tcisg001._index1 = {:tdpur406.orno, :tdmsl400.vrsn}
| 	and	tcisg001.cpay = {:tdpur400.cpay}
| 	and	tcisg001.catg in (tcisg.catg.advance, tcisg.catg.retention)
| 	selectdo
| 		less.amnt = 0
| 		if	with.tax = tcyesno.yes	then
| 			less.amnt = (tcisg001.perc * gros.total) / 100
| 		else	
| 			less.amnt = (tcisg001.perc * gros.amnt.total) / 100
| 		endif	
| 		gros.less.amnt = gros.less.amnt + less.amnt
| 		prnt = 5
| 		|rprt_send()
| 		brp.ready(rpt.no)
| 		prnt = 0
| 	endselect						|#ISGEC01099.eo
	gros.less.amnt = Deduction.val				|#ISGEC01099.sn
	prnt = 5
	brp.ready(rpt.no)
	prnt = 0						|#ISGEC01099.en
	
	if generated.flag = 1 then					|#ISGEC001222.n	
		if history.table.insert = 0 then			|#ISGEC01099.sn
			tdisg209.rcno = rcno.f
			tdisg209.poba = bas.val
			tdisg209.tadv = total.advance
			tdisg209.tpay = total.payment
			tdisg209.npay = deduction.val
			tdisg209.dbnt = dnas.w				|#ISGEC001222.sn
			tdisg209.adas = adas.w
			tdisg209.uaas = uaas.w 
			tdisg209.adua = adua.w 
			tdisg209.uaua = uaua.w 				|#ISGEC001222.en
			db.insert(ttdisg209,db.skip.dupl,e)
			if not e then
				commit.transaction()
			else
				abort.transaction()
			endif
		endif	
									|#ISGEC01099.en	
		generated.flag = 0							
	endif								|#ISGEC001222.n		
			
		
}

									|#ISGECMOD035.sn
function get.po.gross.amount(domain	tcorno	in.orno)													
{	
	initialize.po.gross.value.variables()
	
	select	atdpur400.orno,
		atdpur401.pono:i.pono,
		atdpur401.ccty:i.ccty,
		atdpur401.odat:i.odat,
		atdpur401.oamt:i.oamt,
		atdpur401.cuva:i.cuva,
		atdpur401.mrpi.l:i.mrpi.l,
		atdpur401.ddta:i.ddta,
		atdpur401.tase.l:i.tase.l,
		atdpur401.tasv.l:i.tasv.l,
		atdpur401.tass.l:i.tass.l,
		atdpur401.tasg.l:i.tasg.l,
		atdpur401.cvat:i.cvat,
		atdpur400.ccur:i.ccur,
		atdpur400.ratd:i.ratd,
		atdpur400.ratt:i.ratt
	from	tdpur401 atdpur401, tdpur400 atdpur400
	where	atdpur401._index1 = {:in.orno}
	and	atdpur401.orno refers to atdpur400 UNREF CLEAR
	selectdo
		Get_Landed_Cost(i.orno,i.pono)	
		populate.tax.amounts()
		
		tot.oth1 = tot.oth1 + oth.chg1
		tot.oth2 = tot.oth2 + oth.chg2
		tot.bas = tot.bas + i.oamt
		tot.exc = tot.exc + exc.amnt + oth.exc
		tot.stx = tot.stx + stx.amnt + oth.stx
		tot.sgst = tot.sgst + sgst.amnt
		tot.cess = tot.cess + cess.amnt
	selecteos
| 		gross.val = tot.bas + tot.sgst + tot.exc 				|ISGEC016019.so
| 			+ tot.stx + tot.oth1 + tot.oth2 + tot.cess			|ISGEC016019.eo
	endselect	
}

function Get_Landed_Cost(	domain tcorno		im.orno,
				domain	tcpono		im.pono)
{
	domain	tcpono	tmp.sqnb
	string	tmp.borf(5), prv.borf(5)
	
	oth.chg1 = 0
	oth.chg2 = 0
	oth.stx = 0					
	oth.exc = 0
	tmp.sqnb = 0
	tmp.borf = ""
	prv.borf = ""
	
	select	a_tdpur401.sqnb:tmp.sqnb 
	from	tdpur401 a_tdpur401
	where	a_tdpur401._index1 = {:im.orno, :im.pono}
	and	a_tdpur401.oltp in (2,3,4)
	selectdo
		tmp.borf = str$(im.pono)&"/"&str$(tmp.sqnb)
		select	tclct200.* from tclct200
		where	tclct200._index1 = {2}
		and	tclct200.bobj = :im.orno
		and	tclct200.borf = :tmp.borf
		order by tclct200._index1
		as set with 2 rows
		selectdo
			if	tmp.borf <> prv.borf	then
				prv.borf = tmp.borf
				oth.chg1 = oth.chg1 + tclct200.lcam
			else
				oth.chg2 = oth.chg2 + tclct200.lcam
			endif	
			calculate.oth.tax.amounts()			
		endselect
	endselect	
}

function calculate.oth.tax.amounts()
{
	domain	tcamnt		line.tax.amount.array(1, 1)	based
	domain	tcamnt		line.base.amount.array(1, 1)	based
	domain	tccvat		line.tax.code.array(1, 1)	based
	domain	tctax.indt.l	o.line.indirect.tax.array(1, 1)	based
	domain	tctax.indt.l	i.duty.type.array(1, 1)		based
	domain	tcyesno		expensed.tax(1, 1)		based
	domain	tcmcs.s250m	o.comb.output.set(1)		based
	domain	tcpvat		o.tax.rates(1,1)		based
	domain	tcamnt		i.duties.array(1,1)		based
	domain tctax.seqn 	o.maximum.sequence.number
	domain tcamnt 		o.claimable.tax.amount
	domain tcamnt 		o.non.claimable.tax.amount
	domain tcamnt 		o.total.tax.amount
	domain tcamnt 		o.sales.tax
	domain tcmcs.s250m 	o.error.msg mb
	

	o.maximum.sequence.number = 0
	o.claimable.tax.amount = 0
	o.non.claimable.tax.amount = 0
	o.total.tax.amount = 0
	o.sales.tax = 0
	o.error.msg = ""
	
	oth.exc = 0
	oth.stx = 0
	
	if isspace(tclct200.cvat) then
		return
	endif
	
	
	tctax.dll9141.determine.aggregate.tax.amounts.per.line( 
						i.ccty,					| domain tcccty i.tax.country, 
						tclct200.cvat,				| domain tccvat i.aggregate.tax.code, 
						i.odat,					| domain tcdate i.tax.date, 
						i.oamt,					| domain tcamnt i.order.line.price, 
						i.cuva,					| domain tcamnt i.customs.value, 
						i.mrpi.l,				| domain tcamnt i.market.retail.price, 
						0.00,					| domain tcamnt i.retail.sales.price, 
						0.00,					| domain tcamnt i.tariff.price, 
						i.ccur,					| domain tcccur i.price.currency, 
						i.ratd,					| domain tcdate i.currency.rate.date, 
						i.ratt,					| domain tcrtyp i.currency.exchange.rate.type, 
						tclct200.lcam,				| domain tcpric i.asv.excise, 
						tclct200.lcam,				| domain tcpric i.asv.vat, 
						tclct200.lcam,				| domain tcpric i.asv.service.tax, 
						tclct200.lcam,				| domain tcpric i.asv.gst 
						i.ddta,					| domain tcdate i.ship.or.receive.date, 
						tcyesno.no,				| domain tcyesno i.as.is.sales, 
						tcyesno.no,				| domain tcyesno i.yesno.flag, 
						i.duty.type.array,			| ref domain tctax.indt.l i.duty.type.array(,), 
						i.duties.array,				| ref domain tcamnt i.duties.array(,), 
						o.tax.rates,				| ref domain tcpvat o.tax.rates(,), 
						o.maximum.sequence.number,		| ref domain tctax.seqn o.maximum.sequence.number, 
						line.base.amount.array,			| ref domain tcamnt o.line.base.amount.array(,), 
						line.tax.amount.array,			| ref domain tcamnt o.line.tax.amount.array(,), 
						line.tax.code.array,			| ref domain tccvat o.line.tax.code.array(,) fixed, 
						o.line.indirect.tax.array,		| ref domain tctax.indt.l o.line.indirect.tax.array(,), 
						expensed.tax,				| ref domain tcyesno o.expensed.tax(,), 
						o.claimable.tax.amount,			| ref domain tcamnt o.claimable.tax.amount, 
						o.non.claimable.tax.amount,		| ref domain tcamnt o.non.claimable.tax.amount, 
						o.total.tax.amount,			| ref domain tcamnt o.total.tax.amount, 
						o.sales.tax,				| ref domain tcamnt o.sales.tax, 
						o.comb.output.set,			| ref domain tcmcs.s250m o.comb.output.set() fixed mb, 
						o.error.msg)				| ref domain tcmcs.s250m o.error.msg mb )
	select	tctax941.*,tcmcs036.*
	from	tctax941,tcmcs036
	where	tctax941._index1 = {:i.ccty,:i.cvat}
	and	tctax941.type = 20		|tctax.type.l.tax
	and	tctax941.cmbb refers to tcmcs036
	selectdo
		on case tcmcs036.indt.l
		case	tctax.indt.l.bed:
		case	tctax.indt.l.service:	
			oth.exc = oth.exc + line.tax.amount.array(tctax941.layr,tctax941.seqn)
			break
		case	tctax.indt.l.aed:	
		case	tctax.indt.l.sed:	
		case	tctax.indt.l.e.cess.excise:	
		case	tctax.indt.l.e.cess.service:	
		case	tctax.indt.l.hse.cess.excise:
		case	tctax.indt.l.hse.cess.servic:	
			oth.exc = oth.exc + line.tax.amount.array(tctax941.layr,tctax941.seqn)
			break
		default:
			oth.stx = oth.stx + line.tax.amount.array(tctax941.layr,tctax941.seqn)
		endcase
	endselect
}

function populate.tax.amounts()
{
	domain	tcamnt		line.tax.amount.array(1, 1)	based
	domain	tcamnt		line.base.amount.array(1, 1)	based
	domain	tccvat		line.tax.code.array(1, 1)	based
	domain	tctax.indt.l	o.line.indirect.tax.array(1, 1)	based
	domain	tctax.indt.l	i.duty.type.array(1, 1)		based
	domain	tcyesno		expensed.tax(1, 1)		based
	domain	tcmcs.s250m	o.comb.output.set(1)		based
	domain	tcpvat		o.tax.rates(1,1)		based
	domain	tcamnt		i.duties.array(1,1)		based
	domain tctax.seqn 	o.maximum.sequence.number
	domain tcamnt 		o.claimable.tax.amount
	domain tcamnt 		o.non.claimable.tax.amount
	domain tcamnt 		o.total.tax.amount
	domain tcamnt 		o.sales.tax
	domain tcmcs.s250m 	o.error.msg mb
	domain	tcamnt		tmp.rate		
	domain	tcamnt		temp.1.rate, temp.amnt	
	
	
	exc.amnt = 0
	sgst.amnt = 0
	cess.amnt = 0
	stx.amnt = 0

	tctax.dll9141.determine.aggregate.tax.amounts.per.line( 
						i.ccty,					| domain tcccty i.tax.country, 
						i.cvat,					| domain tccvat i.aggregate.tax.code, 
						i.odat,					| domain tcdate i.tax.date, 
						i.oamt,					| domain tcamnt i.order.line.price, 
						i.cuva,					| domain tcamnt i.customs.value, 
						i.mrpi.l,				| domain tcamnt i.market.retail.price, 
						0.00,					| domain tcamnt i.retail.sales.price, 
						0.00,					| domain tcamnt i.tariff.price, 
						i.ccur,					| domain tcccur i.price.currency, 
						i.ratd,					| domain tcdate i.currency.rate.date, 
						i.ratt,					| domain tcrtyp i.currency.exchange.rate.type, 
						i.tase.l,				| domain tcpric i.asv.excise, 
						i.tasv.l,				| domain tcpric i.asv.vat, 
						i.tass.l,				| domain tcpric i.asv.service.tax, 
						i.tasg.l,				| domain tcpric i.asv.gst, 
						i.ddta,					| domain tcdate i.ship.or.receive.date, 
						tcyesno.no,				| domain tcyesno i.as.is.sales, 
						tcyesno.no,				| domain tcyesno i.yesno.flag, 
						i.duty.type.array,			| ref domain tctax.indt.l i.duty.type.array(,), 
						i.duties.array,				| ref domain tcamnt i.duties.array(,), 
						o.tax.rates,				| ref domain tcpvat o.tax.rates(,), 
						o.maximum.sequence.number,		| ref domain tctax.seqn o.maximum.sequence.number, 
						line.base.amount.array,			| ref domain tcamnt o.line.base.amount.array(,), 
						line.tax.amount.array,			| ref domain tcamnt o.line.tax.amount.array(,), 
						line.tax.code.array,			| ref domain tccvat o.line.tax.code.array(,) fixed, 
						o.line.indirect.tax.array,		| ref domain tctax.indt.l o.line.indirect.tax.array(,), 
						expensed.tax,				| ref domain tcyesno o.expensed.tax(,), 
						o.claimable.tax.amount,			| ref domain tcamnt o.claimable.tax.amount, 
						o.non.claimable.tax.amount,		| ref domain tcamnt o.non.claimable.tax.amount, 
						o.total.tax.amount,			| ref domain tcamnt o.total.tax.amount, 
						o.sales.tax,				| ref domain tcamnt o.sales.tax, 
						o.comb.output.set,			| ref domain tcmcs.s250m o.comb.output.set() fixed mb, 
						o.error.msg)				| ref domain tcmcs.s250m o.error.msg mb )
	select tctax941.*,tcmcs036.*
	from	tctax941,tcmcs036
	where	tctax941._index1 = {:i.ccty, :i.cvat}
	and	tctax941.type = 20		|tctax.type.l.tax
	and	tctax941.cmbb refers to tcmcs036
	selectdo
		on case tcmcs036.indt.l
		case	tctax.indt.l.kk.cess:	
		case	tctax.indt.l.bed:
		case	tctax.indt.l.service:			
		case	tctax.indt.l.igst:	
			exc.amnt = exc.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)
			break
		case	tctax.indt.l.aed:	
		case	tctax.indt.l.sed:	
		case	tctax.indt.l.e.cess.excise:	
		case	tctax.indt.l.e.cess.service:			
		case	tctax.indt.l.hse.cess.excise:
		case	tctax.indt.l.hse.cess.servic:		
			exc.amnt = exc.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)
			break
		case	tctax.indt.l.sgst:								
		case	tctax.indt.l.utgst:								
			sgst.amnt = sgst.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)
			break	
		case	tctax.indt.l.gstcess:
			cess.amnt = cess.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)
			break
		default:
			stx.amnt = stx.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)
		endcase
	endselect
}

function initialize.po.gross.value.variables()
{
	oth.chg1 = 0
	oth.chg2 = 0
	oth.stx = 0					
	oth.exc = 0
	
	exc.amnt = 0
	sgst.amnt = 0
	cess.amnt = 0
	stx.amnt = 0
	
	tot.oth1 = 0
	tot.oth2 = 0
	tot.bas = 0
	tot.exc = 0
	tot.stx = 0
	tot.sgst = 0
	tot.cess = 0
	
	gross.val = 0 
	
	i.ccty = ""
	i.odat = 0
	i.oamt = 0
	i.cuva = 0
	i.mrpi.l = 0
	i.ddta = 0
	i.tase.l = 0
	i.tasv.l = 0
	i.tass.l = 0
	i.tasg.l = 0
	i.pono = 0
	i.ratd = 0
	i.ccur = ""
	i.cvat = ""
}
									|#ISGECMOD035.en

									|#ISGEC001222.sn
function get.processsor.account(domain		tccprj	i.cprj)			
{
	select	tfisg207.proc:i.proc
	from	tfisg207
	where	tfisg207._index1 = {:i.cprj}
	selectdo
		select	tccom001.nama
		from	tccom001
		where	tccom001._index1 = {:i.proc}
		selectdo
		selectempty
			tccom001.nama = ""
		endselect
	selectempty
		tfisg207.proc = ""	
	endselect	
}
									|#ISGEC001222.en

function read.main.table.annexure()
{
	prnt = 0
	r.var = 0
	rep.tran.name = ""
	tcmcs.dll0095.read.parm("tfisg000")
	select	tdpur406.*
	from	tdpur406
	where	tdpur406._index2 inrange {:rcno.f} and	{:rcno.t}
	selectdo	
		select	tdpur401.*, tdpur400.odat, tcmcs052.dsca
		from	tdpur401, tdpur400, tcmcs052
		where	tdpur401._index1 = {:tdpur406.orno, :tdpur406.pono, :tdpur406.sqnb}
		and	tdpur401.orno refers to tdpur400 Unref Clear
		and	tdpur401.cprj refers to tcmcs052 Unref Clear
		selectdo	
			if	free.issue = tcyesno.yes	then
				rep.free.issue = "Free Issue Delivery"
			else
				rep.free.issue = ""
			endif
			
			select	tdmsl400.vrsn, tdmsl400.apdt
			from	tdmsl400
			where	tdmsl400._index1 = {:tdpur406.orno}
			and	tdmsl400.stat = tcyesno.yes
			order by tdmsl400.vrsn desc
			as set with 1 rows
			selectdo
			endselect
			
			select	tfisg001.irno, tfisg001.irdt, tfacp100.isup, tfacp100.invd,
				tfacp100.amti
			from	tfisg001, tfacp100
			where	tfisg001._index1 = {:1}
			and	tfisg001.irno refers to tfacp100 Unref Clear
			as set with 1 rows
			wherebind(1, lval(tdpur406.dino))
			selectdo
				select	tfisg002.grno, tfisg002.grdt, tfisg002.grbp, tccom100.nama:rep.tran.name
				from	tfisg002, tccom100
				where	tfisg002._index1 = {:tfisg001.irno}
				and	tfisg002.grbp refers to tccom100 Unref Clear
				selectdo
					select	tfisg003.plcf, tfisg003.plct, tfisg003.citf, tfisg003.citt,
						tfisg003.cctf, tfisg003.cctt, tfisg003.bpnm, tfisg003.tmod,
						tfisg003.grwt, tfisg003.vhno					|ISGECDV001146.n
					from	tfisg003
					where	tfisg003._index1 = {:tfisg002.grno, :tfisg002.grbp, :tfisg002.grdt}
					selectdo
						rep.from.place = get.city.desc(tfisg003.cctf, tfisg003.plcf, tfisg003.citf)
						rep.to.place = get.city.desc(tfisg003.cctt, tfisg003.plct, tfisg003.citt)
					selectempty
						rep.from.place = ""
						rep.to.place = ""
					endselect
					if	tfisg000.bpid = tfisg002.grbp	then
						rep.tran.name = tfisg003.bpnm
					endif	
					tfisg003.grno = tfisg002.grno
					tfisg003.grdt = tfisg002.grdt
					tfisg003.bpid = tfisg002.grbp
					prnt = 1
					brp.ready(rpt.no)
					prnt = 0
										|#ISGECDV001074.sn
					tdisg452.srdt = 0
					tdisg452.srct = ""
					select	tdisg452.srdt, tdisg452.srct
					from	tdisg452
					where	tdisg452._index2 = {:tfisg002.grno, :tfisg002.grbp, :tfisg002.grdt}
					selectdo
						prnt = 1
						brp.ready(rpt.no)
						prnt = 0
					endselect	
										|#ISGECDV001074.en
										|#ISGECDV001166.sn
					read.main.vehicle.annexure(tdpur406.rcno, tfisg002.grno, tfisg002.grbp, tfisg002.grdt)
										|#ISGECDV001166.en
				selectempty
					tfisg003.grno = ""
					tfisg003.grdt = 0
					tfisg003.bpid = ""
					rep.tran.name = ""
				endselect	
			endselect	
		endselect
	endselect
		
}	

function read.main.table.pmt.rqst()					|#ISGEC01099.sn
{
	old.pymt = 0.00
	pymt.seqn = 0
	amount_assigned = 0.00
	amount_unassigned = 0.00
	i.amth = 0.00
	tax.amount = 0.00
	gross.amount = 0.00
	i.aamt = 0.00
	
	select	tdpur406.orno
	from	tdpur406
	where	tdpur406._index2 = {:rcno.f}
	selectdo
		select	tfmsl020.pymt,tfmsl020.adrq,tfmsl020.optn,
			tfmsl020.stat,tfmsl020.aamt,tfmsl020.assv,
			tfmsl020.sgst,tfmsl020.igst,tfmsl020.cgst,
			tfmsl020.btno,tfmsl020.ttyp,tfmsl020.docn
		from	tfmsl020	
		where	tfmsl020._index2 = {:tdpur406.orno}
		order by tfmsl020.pymt
		selectdo
			i.aamt = 0						|#ISGEC001222.n
				
| 			Get_Advance_Unallocated(tfmsl020.ttyp,tfmsl020.docn)	|#ISGEC001222.o
| 			get.data.from.tfmsl020(tdpur406.orno)			|#ISGEC001222.n
			get.data.from.tfmsl020.new(tfmsl020.adrq,whinh312.orno)					|Priya.n
			if tfmsl020.optn = tfoption.advance then
				
				amount_assigned   =  adas.w 
				amount_unassigned = adua.w 
			else 
				if tfmsl020.optn = tfoption.exchange then
					amount_assigned   = uaas.w 
					amount_unassigned = uaua.w
					
				endif		
			endif	
			
			
			select 	tfcmg101.*
			from	tfcmg101
			where 	tfcmg101.btno = {:tfmsl020.btno}
			and 	tfcmg101.comp = :curr_comp
			as set with 1 rows
			selectdo
				i.amth = tfcmg101.amth(1)
			selectempty
				i.amth = 0.00
			endselect
			
			if tfmsl020.assv <> 0 then				|#ISGEC001222.sn
				i.aamt = tfmsl020.assv
			else	
				i.aamt = tfmsl020.aamt			
			endif	
										|#ISGEC001222.en
| 			select 	tfgld102.*
| 			from	tfgld102
| 			where 	tfgld102.btno = {:tfmsl020.btno}
| 			and	tfgld102.ttyp = :tfmsl020.ttyp
| 			and	tfgld102.docn = :tfmsl020.docn
| 			as set with 1 rows
| 			selectdo
| 				i.amth = tfgld102.amth(1)
| 			selectempty
| 				select 	tfgld106.*
| 				from	tfgld106
| 				where 	tfgld106.obat = {:tfmsl020.btno}
| 				and	tfgld106.otyp = :tfmsl020.ttyp
| 				and	tfgld106.odoc = :tfmsl020.docn
| 				as set with 1 rows
| 				selectdo
| 					i.amth = tfgld106.amth(1)
| 				selectempty	
| 				endselect	
| 			endselect
			
			
			
			tax.amount = tfmsl020.sgst + tfmsl020.igst + tfmsl020.cgst
| 			gross.amount = tfmsl020.assv + tax.amount				|#ISGEC001222.o		
			gross.amount = i.aamt + tax.amount					|#ISGEC001222.n
			i.stat = enum.descr$("tfmsl.lc.stat",tfmsl020.stat)
			if isspace (old.pymt) or old.pymt = tfmsl020.pymt then
				pymt.seqn = pymt.seqn + 1
				old.pymt = tfmsl020.pymt
			else
				pymt.seqn = 1
			endif
			brp.ready(rpt.no)
		endselect
	endselect
			
		
}									|#ISGEC01099.en


function get.tax.rate(domain tcccty i.ccty, 
		      domain tccvat i.cvat)
{
	domain	tcpvat	gst.pvat	|#ISGECGST002.n
	
	r.eces.per = 0 
	r.cess.per = 0
	r.gst.cess.per = 0
	r.vat.per = 0
	r.kk.cess.per = 0	|#ISGECFIN012.n
	r.cgst.per = 0	|#ISGECGST002.sn	
	r.sgst.per = 0	
	gst.pvat = 0	
	r.igst.per = 0	|#ISGECGST002.en
	select 	tctax941.*
	from 	tctax941
	where	tctax941._index1={:i.ccty,
				  :i.cvat}
	and	tctax941.type = {20}
	selectdo
		select 	tcmcs036.*
		from 	tcmcs036
		where	tcmcs036._index1={:tctax941.ccty,
					  :tctax941.cvat}
		selectdo
			if tcmcs036.indt.l = tctax.indt.l.bed or
				tcmcs036.indt.l = tctax.indt.l.service	 then |or tcmcs036.indt.l = tctax.indt.l.sb.cess
				select 	tcmcs032.*
				from 	tcmcs032
				where	tcmcs032._index1={:tcmcs036.ccty,
							  :tcmcs036.cvat}
				
				and	tcmcs032.edat <= :tdpur406.ddte	|#ISGEC015016.n				  
				order by tcmcs032._index1 desc
				as set with 1 rows
				selectdo
					r.eces.per = tcmcs032.pvat
				endselect
				|#ISGECDV001031.sn
				if	tcmcs036.indt.l = tctax.indt.l.service	then
					service.tax = true
				endif	
				|#ISGECDV001031.en
			endif
			
			if tcmcs036.indt.l = tctax.indt.l.kk.cess then	|#ISGECFIN012.sn
				select 	tcmcs032.*
				from 	tcmcs032
				where	tcmcs032._index1={:tcmcs036.ccty,
							  :tcmcs036.cvat}
				
				and	tcmcs032.edat <= :tdpur406.ddte			  
				order by tcmcs032._index1 desc
				as set with 1 rows
				selectdo
					r.kk.cess.per = tcmcs032.pvat
				endselect
			endif						|#ISGECFIN012.en
			
			if tcmcs036.indt.l = tctax.indt.l.e.cess.excise or
			   tcmcs036.indt.l = tctax.indt.l.hse.cess.excise or
			   tcmcs036.indt.l = tctax.indt.l.e.cess.service or		 
			   tcmcs036.indt.l = tctax.indt.l.hse.cess.servic 	then 
				select 	tcmcs032.*
				from 	tcmcs032
				where	tcmcs032._index1={:tcmcs036.ccty,
							  :tcmcs036.cvat}
							
				and	tcmcs032.edat <= :tdpur406.ddte	|#ISGEC015016.n
				order by tcmcs032._index1 desc
				as set with 1 rows
				selectdo
					r.cess.per = r.cess.per + tcmcs032.pvat
				endselect
			endif
			
									|#ISGECGST002.sn
			if tcmcs.dll0036.tax.code.is.of.type.gst(tcmcs036.ccty, tcmcs036.cvat) then 
				if not tcmcs.dll0032.get.tax.rate.l(	tcmcs036.ccty, 
									tcmcs036.cvat,
									gst.pvat) 	then
				else
					gst.pvat = 0.00
				endif
				
				on case tcmcs036.indt.l
				case tctax.indt.l.cgst:
					r.cgst.per = r.cgst.per + gst.pvat
					r.igst.per = 0.00
					break
					
				case tctax.indt.l.sgst:
				case tctax.indt.l.utgst:
					r.sgst.per = r.sgst.per + gst.pvat
					r.igst.per = 0.00
					break	
				
				case tctax.indt.l.igst:
					r.igst.per = r.igst.per + gst.pvat
					r.cgst.per = 0.00
					r.sgst.per = 0.00
					break	
									|#ISGECMOD020.sn
				case tctax.indt.l.gstcess:
					r.gst.cess.per = r.gst.cess.per + gst.pvat
					break
									|#ISGECMOD020.en
				endcase
					
			endif
									|#ISGECGST002.en
					
			if tcmcs036.indt.l = tctax.indt.l.vat  or
			tcmcs036.indt.l = tctax.indt.l.cst	or
			tcmcs036.indt.l = tctax.indt.l.lst	or
			tcmcs036.indt.l	= tctax.indt.l.n.a or tcmcs036.indt.l = tctax.indt.l.sb.cess then  
				select 	tcmcs032.*
				from 	tcmcs032
				where	tcmcs032._index1={:tcmcs036.ccty,
							  :tcmcs036.cvat}
				and	tcmcs032.edat <= :tdpur406.ddte		|#ISGEC015016.n			  
				order by tcmcs032._index1 desc
				as set with 1 rows
				selectdo
					r.vat.per = r.vat.per + tcmcs032.pvat
				endselect
			endif
		endselect
	endselect
	
}

function get.discount.amount()
{
	r.disc = 0
	
	if tdpur401.disc(1) <> 0 then 	| disc % 
		r.disc = tdpur401.pric * tdpur401.disc(1) / 100
	else
		if tdpur401.ldam(1) <> 0 then  | disc amnt	
			r.disc = tdpur401.ldam(1)
		endif
	endif
}

function Get_Project_addr(domain tccom.cadr r.cadr)
{
	init.addr.var()
	select	a_tccom130.nama:rep.prj.nama,
		a_tccom130.namd:rep.prj.namd,
		a_tccom130.dsca:rep.prj.dsca,
		a_tccom130.ln01:rep.prj.ln01,
		a_tccom130.ln03:rep.prj.ln03,
		a_tccom130.info:rep.prj.info
	from	tccom130 a_tccom130
	where	a_tccom130._index1 = {:r.cadr}
	selectdo
	endselect	
}

function init.addr.var()
{
	rep.prj.nama = ""
	rep.prj.namd = ""
	rep.prj.ln01 = ""
	rep.prj.ln03 = ""
	rep.prj.dsca = ""
	rep.prj.info = ""
}


function calculate_freight()
{
	domain tcamnt	additional.amount
	
	select 	tclct200.lcos, sum(tclct200.lcam):additional.amount
	from	tclct200
	where	tclct200._index1 = {21, 100, :tdpur406.rcno, :1}
	group by tclct200.lcos
	wherebind(1, str$(tdpur406.rseq))
	selectdo
		select	tclct115.dsca from tclct115
		where	tclct115._index1 = {:tclct200.lcos}
		selectdo
		endselect
		rep.ot.amnt = rep.ot.amnt + additional.amount
	endselect
}

function get.tax.from.tfacp935()
{
	domain	tcamnt	amount
	
	rep.exc.amnt = 0
	rep.sgst.amnt = 0	|#ISGECGST002.n
	rep.st.amnt = 0
	cess.amnt = 0		|#ISGECMOD020.n
	
	switch.to.company(fin_comp)		|ISG10103.n
	
	select	tfacp935.ccty, tfacp935.cvat, sum(tfacp935.vamt):amount
	from	tfacp935
	where	tfacp935.rcno = :tdpur406.rcno
	and	tfacp935.rseq = :tdpur406.rseq
	and	tfacp935.orno = :tdpur406.orno		|#ISGECDV001078.n
	and	tfacp935.pono = :tdpur406.pono		|#ISGECDV001078.n
	and	tfacp935.sqnb = :tdpur406.sqnb		|#ISGECDV001078.n
	group by tfacp935.ccty, tfacp935.cvat
	selectdo
		select	tcmcs036.indt.l,tcmcs036.dsca
		from	tcmcs036
		where	tcmcs036._index1 = {:tfacp935.ccty, :tfacp935.cvat}
		selectdo
			on case etol(tcmcs036.indt.l)
			case 1:				|Service
			case 4:				|Basic Excise Duty
			case 9:				|Basic Custom Duty	
			case 10:			|Countervailing Duty
			case 14:			|ECess CVD
			case 15:			|ECess on Custom
			case 16:			|Ecess on Service
			case 17:			|Ecess on Excise
			case 19:			|SHE Cess on CVD
			case 20:			|SHE Cess on Excise
			case 21:			|SHE Cess on Service
			case 22:			|SHE Cess on Custom
			case 28:			|Krishi Kalyan Cess	|#ISGECFIN012.n
			case 42:			|IGST					|#ISGECGST002.sn
				rep.exc.amnt = rep.exc.amnt + amount
				break
			case 40:			|SGST		
			case 43:			|UTGST		
				rep.sgst.amnt = rep.sgst.amnt + amount
				break								|#ISGECGST002.en
			case 2:				|Local Sales Tax	
			case 3:				|Central Sales Tax
			case 26:			|VAT
			case 27:			|Swatchh Bharat Cess
			case 41:			|CGST		|#ISGECGST002.n
				rep.st.amnt = rep.st.amnt + amount
				break
			case 44:			|GST CESS	|#ISGECMOD020.sn
				cess.amnt = cess.amnt + amount 			
				break					|#ISGECMOD020.en
			case 30:			|Not Applicable
				rep.st.amnt = rep.st.amnt + amount
			endcase
		endselect
	endselect
	switch.to.company(curr_comp)		|ISG10103.n
}

function domain tcdsca get.city.desc(
			domain	tcccty		i.cctf,
			domain	tcmcs.cste	i.plcf,
			domain	tccity		i.citf
					)
{
	domain	tcdsca	tmp.dsca
	
	select	c_tccom139.dsca:tmp.dsca
	from	tccom139 c_tccom139
	where	c_tccom139._index1 = {:i.cctf, :i.plcf, :i.citf}
	selectdo
	selectempty
		tmp.dsca = ""
	endselect

	return(tmp.dsca)
}					
					
						|#ISGECDV001166.sn
function read.main.vehicle.annexure
			(
			domain	tcorno		in.rcno,
			domain	tfacp.isup	in.grno,
			domain	tccom.bpid	in.grbp,
			domain	tfgld.date	in.grdt
			)
{
	domain	tfgld.date	frm.grdt
	domain	tfgld.date	to.grdt
	domain	tcbool		vehicle_exist
	r.var = 0
	
	select	tfisg003.vhno, tfisg003.grdt
	from	tfisg003
	where	tfisg003._index1 = {:in.grno, :in.grbp, :in.grdt}
	selectdo
		frm.grdt = 0
		to.grdt = 0
		vehicle_exist = false
		frm.grdt = tfisg003.grdt - 15
		to.grdt = tfisg003.grdt + 15
		select	tfisg003.vhno, tfisg003.grno, tfisg003.bpid, tfisg003.grdt,
			tfisg003.vhcp, tfisg003.otbp, tfisg003.bpnm
		from	tfisg003
		where	tfisg003.grdt inrange :frm.grdt	and	:to.grdt
		and	tfisg003.vhno = :tfisg003.vhno
		and	tfisg003._index1 <> {:in.grno}
		selectdo
			Initialize_Vehicle_Variable()
			rep.rcno = in.rcno
			rep.grno = tfisg003.grno
			if	tfisg003.otbp = tcyesno.yes	then
				rep.bpnm = tfisg003.bpnm
			else
				select	bp_tccom100.nama:rep.bpnm
				from	tccom100 bp_tccom100
				where	bp_tccom100._index1 = {:tfisg003.bpid}
				selectdo
				endselect
			endif
			rep.grdt = tfisg003.grdt
			rep.vhno = tfisg003.vhno
			select	vh_fmfmd047.dsca:rep.vhtp
			from	fmfmd047 vh_fmfmd047
			where	vh_fmfmd047._index1 = {:tfisg003.vhcp}
			selectdo
			endselect
			select	sr_tdisg452.srdt:rep.srdt,
				sr_tdisg452.srct:rep.srct
			from	tdisg452 sr_tdisg452
			where	sr_tdisg452._index2 = {:tfisg003.grno, :tfisg003.bpid, :tfisg003.grdt}
			selectdo
			endselect
| 			brp.ready(rpt.vhno)					|ISGEC015024.o
			r.var = 1						|ISGEC015024.sn
			brp.ready(rpt.no)
			r.var = 0						|ISGEC015024.en	
		endselect
	endselect	
}

function Initialize_Vehicle_Variable()
{
	rep.rcno = ""
	rep.grno = ""
	rep.bpid = ""
	rep.grdt = 0
	rep.vhno = ""
	rep.vhtp = ""
	rep.srct = ""
	rep.srdt = 0
	rep.bpnm = ""
}
										|#ISGECDV001166.en
function get.address(domain tccom.cadr in.address)			|PATCH002016.sn
{
	select tccom130vend.nama:vend.nama,
		tccom130vend.namb:vend.namb,
		tccom130vend.namc:vend.namc,
		tccom130vend.telp:vend.telp,
		tccom130vend.tefx:vend.tefx,
		tccom130vend.namd:vend.namd,
		tccom130vend.namf:vend.namf,
		tccom130vend.pstc:vend.pstc,
		tccom130vend.dsca:vend.dsca,
		tccom130vend.ccty:vend.ccty,
		tccom130vend.ccit:vend.ccit,           
		tccom130vend.cste:vend.cste
	from    tccom130 tccom130vend
	where   tccom130vend._index1 = {:in.address}
	selectdo
| 		if isspace(vend.namf) then			|#ISGEC015086.so		
| 			vend.namf = vend.dsca
| 		endif
| 		if isspace(vend.namf) then			|#ISGEC015086.en
| 			select tccom139.dsca from tccom139	|#ISGEC015086.o
			select	tccom139.dsca,			|#ISGEC015086.sn
				tccom139.city	
			from	tccom139			|#ISGEC015086.en
			where tccom139._index1 = {:vend.ccty,:vend.cste,:vend.ccit}
			as set with 1 rows
			selectdo
| 				vend.namf = tccom139.dsca	|#OSGEC015086.o
			selectempty				|#ISGEC015086.n
				tccom139.city	=	""	|#ISGEC015086.n
			endselect
| 		endif						|#ISGEC015086.o

	endselect	
									|PATCH002016.en
								|#ISGEC015086.sn
	if	trim$(tccom139.city)	=	"DEF"	then
		rep.city2	=	vend.pstc
		vend.pstc	=	""
	else
		rep.city2	=	trim$(vend.ccit)&" - "&vend.pstc
		vend.pstc	=	""
	endif
						|#ISGEC015086.en									

}		
										|#ISGEC015036.sn
function get.billing.advics.lines(
				   domain	whinh.shpm	i.rcno,
				   domain	tcpono		i.rcln
				  )
{
	select	tdisg832.tobi,tdisg832.bivl,tdisg832.reas
	from	tdisg832
	where	tdisg832._index4 = {:i.rcno,:i.rcln}
	selectdo
		if tdisg832.tobi = tcyesno.yes then
			rep.bivl = "Rs." & str$(tdisg832.bivl)
		else
			rep.bivl = tdisg832.reas
		endif	
	selectempty
		tdisg832.tobi = empty
		tdisg832.bivl = 0.00
		tdisg832.reas = ""
		rep.bivl = ""
	endselect
	
}
										|#ISGEC015036.en
										
function get.tax.from.whinh936()
{
	domain	tcamnt	amount
	
	rep.exc.amnt = 0
	rep.st.amnt = 0
	rep.sgst.amnt = 0.00	|#ISGECGST002.n
	cess.amnt = 0.00	|#ISGECMOD020.n
	
	switch.to.company(fin_comp)		|#ISG10103.n
	select   sum(whinh936.aamt):amount, whinh936.rcno, whinh936.taxc, whinh936.pvat
	from	 whinh936
	where	 whinh936._index1 = {:tdpur406.rcno,:tdpur406.rseq}
	group by whinh936.rcno,whinh936.taxc,whinh936.pvat
	selectdo
		fwhinh936.found = true		|#ISGECDV001020.n
		select	tcmcs036.indt.l,tcmcs036.dsca
		from	tcmcs036
		where	tcmcs036._index1 = {"IN", :whinh936.taxc}
		selectdo
			on case etol(tcmcs036.indt.l)
			case 1:				|Service
			case 4:				|Basic Excise Duty
			case 9:				|Basic Custom Duty	
			case 10:			|Countervailing Duty
			case 14:			|ECess CVD
			case 15:			|ECess on Custom
			case 16:			|Ecess on Service
			case 17:			|Ecess on Excise
			case 19:			|SHE Cess on CVD
			case 20:			|SHE Cess on Excise
			case 21:			|SHE Cess on Service
			case 22:			|SHE Cess on Custom
			case 42:			|IGST		|#ISGECGST002.sn
				rep.exc.amnt = rep.exc.amnt + amount
				break
			case 40:			|SGST	
			case 43:			|UTGST	
				rep.sgst.amnt = rep.sgst.amnt + amount	|#ISGECGST002.en
				break	
			case 44:			|GST CESS	|#ISGECMOD020.sn		
				cess.amnt = cess.amnt + amount		
				break	
									|#ISGECMOD020.en
			case 2:				|Local Sales Tax	
			case 3:				|Central Sales Tax
			case 26:			|VAT
			case 30:			|Not Applicable
			case 41:			|CGST	
				rep.st.amnt = rep.st.amnt + amount
			endcase
		endselect
	endselect
	switch.to.company(curr_comp)		
}


function Get_Advance_Unallocated(						|#ISGEC01099.sn
			domain tfgld.ttyp	i.ttyp,
			domain	tfgld.docn	i.docn)
{
	domain	tccprj	mn.cprj
	domain	tccprj	mn.orno
	
	set.fmin(mn.cprj)
	set.fmin(mn.orno)
	
	adas.w = 0.00
	adua.w = 0.00
	uaas.w = 0.00
	uaua.w = 0.00
	
	select	tfacp200.ttyp, tfacp200.ninv, tfacp200.amth, tfacp200.balh, tfacp200.ifbp,
		tfacp200.isup, tfacp200.tpay, tfacp200.tdoc, tfacp200.docn, tfacp200.lino,
		tfacp200.amnt, tfacp200.bahc
	from	tfacp200
	where	tfacp200._index1 = {:i.ttyp,:i.docn}
| 	|and	tfacp200.cdf_cprj <> :mn.cprj
| 	|and	tfacp200.cdf_prno <> :mn.orno
	and	tfacp200.docn = 0
	and	tfacp200.lino = 0
	selectdo
		on case tfacp200.tpay
			case tfacp.tpay.advance:	|ltoe(9)		
			case tfacp.tpay.advance.ant:	|ltoe(11)
				adas.w = adas.w + abs(tfacp200.amth(1)) - (abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1)))				|Advance Assign
				adua.w = adua.w + abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1))	|Advance Unassign
				break
			case tfacp.tpay.unallocated:	|ltoe(10)		
			case tfacp.tpay.unallocated.ant:	|ltoe(12)
				uaas.w = uaas.w + abs(tfacp200.amth(1)) - (abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1)))				|Unallocated Assign
				uaua.w = uaua.w + abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1))	|Unallocated Unassign	
				break
		ENDCASE		
	selectempty
	endselect
}												|#ISGEC01099.en								


function Total_Payment_against_PO()								|#ISGEC01099.sn							
{
	tot.value = 0
	uaas.w = 0
	adas.w = 0
	adua.w = 0
	adua.w = 0
	uaua.w = 0
	add.value = 0
	deduct.value = 0
	total = 0
	total.payment = 0
	total.advance = 0
	Balance_advance = 0
| 	select whinh312.orno					|#ISGEC001222.so
| 	from	whinh312
| 	where	whinh312._index1 = {:rcno.f}
| 	selectdo						|#ISGEC001222.eo
	select	tdpur406.orno					|#ISGEC001222.sn
	from	tdpur406
	where	tdpur406._index2 = {:rcno.f}
	selectdo						|#ISGEC001222.en
| 		get.data.from.tfmsl020(whinh312.orno)		|#ISGEC001222.o
		get.data.from.tfmsl020(tdpur406.orno)		|#ISGEC001222.n
		
| 		total.advance = l.tfacp200.amth(1) + adas.w + adua.w
		total.advance = adas.w + adua.w
		
| 		Balance_advance = uaas.w + uaua.w
		Balance_advance = adua.w + uaua.w
		
		
		
		deduct.value = 0
		tot.value = 0
		select tfacp250.ityp,tfacp250.idoc
		from	tfacp250
		where 	tfacp250._index1 = {:fin_comp}	
| 		and	tfacp250.orno = :whinh312.orno		|#ISGEC001222.o
		and	tfacp250.orno = :tdpur406.orno		|#ISGEC001222.n
		group by tfacp250.ityp, tfacp250.idoc
		selectdo
			select	tfacp200.bahc,tfacp200.balc,tfacp200.amth
			from	tfacp200
			where	tfacp200._index1 = {:tfacp250.ityp,:tfacp250.idoc}
			and	tfacp200.line = 0
			and	tfacp200.docn = 0
			and	tfacp200.lino = 0
			selectdo
				deduct.value = tfacp200.amth(1) - (tfacp200.bahc(1) + tfacp200.balc)
				tot.value = tot.value + deduct.value
			selectempty
				add.value = 0
				deduct.value = 0
				tot.value = 0
				total = 0
| 				total.payment = 0
| 				total.advance = 0
			endselect
		selectempty
		endselect
| 		total.payment = tot.value + (uaas.w + uaua.w) - (adas.w + adua.w)		|#ISGEC001222.o
		total.payment = tot.value + (uaua.w) - (adas.w + adua.w)			|#ISEGC001222.n
		
	endselect		
}												|#ISGEC01099.en	


function get.data.from.tfmsl020(
		domain	tcorno	i.orno)								|#ISGEC01099.sn
										
{

	domain	tfgld.ttyp	get.ttyp
	domain	tfgld.docn	get.docn
	domain	tcorno		v.prno
	domain	tccprj		m.cprj
	domain	tcorno		m.orno
	
	domain	tfgld.ttyp	in.ttyp
	domain	tfgld.docn	in.ninv
	domain	tfgld.lino	in.line
	
	domain	tcncmp		o.target.financial.company,i.comp				|#ISGEC01026.sn
	domain	tfgld.ttyp	o.related.transaction.type
	domain	tfgld.docn	o.related.document
	domain	tcmcs.s200m	o.error.message							|#ISGEC01026.en
	
	adas.w = 0
	adua.w = 0
	adua.w = 0
	uaua.w = 0
	uaas.w = 0
	
	select	tfacp200.ttyp, tfacp200.ninv,tfacp200.line, tfacp200.amth, tfacp200.balh, tfacp200.ifbp,
		tfacp200.isup, tfacp200.tpay, tfacp200.tdoc, tfacp200.docn, tfacp200.lino,
		tfacp200.cdf_prno:v.prno,tfacp200.amnt, tfacp200.bahc,tfacp200.whti,		|#ISGEC001153.sn
		tfacp200.pcom,
		tfacp200.payt,
		tfacp200.payd,
		tfacp200.payl									|#ISGEC001153.en
	from	tfacp200
	where	tfacp200.cdf_prno = :i.orno
| 	and	tfacp200.line = 0
| 	and	tfacp200.docn = 0
| 	and	tfacp200.lino = 0
	and	tfacp200._compnr = :curr_comp		|#ISGEC001153.n
	selectdo
		l.tfacp200.amth(1) = tfacp200.amth(1)
		if curr_comp <> tfacp200.pcom and tfacp200.payd <> 0 then
			in.ttyp = tfacp200.payt
			in.ninv = tfacp200.payd
			in.line = tfacp200.payl
		else
			in.ttyp = tfacp200.ttyp
			in.ninv = tfacp200.ninv
			in.line = tfacp200.line
		endif
									|#ISGEC001153.en
		on case tfacp200.tpay
			case tfacp.tpay.advance:	|ltoe(9)
			case tfacp.tpay.advance.ant:	|ltoe(11)
				if  tfisg.dll1402.intercompany.document.present(				|#ISGEC01026.sn
									curr_comp,
									in.ttyp,
									in.ninv,
									o.target.financial.company,
									o.related.transaction.type,
									o.related.document,
									o.error.message) then
					in.ttyp =  o.related.transaction.type
					in.ninv	=  o.related.document
					i.comp  =  o.target.financial.company
				else
					i.comp = curr_comp
				endif										|#ISGEC01026.en
				select 	tfcmg112.cdoc,
					tfcmg112.stat			|#ISGEC01026.n
				from	tfcmg112		|#ISGEC001153.so
				where	tfcmg112.tdoc = :in.ttyp
				and	tfcmg112.pdoc = :in.ninv
| 					and	tfcmg112.scom = :in.line						|#ISGEC01026.o
				and	tfcmg112._compnr = :i.comp						|#ISGEC01026.n
									|#ISGEC001153.en
				as set with 1 rows
				selectdo
| 						if tfcmg112.cdoc = 0 then						|#ISGEC01026.o
					if tfcmg112.cdoc = 0 and tfcmg112.stat <> tfcmg.stap.rejected then  	|#ISGEC01026.n	
							
						select tfmsl020.adrq
						from	tfmsl020
						where	tfmsl020._index4 = {:tfacp200.ttyp,:tfacp200.ninv,:tfacp200.line}
						and	(tfmsl020.optn = tfoption.account or tfmsl020.optn = tfoption.exchange)
						and	tfmsl020.fcom = :curr_comp	|#ISGEC01045.n
						selectdo
							if tfacp200.tpay = tfacp.tpay.advance.ant then          |#ISGEC01030.sn
								if tfacp200.balh(1) <> 0 or tfacp200.bahc(1) <> 0 then
									adv.un.assign = adv.un.assign + abs(tfacp200.amth(1))
									un.adv.balance = un.adv.balance +  abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1))
								endif
							else                                                     |#ISGEC01030.en																
								adv.un.assign = adv.un.assign + abs(tfacp200.amth(1))
								un.adv.balance = un.adv.balance +  abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1))
							endif
						selectempty
							if tfacp200.tpay = tfacp.tpay.advance.ant then                   |#ISGEC01030.sn
								if tfacp200.balh(1) <> 0 or tfacp200.bahc(1) <> 0 then
									adua.w = adua.w + abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1))	|Advance Unassign
									adas.w = adas.w + abs(tfacp200.amth(1)) -(abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1)))
								endif
							else								|#ISGEC01030.en
								adua.w = adua.w + abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1))	|Advance Unassign
								adas.w = adas.w + abs(tfacp200.amth(1)) - (abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1)))
							endif	                                                        |#ISGEC01030.n					
						endselect
						if tfacp200.whti = tcyesno.yes   then
							select 	tfacp203.amti
							from	tfacp203
							where	tfacp203._index1 = {:tfacp200.ttyp,:tfacp200.ninv,:tfacp200.line}
							and	tfacp203.txtp = tctax.txtp.income.tax		|#ISGEC001061.n
							and	tfacp203._compnr = :curr_comp		|#ISGEC001153.n
							selectdo
								l.tfacp200.amth(1) = tfacp203.amti * (-1)
								select tfmsl020.adrq
								from	tfmsl020
								where	tfmsl020._index4 = {:tfacp200.ttyp,:tfacp200.ninv,:tfacp200.line}	|#ISGEC001153.o
								and	(tfmsl020.optn = tfoption.account or tfmsl020.optn = tfoption.exchange)
								selectdo
									adv.un.assign = adv.un.assign + abs(tfacp203.amti)
									if tfacp200.balh(1) <> 0 or tfacp200.bahc(1) <> 0 then
										un.adv.balance = un.adv.balance +  abs(tfacp203.amti)
									endif
								selectempty
									
| 											adua.w = adua.w + tfacp203.amti				|#ISGEC01026.o
| 											adas.w = adas.w + tfacp203.amti				|#ISGEC01026.o
									if tfacp200.balh(1) <> 0 or tfacp200.bahc(1) <> 0 then        	|#ISGEC01026.sn   
										adua.w = adua.w + tfacp203.amti
										adas.w = adas.w + tfacp203.amti
									endif									|#ISGEC01026.en
								endselect
							selectempty
							endselect
						endif
					endif
						
				selectempty	
					select tfmsl020.adrq
					from	tfmsl020
					where	tfmsl020._index4 = {:tfacp200.ttyp,:tfacp200.ninv,:tfacp200.line}	|#ISGEC001153.o
| 					where	tfmsl020._index4 = {:in.ttyp,:in.ninv,:in.line}			|#ISGEC001153.n
					and	(tfmsl020.optn = tfoption.account or tfmsl020.optn = tfoption.exchange)
					and	tfmsl020.fcom = :curr_comp		|#ISGEC01045.n
					selectdo
						if tfacp200.tpay = tfacp.tpay.advance.ant then                   |#ISGEC01030.sn
							if tfacp200.balh(1) <> 0 or tfacp200.bahc(1) <> 0 then
								adv.un.assign = adv.un.assign + abs(tfacp200.amth(1))
								un.adv.balance = un.adv.balance +  abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1))
							endif
						else								  |#ISGEC01030.en								
							adv.un.assign = adv.un.assign + abs(tfacp200.amth(1))
							un.adv.balance = un.adv.balance +  abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1))
						endif                                                             |#ISGEC01030.n
					selectempty
						if tfacp200.tpay = tfacp.tpay.advance.ant then                   |#ISGEC01030.sn
							if tfacp200.balh(1) <> 0 or tfacp200.bahc(1) <> 0 then
								adua.w = adua.w + abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1))	|Advance Unassign
								adas.w = adas.w + abs(tfacp200.amth(1)) - (abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1)))	
							endif
						else								|#ISGEC01030.en
							adua.w = adua.w + abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1))	|Advance Unassign
							adas.w = adas.w + abs(tfacp200.amth(1)) - (abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1)))
						endif								|#ISGEC01030.n
					endselect
						
					if tfacp200.whti = tcyesno.yes  then
						select 	tfacp203.amti
						from	tfacp203
						where	tfacp203._index1 = {:tfacp200.ttyp,:tfacp200.ninv,:tfacp200.line}
						and	tfacp203.txtp = tctax.txtp.income.tax		|#ISGEC001061.n
						and	tfacp203._compnr = :curr_comp		|#ISGEC001153.n
						selectdo
							select tfmsl020.adrq
							from	tfmsl020
							where	tfmsl020._index4 = {:tfacp200.ttyp,:tfacp200.ninv,:tfacp200.line}	
							and	(tfmsl020.optn = tfoption.account or tfmsl020.optn = tfoption.exchange)
							selectdo
								adv.un.assign = adv.un.assign + abs(tfacp203.amti)
								if tfacp200.balh(1) <> 0 or tfacp200.bahc(1) <> 0then
									un.adv.balance = un.adv.balance +  abs(tfacp203.amti)
								endif
							selectempty	
							endselect
							if tfacp200.balh(1) <> 0 or tfacp200.bahc(1) <> 0 then	|#ISGEC01026.sn
								adua.w = adua.w + tfacp203.amti
								adas.w = adas.w + tfacp203.amti
							endif								|#ISGEC01026.en
						selectempty
						endselect
					endif
				endselect
					
				break
				case tfacp.tpay.unallocated:	|ltoe(10)
				case tfacp.tpay.unallocated.ant:	|ltoe(12)
					
					if  tfisg.dll1402.intercompany.document.present(				|#ISGEC01026.sn
										curr_comp,
										in.ttyp,
										in.ninv,
										o.target.financial.company,
										o.related.transaction.type,
										o.related.document,
										o.error.message) then
										
						in.ttyp =  o.related.transaction.type
						in.ninv	=  o.related.document
						i.comp  =  o.target.financial.company
					else
						i.comp = curr_comp
					endif										|#ISGEC01026.en
					
					select 	tfcmg112.cdoc,
						tfcmg112.stat								|#ISGEC01026.n
					from	tfcmg112
					where	tfcmg112.tdoc = :in.ttyp
					and	tfcmg112.pdoc = :in.ninv
| 					and	tfcmg112.scom = :in.line						|#ISGEC01026.o
					and     tfcmg112._compnr = :i.comp						|#ISGEC01026.n
									|#ISGEC001153.en				
					as set with 1 rows
					selectdo
| 						if tfcmg112.cdoc = 0 then						|#ISGEC01026.o
						if tfcmg112.cdoc = 0 and  tfcmg112.stat <> tfcmg.stap.rejected then	|#ISGEC01026.n
							if tfacp200.tpay = tfacp.tpay.unallocated.ant then             |#ISGEC01030.sn
								if tfacp200.balh(1) <> 0 or tfacp200.bahc(1) <> 0 then
									uaua.w = uaua.w + abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1))	|Unallocated Unassign	
									uaas.w = uaas.w + abs(tfacp200.amth(1)) - (abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1)))
								endif
							else								|#ISGEC01030.en
								uaua.w = uaua.w + abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1))	|Unallocated Unassign	
								uaas.w = uaas.w + abs(tfacp200.amth(1)) - (abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1)))	|Unallocated Assign	|#ISGEC001025.o
							endif                                                           |#ISGEC01030.n
						endif
					selectempty
						if tfacp200.tpay = tfacp.tpay.unallocated.ant then             |#ISGEC01030.sn
							if tfacp200.balh(1) <> 0 or tfacp200.bahc(1) <> 0 then
								uaua.w = uaua.w + abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1))	|Unallocated Unassign	
								uaas.w = uaas.w + abs(tfacp200.amth(1)) - ( abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1)))
							endif
						else								|#ISGEC01030.en
							uaua.w = uaua.w + abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1))	|Unallocated Unassign	
							uaas.w = uaas.w + abs(tfacp200.amth(1)) - (abs(tfacp200.balh(1)) + abs(tfacp200.bahc(1)))	|Unallocated Assign	|#ISGEC001025.o
						endif                 						|#ISGEC01030.n                                         
					endselect	
					
					break
			ENDCASE		
				
		selectempty
		endselect
}											|#ISGEC01099.en

function balance.payable()								|#ISGEC01099.sn
{
	bal.payable = 0.00
	select	tdpur456.orno,tdpur456.damt
	from	tdpur456
| 	where	tdpur456._index1 = {:whinh312.orno}					|#ISGEC001222.o
	where	tdpur456._index1 = {:tdpur406.orno}					|#ISGEC001222.n
	and 	tdpur456.fire = 1
	and	tdpur456.rcno <> :rcno.f
	selectdo
		a.damt = a.damt + tdpur456.damt
	endselect
	
	select	tdpur400.oamt:b.oamt
	from	tdpur400
| 	where	tdpur400._index1 = {:whinh312.orno}					|#ISGEC001222.o
	where	tdpur400._index1 = {:tdpur406.orno}					|#ISGEC001222.n
	selectdo
	selectempty
		b.oamt = 0	
	endselect
	
	bas.val = b.oamt								|#ISGEC001222.n
	
| 	get.data.credit.note(whinh312.orno,curr_comp)					|#ISGEC001222.o
	get.data.credit.note(tdpur406.orno,curr_comp)					|#ISGEC001222.n
	
	bal.payable = b.oamt - a.damt - dnas.w
}											|#ISGEC01099.en

function get.data.credit.note(								|#ISGEC01099.sn	
| 											|#ISGEC01026.o
			domain	tcorno		i.orno,					|#ISGCE01026.n
			domain  tcncmp		o.ncmp					|#ISGCE01026.n
				)
{

	isup.w = ""
	inam.w = 0
	purc.invo = ""
	dnas.w = 0
	select	tfacp200.amnt, tfacp200.balh, tfacp200.isup, tfacp200.amth,tfacp200.bala,	|#ISGEC015003.n
		tfacp200.docn, tfacp200.tpay, tfacp200.cdf_prno, tfacp200.cdf_cprj		|#ISGEC01026.n
	from	tfacp200
| 	where	tfacp200.cdf_cprj inrange :proj.f	and	:proj.t
	where	tfacp200.cdf_prno = :i.orno
	and	tfacp200.tpay = tfacp.tpay.credit
	and	tfacp200.docn = 0
	and     tfacp200._compnr = :o.ncmp              					|#ISGEC01026.n
	selectdo
		dnas.w = dnas.w + abs(tfacp200.amnt)
	endselect	
}												|#ISGEC01099.en

function boolean insert.into.history.table()				|#ISGEC01099.sn
{
	select	tdisg209.*
	from	tdisg209
	where	tdisg209._index1 = {:rcno.f}
	selectdo
		history.table.insert = 1
		return(true)
	selectempty
		history.table.insert = 0
	endselect
	
	return(false)
}									|#ISGEC01099.en	

									|#ISEGC001222.sn									
function boolean rcno.is.confirmed(domain	whinh.shpm	i.rcno)	
{
	select	awhinh310.stat
	from	whinh310 awhinh310
	where	awhinh310._index1 = {:i.rcno}
	and	awhinh310.stat =  whinh.rhst.confirmed
	selectdo
	selectempty
		return(false)
	endselect

	return(true)
}
									
function delete.history.data(domain	whinh.shpm	in.rcno)
{
	select	tdisg209.*
	from	tdisg209 for update
	where	tdisg209._index1 = {:in.rcno}
	selectdo
		db.delete(ttdisg209,db.retry,e)
	endselect	
	
	if not e then
		commit.transaction()
	else
		abort.transaction()
	endif	
}
									|#ISEGC001222.en
									
|Priya.sn
function get.data.from.tfmsl020.new(domain tcorno i.adrq,
				domain tcorno i.orno)
{
	domain	tcncmp	curr.comp
	domain	tcamnt	assigned.advance,unassigned.advance,Advance.amnt,
			assigned.unallocated,unassigned.unallocated,
			i.unallocated
		
	
	curr.comp = get.compnr()
	
	assigned.advance = 0.00
	unassigned.advance = 0.00
	Advance.amnt = 0.00
        assigned.unallocated = 0.00
	unassigned.unallocated = 0.00
	i.unallocated = 0.00
	
	|**************** Logic For Advance Amount *******************|
	select	tfmsl020.*
	from	tfmsl020
	where	tfmsl020._index1 = {:i.adrq}
	and	tfmsl020.orno = :i.orno
	and	tfmsl020.optn in (3,5)
	selectdo
		if (isspace(tfmsl020.ttyp)) and (tfmsl020.docn = 0) then	
			Advance.amnt = Advance.amnt + tfmsl020.aamt
		else							
			select	tfacp200.*
			from	tfacp200
			where	tfacp200._index1 = {:tfmsl020.ttyp,:tfmsl020.docn,:tfmsl020.lino}
			and	tfacp200._compnr = :tfmsl020.fcom
			and	tfacp200.tpay in (9,11)	
			selectdo
				unassigned.advance = unassigned.advance + 
							abs(tfacp200.balh(1)) + 
							abs(tfacp200.bahc(1))
				assigned.advance = assigned.advance + 
							abs(tfacp200.amth(1) - 
							tfacp200.balh(1) - 
							tfacp200.bala)
				if tfacp200.whti = tcyesno.yes   then
					select 	tfacp203.amti
					from	tfacp203
					where	tfacp203._index1 = {:tfacp200.ttyp,
								:tfacp200.ninv,
								:tfacp200.line}
					and	tfacp203.txtp = tctax.txtp.income.tax
					selectdo  
						unassigned.advance = unassigned.advance +
									tfacp203.amti
						assigned.advance = assigned.advance + 
									tfacp203.amti
					endselect	
				endif			
			endselect
		endif	
	endselect	
	Advance.amnt = Advance.amnt + assigned.advance + unassigned.advance
	unassigned.advance = Advance.amnt - assigned.advance
	
	|**************** Logic For Unallocated Amount *******************|	
	select	tfmsl020.*	
	from	tfmsl020
	where	tfmsl020._index1 = {:i.adrq}
	and	tfmsl020.orno = :i.orno
	and	tfmsl020.optn in (1,2,4)		
	selectdo
		if (isspace(tfmsl020.ttyp)) and (tfmsl020.docn = 0) then	
			i.unallocated = i.unallocated + tfmsl020.aamt
		else
			select	tfacp200.*
			from	tfacp200
			where	tfacp200._index1 = {:tfmsl020.ttyp,:tfmsl020.docn,:tfmsl020.lino}
			and	tfacp200._compnr = :tfmsl020.fcom		
			and	tfacp200.tpay in (10,12)
			selectdo
				assigned.unallocated = assigned.unallocated +
						abs(tfacp200.amth(1)
						- tfacp200.balh(1)
						- tfacp200.bala) 
				unassigned.unallocated = unassigned.unallocated + 
							abs(tfacp200.balh(1)) +
							abs(tfacp200.bahc(1))
				
				if tfacp200.whti = tcyesno.yes   then
					select 	tfacp203.amti
					from	tfacp203
					where	tfacp203._index1 = {:tfacp200.ttyp,
								:tfacp200.ninv,
								:tfacp200.line}
					and	tfacp203.txtp = tctax.txtp.income.tax	
					selectdo
						if tfacp200.balh(1) <> 0 or tfacp200.bahc(1) <> 0 then         
							assigned.unallocated = assigned.unallocated + 
										tfacp203.amti
							unassigned.unallocated = unassigned.unallocated + 
										tfacp203.amti
						endif
					endselect	
				endif			
			endselect
		endif		
	endselect	
	i.unallocated = i.unallocated + assigned.unallocated + unassigned.unallocated
	unassigned.unallocated = i.unallocated - assigned.unallocated
		
	adas.w = assigned.advance
	adua.w = unassigned.advance
	uaas.w = assigned.unallocated
	uaua.w = unassigned.unallocated
}	


|Priya.en
									
									
									


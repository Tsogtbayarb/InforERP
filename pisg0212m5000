|******************************************************************************
|* tpisg0212m500  0  VRC B61U a7 isg 
|* Update Exhaused
|* Installation user             
|* 2014-08-29
|******************************************************************************
|* Main table tpisg012 Sanction Control Lines, Form Type 4
|******************************************************************************
                                                                                
|****************************** declaration section ***************************
declaration:

  table   ttpisg012 | Sanction Control Lines
  table		ttpmsl000
  table		ttpisg008
  table		ttpisg011
  

string 	line(1048)
long ret2
long stat.fp
string err.file(100)
string file.name(100)

extern 	domain	tccprj		cprj.f,cprj.t
extern 	domain	tcorno		vers

#pragma used dll ottdllbw

|*******************  CHOICE SECTION ******************************************
field.cprj.f:
when.field.changes:
	cprj.t = cprj.f
choice.cont.generate:
on.choice:
	generate.file()

choice.cont.copy:
on.choice:
	read.main.table.1()
	
choice.cont.history:
on.choice:
	generate.file.2()
|******************* Functions ************************************************

functions:

function extern generate.file()
{
	
	

	err.file = bse.tmp.dir$() & str$(utc.num()) & ".xls"
	
| 	file.name = "c:\temp\" & str$(utc.num())  & ".xls"
	
	stat.fp = seq.open(err.file, "w+")
	if stat.fp >0 then
 		seq.seek(0, 0, stat.fp)
	endif

	generate.header()
	
	read.main.table()
	
	seq.close(stat.fp)
	ret2 = server2client(err.file,"",1)
| 	ret2 = app_start(file.name,"c:","","","")
}


function generate.header()
{
	line = concat$("|",
			sprintf$("Project"),
			sprintf$("Version"),
			sprintf$("Element"),
			sprintf$("Level"),
			sprintf$("Total Budget"),
			sprintf$("Available"),
			sprintf$("Exhausted"),
			sprintf$("Soft Allocation"),
			sprintf$("Transferred From Element"),
			sprintf$("Reason Code"),
			sprintf$("Revised/Trf Amount"),
			sprintf$("Difference"),
			sprintf$("Budget Transferred"),
			sprintf$("Reason"),
			sprintf$("Distributed Amount"),
			sprintf$("Undstributed Amount"),
			sprintf$("Parent Element"))
	line = strip$(shiftl$(line))

	seq.puts(line,stat.fp)
}

function read.main.table.1()
{
	domain	tcorno		i.vers
	i.vers = "1.0"
	
	select tpisg011.vers
	from	tpisg011 for update
	where	tpisg011._index1 inrange {:cprj.f} and {:cprj.t}
	selectdo
		tpisg011.vers = vers
		tpisg011.acti = tpisg.sanction.launch
		tpisg011.act1 = tpisg.sanction.free
		db.update(ttpisg011,db.retry,e)
	endselect
	
	
	select tpisg012.*
	from	tpisg012 for update
	where	tpisg012._index1 inrange {:cprj.f} and {:cprj.t}
	selectdo
		db.delete(ttpisg012,db.retry,e)
	endselect
	
	commit.transaction()
	
	
	select 	tpisg008.*
	from	tpisg008
	where	tpisg008._index1 inrange {:cprj.f} and {:cprj.t}
	and	tpisg008.vers = :vers
	selectdo
		
		tpisg012.cprj = tpisg008.cprj
		tpisg012.vers = tpisg008.vers
		tpisg012.elem = tpisg008.elem
		tpisg012.levl = tpisg008.levl
		tpisg012.totl = tpisg008.totl
		tpisg012.avai = tpisg008.avai
		tpisg012.exha = tpisg008.exha
		tpisg012.smnt = tpisg008.smnt
		tpisg012.tran = tpisg008.tran
		tpisg012.reas = tpisg008.reas
		tpisg012.trfm = tpisg008.trfm
		tpisg012.diff = tpisg008.diff
		tpisg012.tfrd = tpisg008.tfrd
		tpisg012.head = tpisg008.head
		tpisg012.aamt = tpisg008.aamt
		tpisg012.amnt = tpisg008.amnt
		tpisg012.cspa = tpisg008.cspa
		db.insert(ttpisg012,db.skip.dupl,e)
	endselect
	
	commit.transaction()
}

function read.main.table()
{
	select 	tpisg012.*
	from	tpisg012
	where	tpisg012._index1 inrange {:cprj.f} and {:cprj.t}
	selectdo
		line = ""
		line = concat$("|",
				sprintf$("%s",tpisg012.cprj),
				sprintf$("%s",tpisg012.vers),
				sprintf$("%s",tpisg012.elem),
				sprintf$("%d",tpisg012.levl),
				sprintf$("%f",tpisg012.totl),
				sprintf$("%f",tpisg012.avai),
				sprintf$("%f",tpisg012.exha),
				sprintf$("%f",tpisg012.smnt),
				sprintf$("%s",tpisg012.tran),
				sprintf$("%s",tpisg012.reas),
				sprintf$("%f",tpisg012.trfm),
				sprintf$("%f",tpisg012.diff),
				sprintf$("%d",tpisg012.tfrd),
				sprintf$("%s",tpisg012.head),
				sprintf$("%f",tpisg012.aamt),
				sprintf$("%f",tpisg012.amnt),
				sprintf$("%s",tpisg012.cspa))
		line = strip$(shiftl$(line))
		seq.puts(line,stat.fp)
	endselect
	
}

function extern generate.file.2()
{
	
	

	err.file = bse.tmp.dir$() & str$(utc.num()) & ".xls"
	
| 	file.name = "c:\temp\" & str$(utc.num())  & ".xls"
	
	stat.fp = seq.open(err.file, "w+")
	if stat.fp >0 then
 		seq.seek(0, 0, stat.fp)
	endif

	generate.header()
	
	read.main.table.2()
	
	seq.close(stat.fp)
	ret2 = server2client(err.file,"",1)
| 	ret2 = app_start(file.name,"c:","","","")
}

function read.main.table.2()
{
	select 	tpisg008.*
	from	tpisg008
	where	tpisg008._index1 inrange {:cprj.f} and {:cprj.t}|,:vers} and {:cprj.t,:vers}
	selectdo
		line = ""
		line = concat$("|",
				sprintf$("%s",tpisg008.cprj),
				sprintf$("%s",tpisg008.vers),
				sprintf$("%s",tpisg008.elem),
				sprintf$("%d",tpisg008.levl),
				sprintf$("%f",tpisg008.totl),
				sprintf$("%f",tpisg008.avai),
				sprintf$("%f",tpisg008.exha),
				sprintf$("%f",tpisg008.smnt),
				sprintf$("%s",tpisg008.tran),
				sprintf$("%s",tpisg008.reas),
				sprintf$("%f",tpisg008.trfm),
				sprintf$("%f",tpisg008.diff),
				sprintf$("%d",tpisg008.tfrd),
				sprintf$("%s",tpisg008.head),
				sprintf$("%f",tpisg008.aamt),
				sprintf$("%f",tpisg008.amnt),
				sprintf$("%s",tpisg008.cspa))
		line = strip$(shiftl$(line))
		seq.puts(line,stat.fp)
	endselect
	
}


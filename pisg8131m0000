|******************************************************************************
|* tdisg8131m000  0  VRC B61U a7 live
|* Export Dispatch Request Data
|* Tools                         
|* 2014-05-05
|******************************************************************************
|* Main table tdisg831 Export Dispatch Request Data, Form Type 1
|******************************************************************************
|*IDENT	ISG001016	Somak Mondal	06-05-2014	VRC B61U a7 live  
|* ESSP INCIDENT - 3766, Sujeet Kumar, 	2014-06-01
| IDENT  ISG001041  Abhishek Singh 06/06/2014 VRC B61U a7 live
| ******************************************************************************
| IDENT  ISG001053, GAURAV GUPTA, IT0304, 12-06-2014, VRC B61U a7 live
| ADDED A REPORT
|
|* ISGECDV001062, IT0205, Arjit Gupta, Dt. 26-09-2014, VRC B61U a7 live
|* Template Description To be shown. 
|*
|* ISGECDV001082, IT0205, Arjit Gupta, VRC B61U a7 live, Dt. 06-10-2014
|* Check Logic of Freeze if FOC PO not Linked
|*
|* ISGECDV001089, IT0205, Arjit Gupta, VRC B61U a7 live, Dt. 10-10-2014
|* Display LC Balance Amount

|*ISGEC01031, Shilpa Janardanan,VRC B61U a7 live,Dt. 04/02/2015
|* Wrapping of Text description
|*
|* ISGEC004024, Dharmendra, 03-11-2015, B61U a7 live
|*
|****************************** declaration section ***************************
declaration:

#ident "@(#)ISG001041	Abhishek Singh, IT0352, 06/06/2014 VRC B61U a7 live"

	table   ttdisg831 | Export Dispatch Request Data
	table   ttccom100 | Business Partners
	table   ttccom130 | Addresses
	table   ttccom000 | Implemented Software Components (Companies)
	table	ttdisg800
	table	twhinh312
	table	ttdisg832
	table	ttcibd001
	table	ttpisg036
	table	ttdpur400
	table	ttdpur401
	table   ttppdm600
	table   ttcemm170
	
	table   twhisg312										|#ISG001041.sn
	table   twhinh200
	table   ttccom001
	table   twhinh220
	table   ttppdm740
	table   ttpisg031
	table   twhwmd260										|#ISG001041.en
	table	ttcmcs008
	table	ttppin020
	table	ttdisg841
	table	ttdisg863
	table	ttpisg037
	table	ttcmcs050
	table	ttdisg007
	table	ttdisg825
	table	ttdisg867			|#ISGECDV001082.n
	table	ttdisg873
	
	extern	domain	tcdsca		var.temp		|#ISGECDV001062.n
	extern	domain	tcdesc		v.comp
	extern	domain	tcncmp		comp.code
	extern	domain	tfgld.date	def.date
	extern	domain	tcmcs.str60	v.subj
	extern	domain	tcqiv1		v.pqty

	extern 	domain	 whinh.shpm	import.rcno
	extern 	domain	tcorno		x.edrn
	extern	domain	tfgld.sess	i.session
	extern domain	tcamnt		totl
	extern domain  tcmcs.str10	session.type
	
	extern 	domain  tcorno		orno,i.size,i.size1,i.size2,i.size3,i.size4,i.size5,i.size6	|#ISG001041.sn
	extern	domain	tcorno		i.type,i.type1,i.type2,i.type3,i.type4,i.type5,i.type6
	extern	domain	tcpono		i.noct,i.noct1,i.noct2,i.noct3,i.noct4,i.noct5,i.noct6
	extern 	domain  tcwset		oset 
	extern 	domain  tcpono		pono,seqn,v.nopk
	extern  domain  tcdsca		insm.dsca
	extern 	domain	 tcnama		created.by ,process.by
	extern	domain	tcrate		ins.perc,fre.perc,com.perc,dis.perc
	extern	domain	tcmcs.str3	var
	extern domain	tcmcs.str100m	chaadd1,chaadd2,chaadd3,chaadd4
	extern	domain	tcclot		type_shipment
	extern	domain	tcmcs.str15	i.rate,i.rfac,i.nwgt,i.gwgt,i.arev,i.dbkb,i.prbf,packing_qty
	extern	domain	tcmcs.str5	i.rev
	extern	domain	tcmcs.str50	con1,con2,con3,con4,con5,exp1,exp2,exp3,exp4,exp5
	extern	domain	tcmcs.str50	buyer1,buyer2,buyer3,buyer4,buyer5,i.heading
	extern	domain	tcmcs.str50	value_declare
	extern	domain	tcdsca		desc,desc1,desc2,desc3,desc4,delivery_term
	extern	domain	tcmcs.long	tot.nopk,total.pack
	extern	domain	tcamnt		tot_amount
	extern	domain	tcmcs.str10	lumpsum
	extern	domain	tcmcs.str100	dbk_des1,dbk_des2,term_delivery
	extern	domain	tcmcs.str70	text1,text2
	extern	domain	tcdsca		label1,label2,label3,label4,label5,report_desc
	extern	domain	tcwght		gross_weight
	extern	domain	tcclot		mode,v.type
	long 		ret_val,rt1,i,insert.line
	string		error(100),error1(100)					
	boolean		record.found
	
	extern	domain	tcamnt		var.lcmt		|#ISGECDV001089.n
|************* Global Variable ***********
	extern	domain	tcyesno		i.comm								|#ISG001041.en
	
	extern	domain	tcamnt	amnt.inr
	extern	domain	tcyesno	edbk.v, efps.v, efms.v
	extern domain	tcmcs.long	p,q
	extern	domain	tcamnt		tot_nwgt,tot_gwgt
	extern	domain	tcmcs.str10	i.packed	
	extern	domain	tcpono		srno
	extern	domain	tcclot		i.item
	extern	domain	tcmcs.str50	dbk_description1,dbk_description2,
					description1,description2
	extern	domain	tcmcs.str50	shipper1,shipper2,shipper3,shipper4,shipper5
	extern	domain	tcmcs.str50	consignee1,consignee2,consignee3,consignee4,consignee5	
	extern	domain	tcmcs.str70	text(2), text1,text2
	
#include <bic_dam>	
#pragma used dll ottstpapihand

|****************************** program section ******************************** 	
before.program:
	tcmcs.dll0095.read.parm("tdisg800")
	dal.start.business.method("tdisg831","set.global.variable",ret_val,1)
|****************************** choice section **********************************
choice.process.cont:
before.choice:	
on.choice:
	tdisgdll0831.process.billing.advice.with.installment(tdisg831.edrn)
	tdisgdll0831.update.billing.advice.process.status(tdisg831.edrn,tdisg.stat.process)
	commit.transaction()

choice.freeze:
before.choice:
	record.found = false
	check.freeze.command()			|#ISGECDV001082.n
	
	select 	tdisg832.rcno,
		tdisg832.rcln
	from	tdisg832
	where	tdisg832._index1 = {:tdisg831.edrn}
	selectdo
		select	tdisg007.rcno
		from	tdisg007
		where	tdisg007._index1 = {:tdisg832.rcno,:tdisg832.rcln}
		as set with 1 rows
		selectdo
			record.found = true
		endselect
	endselect	
	
	if not record.found then
		if tdisgdll0001.bill_of_material()  then
			message("Kindly Maintain Child Item.")
			choice.again()
		endif
	endif
	
	if check_installment() then
		show.dal.messages(MSG.ALL)
		choice.again()
	endif
	if	Instalment_Value_Exceed()	then
		show.dal.messages(MSG.ALL)
		choice.again()
	endif
	

on.choice:
	i.comm = tcyesno.yes
	dal.start.business.method("tdisg831","freeze.record",ret_val)	|#30062014.n
	
	if ret_val then
		show.dal.messages(MSG.ALL)
		abort.transaction()
	else
		commit.transaction()
	endif
	
	tdisgdll0831.update.linked.ir.details(tdisg831.edrn,1)
	
	execute(find.data)

choice.unfreeze:
on.choice:
	dal.start.business.method("tdisg831","unfreeze.record",ret_val)
				|GT.30062014.so
choice.generate.custinv:
on.choice:
	db.retry.point()
	select	tdisg831.edst
	from	tdisg831 for update
	where 	tdisg831._index1 = {:tdisg831.edrn}
	and	tdisg831.edst = tdisg.edst.open
	and	tdisg831.stat = tdisg.stat.freeze
	selectdo
		tdisg831.edst = tdisg.edst.release
		
		db.update(ttdisg831,db.retry)
		commit.transaction()
	endselect
				|GT.30062014.eo

choice.print.data:							|ISG001053.SN
on.choice:
| 	if rprt_open() then
| 		read.main.table()
| 		rprt_close()
| 	else
| 		choice.again()
| 	endif								|ISG001053.EN
	
	if rprt_open() then
		if reportno = 1 then
			tdisgdll831rep.export_dispatch_request(tdisg831.edrn)
	| 		export_dispatch_request()   
		else if reportno = 2  then  
	| |		custom_invoice()
			tdisgdll831rep.custom_invoice(tdisg831.edrn)
		else if reportno = 3 then
	| |		custom_packing()
			tdisgdll831rep.custom_packing(tdisg831.edrn)	
		else if reportno = 4 then	
	| |		draft_bill_of_lading()
			tdisgdll831rep.draft_bill_of_lading(tdisg831.edrn)
		else if reportno = 5 then
	| |		custom_annexure()	
			tdisgdll831rep.custom_annexure(tdisg831.edrn)
		endif
		endif
		endif
		endif
		endif
		rprt_close()
	else
	       choice.again()
	endif

|****************************** field section **********************************
	
field.tdisg831.otbp:
before.zoom:
	query.extend.where.in.zoom("tccom100.bprl = 3 or tccom100.bprl = 4")
| when.field.changes:
| 	select	tccom100.cadr
| 	from	tccom100
| 	where	tccom100._index1 = {:tdisg831.otbp}
| 	selectdo
| 		get.address(tccom100.cadr)
| 	selectempty
| 	endselect
					|#30062014.so
| field.tdisg831.nins:
| before.zoom:
| 	tpisg031.cprj = tdisg831.cprj
| 	tpisg031.ofbp = tdisg831.ofbp
					
| field.insm.dsca:
| before.display:
| 	select	tpisg031.dsca
| 	from	tpisg031
| 	where	tpisg031._index1 = {:tdisg831.cprj,:tdisg831.ofbp,:tdisg831.nins}
| 	selectdo
| 		insm.dsca = tpisg031.dsca
| 	selectempty
| 		insm.dsca = ""	
| 	endselect
						|#30062014.eo
field.tdisg831.ofbp:
before.zoom:
	tppdm740.cprj = tdisg831.cprj
			|GT.30062014.so
| after.field:
| 	select	tppdm600.ncmp,tppdm600.ccur
| 	from	tppdm600
| 	where	tppdm600._index1 = {:tdisg831.cprj}
| 	selectdo
| 		select	tppdm740.ofbp,tccom100.cadr
| 		from	tppdm740,tccom100
| 		where 	tppdm740._index1 = {:tdisg831.cprj,:tdisg831.ofbp}
| 		and	tppdm740.ofbp refers to tccom100
| 		selectdo
| 			select	tccom130.ccty
| 			from	tccom130
| 			where	tccom130._index1 = {:tccom100.cadr}
| 			selectdo
| 			selectempty
| 				tccom130.ccty = ""
| 			endselect
| 		selectempty
| 			tccom130.ccty = ""	
| 		endselect		
| 		
| 		select	tcemm170.lcur
| 		from	tcemm170
| 		where	tcemm170._index1 = {:tppdm600.ncmp}
| 		and	tcemm170.lcur = :tppdm600.ccur
| 		selectdo
| 			select	tccom000.ccty
| 			from	tccom000
| 			where	tccom000._index1 = {0,:tppdm600.ncmp}
| 			selectdo
| 				if tccom000.ccty <> tccom130.ccty then
| 					session.type = "EXPORT"
| 				else	
| 					session.type = "DOMESTIC"
| 				endif	
| 			endselect	
| 		selectempty
| 			session.type = "EXPORT"
| 		endselect
| 	selectempty
| 		session.type = ""	
| 	endselect

| 	display("session.type")
							|GT.30062014.eo
							|#30062014.so
| field.tdisg831.rcno:
| before.zoom:
| 	query.extend.where.in.zoom("whisg312.cprj =" & quoted.string(tdisg831.cprj) & " and whisg312.inrq = " & "' '")
							|#30062014.eo
field.created.by:
before.display:
	created.by = get.employee.name(tdisg831.crby)

field.process.by:
before.display:
	process.by = get.employee.name(tdisg831.user)

field.ins.perc:
before.display:
	select	tpisg036.insp
	from	tpisg036
	where	tpisg036._index1 = {:tdisg831.cprj}
	selectdo
		ins.perc = tpisg036.insp
	selectempty
		ins.perc = 0
	endselect
	
field.fre.perc:
before.display:
	select	tpisg036.frep
	from	tpisg036
	where	tpisg036._index1 = {:tdisg831.cprj}
	selectdo
		fre.perc = tpisg036.frep
	selectempty
		fre.perc = 0
	endselect

field.com.perc:
before.display:
	select	tpisg036.comm
	from	tpisg036
	where	tpisg036._index1 = {:tdisg831.cprj}
	selectdo
		com.perc = tpisg036.comm
	selectempty
		com.perc = 0
	endselect
	
field.dis.perc:
before.display:
	select	tpisg036.disc
	from	tpisg036
	where	tpisg036._index1 = {:tdisg831.cprj}
	selectdo
		dis.perc = tpisg036.disc
	selectempty
		dis.perc = 0
	endselect	
	
field.tdisg831.lcno:
before.zoom:
	query.extend.where.in.zoom("tdisg841.cprj = " & quoted.string(tdisg831.cprj))
	
field.tdisg831.edrn:
before.zoom:
	
| 	query.extend.where.in.zoom("tcmcs050._index1 = {:tdisg800.ednr}")
	if	update.status = add.set	then
		tcmcs050.nrgr = tdisg800.ednr
		attr.zoomcode = Z.SESSION
		attr.zoomsession$ = "tcmcs0150m000"
		attr.zoomreturn$ = "tcmcs050.seri"
	else
		attr.zoomcode = Z.SESSION
		attr.zoomsession$ = "tdisg8531m500"
		attr.zoomreturn$ = "tdisg831.edrn"
	endif	

					|#ISGECDV001062.sn
field.var.temp:
before.display:
	var.temp = get_template_desc()	
					|#ISGECDV001062.en

					|#ISGECDV001089.sn
field.var.lcmt:
before.display:
	if	not isspace(tdisg831.lcno)	then
		var.lcmt = get.lc.bal.amnt(tdisg831.cprj, tdisg831.lcno)
	else
		var.lcmt = 0
	endif
					|#ISGECDV001089.en
|****************************** functions **********************************
functions:
function domain tcnama get.employee.name
			(
				domain	tfgld.user	i.user
			)
{
	select 	tccom001.nama
	from	tccom001
	where 	tccom001._index4 = {:i.user}
	as set with 1 rows
	selectdo
	endselect
	
	return(tccom001.nama)
}
function long	check_installment()
{
	select	tdisg832.nins,
		tdisg832.tobi,
		tdisg832.bivl
	from	tdisg832
	where	tdisg832._index1 = {:tdisg831.edrn}
	selectdo
		
		if tdisg832.tobi = tcyesno.yes then
			if tdisg832.nins = 0 then
				dal.set.error.message("@Installment Not Linked!!!")
				return(DALHOOKERROR)
			endif
		else
			
		endif
		
		if	tdisg832.nins <> 0	then
			if tdisg832.bivl = 0 then
				dal.set.error.message("@Billing Value Cann't be Zero!!!")
				return(DALHOOKERROR)
			endif
		endif
	endselect

	return(0)
}

function get.address(domain tccom.cadr		i.cadr)
{
	select	tccom130.nama,tccom130.namc,tccom130.dsca
	from	tccom130
	where	tccom130._index1 = {:i.cadr}
	selectdo		
	selectempty		
	endselect
}	

function domain tcccty get.country
		(
			domain	tccom.bpid	i.bpid
		)
{
	domain 	tcccty		o.ccty
	select 	tccom130.ccty:o.ccty
	from	tccom100,tccom130
	where	tccom100._index1 = {:i.bpid}
	and	tccom100.cadr refers to tccom130
	as set with 1 rows
	selectdo
	selectempty
		o.ccty = ""
	endselect
	
	return(o.ccty)
}

function string create.warehouse.order(domain whinh.oorg	oorg,			|#ISG001041.sn
					domain whinh.ittp	ittp,
					domain	tccshp		sfco,
					domain	tccshp		stco)
{
	ret_val = dal.new.object("whinh200")
	dal.set.field("whinh200.oorg",oorg)
	dal.set.field("whinh200.ittp",ittp)
	dal.set.field("whinh200.sfco",sfco)
	dal.set.field("whinh200.stco",stco)
	ret_val = dal.save.object("whinh200")
	
	if ret_val  = 0 then
		orno = whinh200.orno
		oset = whinh200.oset
	else
		error = ""
		rt1 = dal.count.error.messages()
		for i = rt1 to 1 step -1
			ret_val = dal.get.error.message(error1)
			message("%s",error1)
		endfor
		abort.transaction()
		orno = ""
	endif
	
	if not isspace(orno) then
		select	tdisg832.*
		from	tdisg832
		where	tdisg832._index1 = {:tdisg831.edrn}
		selectdo
			select	whisg312.cprj,whisg312.cspa,whisg312.cact,whisg312.ccco
			from	whisg312
			where	whisg312._index1 = {:tdisg832.rcno,:tdisg832.rcln}
			selectdo
			endselect
				
			ret_val = dal.new.object("whinh220")
			
			dal.set.field("whinh220.oorg",oorg)
			dal.set.field("whinh220.orno",orno)
			dal.set.field("whinh220.oset",oset)
			dal.set.field("whinh220.item",tdisg832.item)
			dal.set.field("whinh220.qoro",tdisg832.qnty)
			dal.set.field("whinh220.fprj",whisg312.cprj)
			dal.set.field("whinh220.fspa",whisg312.cspa)
			dal.set.field("whinh220.fact",whisg312.cact)
			dal.set.field("whinh220.fcco",whisg312.ccco)
			
			ret_val = dal.save.object("whinh220")
			
			if ret_val  = 0 then
				pono = whinh220.pono
				seqn = whinh220.seqn
				commit.transaction()
			else
				error = ""
				rt1 = dal.count.error.messages()
				for i = rt1 to 1 step -1
					ret_val = dal.get.error.message(error1)
					message("%s",error1)
				endfor
				abort.transaction()
				orno = ""
				break
			endif
			
			if pono <> 0 and seqn <> 0 then
				update.tdisg832()
			endif	
		endselect
	endif	
	return(orno)
}												

function boolean process.outbound()
{
	string		error.msg(100)
	
	stpapi.put.field("whinh2100m000", "whinh200.oorg", str$(whinh.oorg.project.man))			
	stpapi.put.field("whinh2100m000", "whinh200.orno", str$(orno))			
	stpapi.put.field("whinh2100m000", "whinh200.oset", str$(oset))			
	ret_val = stpapi.find("whinh2100m000", error.msg)
	if ret_val = 1 then
		ret_val = stpapi.mark("whinh2100m000", error.msg)
		if ret_val = 1 then
			stpapi.form.command("whinh2100m000",5,"whinh4200m000",error.msg)
			
			if not isspace(error.msg) then
				message("Error while process outbound %s",error.msg)
				stpapi.recover("whinh2100m000",error.msg)
				stpapi.end.session("whinh2100m000")
				return(false)
			endif
		else
			stpapi.end.session("whinh2100m000")
			return(false)	
		endif	
	else
		stpapi.end.session("whinh2100m000")
		return(false)	
	endif
	
	stpapi.end.session("whinh2100m000")
	return(true)
}	

function boolean global.approval()
{
	string		error.msg(100)
	domain tclogn	loco,loco1
	set.fmin(loco)
	set.fmax(loco1)
	
	stpapi.put.field("tpppc4200m000", "cprj.f", str$(tdisg831.cprj))			
	stpapi.put.field("tpppc4200m000", "cprj.t", str$(tdisg831.cprj))			
	stpapi.put.field("tpppc4200m000", "loco.f", logname$)			|#Biswa.18/06/2014.n
	stpapi.put.field("tpppc4200m000", "loco.t", logname$)			|#Biswa.18/06/2014.n
| 	stpapi.put.field("tpppc4200m000", "loco.f", str$(loco))			|#Biswa.18/06/2014.o
| 	stpapi.put.field("tpppc4200m000", "loco.t", str$(loco1))		|#Biswa.18/06/2014.o
	stpapi.put.field("tpppc4200m000", "tpgen.cotp.item", str$(tcyesno.yes))			
											|#Biswa.18/06/2014.sn
	stpapi.put.field("tpppc4200m000", "item.manu", str$(tppdm.yeno.yes))
	stpapi.put.field("tpppc4200m000", "item.invoice", str$(tppdm.yeno.yes))
	stpapi.put.field("tpppc4200m000", "item.inventory", str$(tppdm.yeno.yes))
	stpapi.put.field("tpppc4200m000", "item.price.var", str$(tppdm.yeno.yes))
	stpapi.put.field("tpppc4200m000", "item.expect", str$(tppdm.yeno.yes))
	stpapi.put.field("tpppc4200m000", "item.service", str$(tppdm.yeno.yes))
	stpapi.put.field("tpppc4200m000", "item.ord.costs", str$(tppdm.yeno.yes))
	stpapi.put.field("tpppc4200m000", "item.pri.var.rev", str$(tppdm.yeno.yes))
	stpapi.put.field("tpppc4200m000", "item.expense.tax", str$(tppdm.yeno.yes))
											|#Biswa.18/06/2014.en
	stpapi.put.field("tpppc4200m000", "tpgen.cotp.task", str$(tcyesno.yes))			
	stpapi.put.field("tpppc4200m000", "tpgen.cotp.cequ", str$(tcyesno.yes))			
	stpapi.put.field("tpppc4200m000", "tpgen.cotp.csub", str$(tcyesno.yes))			
	stpapi.put.field("tpppc4200m000", "tpgen.cotp.cico", str$(tcyesno.yes))			
	stpapi.put.field("tpppc4200m000", "tpgen.cotp.cpru", str$(tcyesno.yes))			

	stpapi.set.report("tpppc4200m000","rtpppc420001000","D",error.msg)
	stpapi.form.command("tpppc4200m000",5,"exec.cont.process",error.msg)
			
	if not isspace(error.msg) then
		message("Error while global approval %s",error.msg)
		stpapi.recover("tpppc4200m000",error.msg)
		stpapi.end.session("tpppc4200m000")
		return(false)
	else
		stpapi.end.session("tpppc4200m000")
	endif
	
	return(true)
}	

function boolean process.transaction()
{
	string		error.msg(100)
	domain tclogn	loco,loco1
	set.fmin(loco)
	set.fmax(loco1)
	
	stpapi.put.field("tpppc4802m000", "cprj.f", str$(tdisg831.cprj))			
	stpapi.put.field("tpppc4802m000", "cprj.t", str$(tdisg831.cprj))			
| 	stpapi.put.field("tpppc4802m000", "loco.f", str$(loco))			
| 	stpapi.put.field("tpppc4802m000", "loco.t", str$(loco1))			
	stpapi.put.field("tpppc4802m000", "loco.f", logname$)			
	stpapi.put.field("tpppc4802m000", "loco.t", logname$)			
	
	stpapi.set.report("tpppc4802m000","rtpppc440201000","D",error.msg)
	stpapi.form.command("tpppc4802m000",5,"exec.cont.process",error.msg)
			
	if not isspace(error.msg) then
		message("Error while process transaction %s",error.msg)
		stpapi.recover("tpppc4802m000",error.msg)
		stpapi.end.session("tpppc4802m000")
		return(false)
	else
		stpapi.end.session("tpppc4802m000")
	endif
	
	return(true)
}	

function update.process()
{
	db.retry.point()
| 	select	tdisg831.proc,tdisg831.prdt	|GT.30062014.o
	select	tdisg831.stat,tdisg831.prdt	|GT.30062014.n
	from	tdisg831 for update
	where	tdisg831._index1 = {:tdisg831.edrn}
	selectdo
| 		tdisg831.proc = tcyesno.yes		|GT.30062014.o
		tdisg831.stat = tdisg.stat.process	|GT.30062014.n	
		tdisg831.prdt = utc.num()
		
		db.update(ttdisg831,db.retry)
		commit.transaction()
	endselect									
}											

function update.sales.amount()
{
	i.comm = tcyesno.yes
	dal.start.business.method("tdisg831","update.tpppc215",ret_val,1)					|#ISG001041.n
	i.comm = tcyesno.no
}

function installment.breakup.actual()
{
	i.comm = tcyesno.yes
	dal.start.business.method("tdisg831","insert.tpisg038",ret_val,1)		|#ISG001041.n
	if ret_val then
		show.dal.messages(MSG.ALL)
	endif
	
	i.comm = tcyesno.no
}

function update.tdisg832()
{
	db.retry.point()
	select	tdisg832.worg,tdisg832.wtyp,tdisg832.worn,tdisg832.wlin,tdisg832.wseq,tdisg832.wset
	from	tdisg832 for update
	where	tdisg832._index1 = {:tdisg831.edrn,:tdisg832.rcno,:tdisg832.rcln}
	selectdo
		tdisg832.worg = whinh.oorg.project.man
		tdisg832.wtyp = whinh.ittp.issue
		tdisg832.worn = orno
		tdisg832.wlin = pono
		tdisg832.wseq = seqn
		tdisg832.wset = oset
		
		db.update(ttdisg832,db.retry)
		commit.transaction()
	endselect
}														

function boolean check.billing.request()
{
	long	get.data
	get.data = 0
	
	select	tdisg832.*
	from	tdisg832
	where	tdisg832._index1 = {:tdisg831.edrn}
	selectdo
		select	whisg312.cprj,whisg312.cspa,whisg312.cact,whisg312.ccco,whisg312.cwar
		from	whisg312
		where	whisg312._index1 = {:tdisg832.rcno,:tdisg832.rcln}
		selectdo
			select	whwmd260.qhnd
			from	whwmd260
			where	whwmd260._index1 = {:whisg312.cwar,:tdisg831.cprj,:tdisg832.item,:whisg312.cspa,:whisg312.cact}
			selectdo
			selectempty
				whwmd260.qhnd = 0
			endselect
		endselect
		
		if whwmd260.qhnd < tdisg832.qnty then
			get.data = 1
			break
		endif
	endselect	
	
	if get.data = 1 then
		return(false)
	endif
	return(true)
}													|#ISG001041.en

function boolean export.domestic()
{
	select	tppdm600.ncmp,tppdm600.ccur
	from	tppdm600
	where	tppdm600._index1 = {:tdisg831.cprj}
	selectdo
		select	tppdm740.ofbp,tccom100.cadr
		from	tppdm740,tccom100
		where 	tppdm740._index1 = {:tdisg831.cprj,:tdisg831.ofbp}
		and	tppdm740.ofbp refers to tccom100
		selectdo
			select	tccom130.ccty
			from	tccom130
			where	tccom130._index1 = {:tccom100.cadr}
			selectdo
			selectempty
				tccom130.ccty = ""
			endselect
		selectempty
			tccom130.ccty = ""	
		endselect		
		
		select	tcemm170.lcur
		from	tcemm170
		where	tcemm170._index1 = {:tppdm600.ncmp}
		and	tcemm170.lcur = :tppdm600.ccur
		selectdo
			select	tccom000.ccty
			from	tccom000
			where	tccom000._index1 = {0,:tppdm600.ncmp}
			selectdo
				if tccom000.ccty <> tccom130.ccty then
					return(true)
				endif
			endselect		
		selectempty
			return(true)
		endselect
	endselect
	
	return(false)
}	
		
| ********************************************** Report Logic *********************************************
function	read.main.table()				|ISG001053.SN
{
	select	tdisg831.*
	from	tdisg831
	where	tdisg831._index1 = {:tdisg831.edrn}
	selectdo
		i.rate = shiftl$(str$(round(tdisg831.rate,2,1)))
		
		if tdisg831.type = tdisg.type.domestic then
			tdisg831.motp = tccom.trmd.road
		endif	
		
		select	tccom100.cadr
		from	tccom100
		where	tccom100._index1 = {:tdisg831.chnm}
		selectdo
			select	tccom130.*
			from	tccom130
			where	tccom130._index1 = {:tccom100.cadr}
			selectdo
				chaadd1 = tccom130.nama
				chaadd2 = tccom130.ln01
				chaadd3 = tccom130.ln02
				chaadd4 = tccom130.ln03
			selectempty
				chaadd1 = ""
				chaadd2 = ""
				chaadd3 = ""
				chaadd4 = ""
			endselect
		endselect
		
		select	tpisg036.*
		from	tpisg036
		where	tpisg036._index1 = {:tdisg831.cprj}
		selectdo
			i.prbf = shiftl$(str$(round(tpisg036.prbf,2,1)))
		selectempty
			tpisg036.prbf = 0
		endselect
		
		select	tpisg037.desc
		from	tpisg037
		where	tpisg037._index1 = {:tdisg831.ptld}
		selectdo
		selectempty
			tpisg037.desc = ""
		endselect	
		
		select	tcmcs052.*
		from	tcmcs052
		where	tcmcs052._index1 = {:tdisg831.cprj}
		as set with 1 rows
		selectdo
		endselect
		
		select	tppdm600.*
		from	tppdm600
		where	tppdm600._index1 = {:tdisg831.cprj}
		as set with 1 rows
		selectdo
		endselect
		
		select	tdisg829.*
		from	tdisg829
		where	tdisg829._index1 = {:tdisg831.tpct}
		as set with 1 rows
		selectdo
		endselect
		
		select	tdisg863.*
		from	tdisg863
		where	tdisg863._index1 = {:tdisg831.edrn}
		selectdo
			i = i + 1
| 			for i = 1 to 10
				if i = 1 then
					i.size = tdisg863.size
					i.type = tdisg863.type
					i.noct = tdisg863.noct
				endif
				if i = 2 then
					i.size1 = tdisg863.size
					i.type1 = tdisg863.type
					i.noct1 = tdisg863.noct
				endif
				if i = 3 then
					i.size2 = tdisg863.size
					i.type2 = tdisg863.type
					i.noct2 = tdisg863.noct
				endif
				if i = 4 then
					i.size3 = tdisg863.size
					i.type3 = tdisg863.type
					i.noct3 = tdisg863.noct
				endif
				if i = 5 then
					i.size4 = tdisg863.size
					i.type4 = tdisg863.type
					i.noct4 = tdisg863.noct
				endif
				if i = 6 then
					i.size5 = tdisg863.size
					i.type5 = tdisg863.type
					i.noct5 = tdisg863.noct
				endif
				if i = 6 then
					i.size6 = tdisg863.size
					i.type6 = tdisg863.type
					i.noct6 = tdisg863.noct
				endif
| 			endfor	
			
		selectempty
			tdisg863.size = ""
			tdisg863.type = ""
			tdisg863.noct = 0
		endselect	
		
		amnt.inr = 0
		select	tdisg832.*
		from	tdisg832
		where	tdisg832._index1 = {:tdisg831.edrn}
		selectdo
| 			select	tcmcs008.*
| 			from	tcmcs008
| 			where	tcmcs008._index1 = {"INR",:tppdm600.ccur,"EXP"}
| 			as set with 1 rows
| 			selectdo
| 			endselect
			select	tpisg031.dsca
			from	tpisg031
			where	tpisg031._index1 = {:tdisg831.cprj,:tdisg831.ofbp,:tdisg832.nins}
			selectdo
			endselect
			
			i.rfac = shiftl$(str$(round(tdisg832.rfac,2,1)))
			i.nwgt = shiftl$(str$(round(tdisg832.nwgt,2,1)))
			i.gwgt = shiftl$(str$(round(tdisg832.gwgt,2,1)))
			i.arev = shiftl$(str$(round(tdisg832.arev,2,1)))
			i.dbkb = shiftl$(str$(round(tdisg832.dbkb,2,1)))
			
			if tdisg832.tobi = tcyesno.no then
				type_shipment = "Free of Cost"
			else
				if not isspace(type_shipment) then
					if tdisg831.octy <> "IN " then
						type_shipment = "Merchanting Trading"
					else
						type_shipment = "Regular Shipment"
					endif
				else
					type_shipment = "Regular Shipment"
				endif	
			endif
			
			if	tdisg832.edbk = tcyesno.yes then
				edbk.v = tcyesno.yes
			endif
			
			if	tdisg832.efps = tcyesno.yes then
				efps.v = tcyesno.yes
			endif
			
			if	tdisg832.efms = tcyesno.yes then
				efms.v = tcyesno.yes
			endif
			
			if	tdisg831.rate <> 0 then
				amnt.inr = tdisg832.bivl * tdisg831.rate 
			else
				amnt.inr = tdisg832.bivl
			endif
			
			if	edbk.v <> tcyesno.yes then
				edbk.v = tcyesno.no
			endif
			if	efms.v <> tcyesno.yes then
				efms.v = tcyesno.no
			endif
			if	efps.v <> tcyesno.yes then
				efps.v = tcyesno.no
			endif
			
			rprt_send()
		endselect
	endselect
}												|ISG001053.EN

function long Instalment_Value_Exceed()
{
	domain	tfgld.amnt	ins.val
	domain	tppdm.nins	tmp.ninc
	
	select	tdisg832.nins, sum(tdisg832.bivl):ins.val, max(tdisg832.ninc):tmp.ninc 
	from	tdisg832
	where	tdisg832._index1 = {:tdisg831.edrn}
	and	tdisg832.nins <> 0
	group by tdisg832.nins
	order by tdisg832.nins
	selectdo
		select	tppin020.insa
		from	tppin020
		where	tppin020._index1 = {:tdisg831.cprj, :tdisg831.ofbp, :tdisg832.nins}
		and	tppin020.insa >= :ins.val
		selectdo
		selectempty
			dal.set.error.message("@Total Billing value cannot be greater than Installment value for Billing Schedule %d Instalment %d.",tmp.ninc, tdisg832.nins)
			return(DALHOOKERROR)
		endselect
	endselect
	
	return(0)
}

								|#ISGECDV001062.sn
function domain tcdsca get_template_desc()
{
	domain	tcdsca	tmp.dsca
	
	tmp.dsca = ""
	if	not isspace(tdisg831.lcno)	then
		select	tdisg825.temp
		from	tdisg825
		where	tdisg825._index1 = {:tdisg831.lcno}
		selectdo
			select	tdisg861.dsca:tmp.dsca
			from	tdisg861
			where	tdisg861._index1 = {:tdisg825.temp, :tdisg831.motp}
			selectdo
			endselect
		endselect
	else
		select	tpisg036.temp
		from	tpisg036
		where	tpisg036._index1 = {:tdisg831.cprj}
		selectdo
			select	tdisg861.dsca:tmp.dsca
			from	tdisg861
			where	tdisg861._index1 = {:tpisg036.temp, :tdisg831.motp}
			selectdo
			endselect
		endselect
	endif	
	
	return(tmp.dsca)
}
								|#ISGECDV001062.en


						|#ISGECDV001082.sn
function check.freeze.command()
{
	select	tdisg832.tobi, tdisg832.reas, tdisg832.rcno, tdisg832.rcln,
		tdisg832.orno, tdisg832.pono				|# ISGEC004024.n
	from	tdisg832
	where	tdisg832._index1 = {:tdisg831.edrn}
	selectdo
		if	tdisg832.tobi = tcyesno.no	then
			select	whisg311.type
			from	whisg311
			where	whisg311._index1 = {:tdisg832.reas}
			and	whisg311.type in (whreas.type.free.vendor, whreas.type.stock)
			selectdo
				select	tdisg867.orno
				from	tdisg867
				where	tdisg867._index1 = {:tdisg831.edrn, :tdisg832.rcno, :tdisg832.rcln}
				selectdo
					if	isspace(tdisg867.orno)	then
						message("Linked PO for Free Issue Material")
						choice.again()
					endif
				selectempty
					message("Linked PO for Free Issue Material")
					choice.again()
				endselect	
			endselect
								|# ISGEC004024.sn
		else						
			select	tdisg867.*
			from	tdisg867
			where	tdisg867._index2 = {:tdisg832.orno, :tdisg832.pono}
			selectdo
				select	tdisg873.*
				from	tdisg873
				where	tdisg873._index1 = {:tdisg831.edrn, :tdisg832.rcno, :tdisg832.rcln,
							:tdisg867.edrn, :tdisg867.rcno, :tdisg867.rcln}
				and	tdisg873.frez = tcyesno.yes			
				selectdo
				selectempty
					message("Assign the FIV material quantity.")
					choice.again()
				endselect		
			endselect						
 								|# ISGEC004024.en
		endif
	endselect	
}
									|#ISGECDV001082.en

								|#ISGECDV001089.sn
function domain tcamnt get.lc.bal.amnt
			(
			domain	tccprj	i.cprj,
			domain	tcorno	i.lcno
			)
{
	domain	tcamnt	tmp.tlmt
	domain	tcamnt	tmp.clmt
	domain	tcamnt	tmp.blmt
	
	tmp.tlmt = 0
	tmp.clmt = 0
	tmp.blmt = 0
	select 	sum(tdisg841.amnt):tmp.tlmt
	from	tdisg841
	where	tdisg841._index1 = {:i.lcno}
	and	tdisg841._index2 = {:i.cprj}
	selectdo
	endselect
	
	select 	sum(lc_tdisg831.amti):tmp.clmt
	from	tdisg831 lc_tdisg831
	where	lc_tdisg831.lcno = :i.lcno
	and	lc_tdisg831._index4 = {:i.cprj}
	selectdo
	endselect
	
	tmp.blmt = tmp.tlmt - tmp.clmt
	
	return(tmp.blmt)
}
								|#ISGECDV001089.en

|******************************************************************************
|* ciisg2405m2000  0  VRC B61U a7 isg 
|* Data For GSTR-1
|* merino1                       
|* 2017-06-13
|******************************************************************************
|* Main table cisli205 Invoice-Source Relations, Form Type 4
|******************************************************************************
|* ID : ISGECGST006, IT0386, Saurabh Dubey, 14 June 2017, VRC B61U a7 isg
|* GSTR-1, Functional : Mrs. Veena(Isgec)
|* Isgec Onsite Deployment
|* Merino Services
|
|* ID: ISGEC01043, Sumit Bansal, 17/08/2017
|* Modification for Currency
|*
|* ID: ISGECMOD011, Gokul Chaurasia, 14-02-2018, VRC B61U a7 isg
|* Added Trim$() & quoted.string() function while printing.
|*
|* ID: ISGEC01089, Priya Jindal, 26/7/2018, VRC B61U a7 isg
|* Remove Dupliacte records
|*
|* ID: ISGEC01086, Priya Jindal, 23/8/2018,  VRC B61U a7 isg
|* Remove report printing on generate
|****************************** declaration section ***************************
declaration:

	table	tcisli205 | Invoice-Source Relations
	table	tcisli235
	table	ttccom130
	table	ttcmcs143
	table	ttcmcs032
	table	ttcmcs036
	table	ttcmcs010
	table	ttccom139
	table	ttctax400
	table	ttctax941
	table	ttdisg825				|#ISGEC01043.n
	table	ttdisg831
	table	ttdisg832
	table	ttdisg842
	table	ttdisg878
	table	ttfacr200
	table	ttfgld001
	table	ttfgld018
	table	ttfisg416
	table	ttfisg417
	table	ttpisg039
	table	ttpisg122
	table	ttppin020
	table	ttppdm740
	table	ttpisg036				|#ISGEC01043.n
	
	

	extern	domain	tcgld.docn      idoc.f
	extern 	domain 	tcgld.docn      idoc.t
	extern 	domain 	tfgld.date	store.date
	extern 	domain 	tfgld.year	year.f
	extern 	domain 	tfgld.prod	mnth.f
	extern 	domain 	tctran      	ityp.f    
	extern 	domain 	tctran		ityp.t    
	extern 	domain 	tcncmp		sfcp.f 
	extern 	domain 	tcncmp		sfcp.t 
	extern 	domain 	tccwar		port.code
	extern 	domain 	tcclot		shipping.bill.no
	extern 	domain 	tfgld.date	idat.f, idat.t
	extern 	domain 	tcdate		idat.utc.f, idat.utc.t
	extern 	domain 	tcmcs.str15	invoice.catg, supply.type, adv.doc, inv.date, inv.no
	extern 	domain 	tcmcs.str15	month.desc
	extern 	domain 	tcmcs.str10	exp.type
	extern 	domain 	tcmcs.str35	export.deemed
	extern 	domain 	tcmcs.str1	rcm.appl, exp.inv, goods.or.services
	extern 	domain 	tcmcs.str2	place.of.supply, bill.to.code, ship.to.code, own.code
	extern	domain	tcnama		bill.to.nama, ship.to.nama, own.nama
	extern	domain	tcpstc		bill.to.zipcode, ship.to.zipcode, own.zipcode
	extern	domain	tcdsca		bill.to.country, ship.to.country, own.ccty
	extern	domain	tcdsca		bill.to.state, ship.to.state, own.state
	extern	domain	tcdsca		bill.to.city, ship.to.city, own.city
	extern	domain	tcmcs.str215m	bill.to.address, ship.to.address, own.address
	extern	domain	tcmcs.str215m	bill.to.address1					|#ISGEC01043.n
	extern	domain	tcfovn		gstn.b.no		|* Bill To GSTIN
	extern	domain	tcfovn		gstn.s.no		|* Ship To GSTIN
	extern	domain	tcfovn		gstn.c.no		|* Company(Isgec) GSTIN
	extern	domain	tcpvat		cgst.rate, sgst.rate, igst.rate, cess.rate
	extern	domain	tcamnt		cgst.amnt, sgst.amnt, igst.amnt, cess.amnt
	extern	domain	tcamnt		tot.amnt, assv.val, item_rate, adv.amth
	extern	domain	tfgld.date	adv.doc.date
	extern	domain	tpproj.type	sel.type, inv.type
	extern	domain tcccur		o.project.currency					|#ISGEC01043.sn
	extern	domain tcratc		exc.rate						|#ISGEC01043.en
		domain	tcccty		ccty.s, ccty.b
		domain	tcmcs.cste	cste.s, cste.b
	 	domain	tcncmp		curr.comp
	
	
	string	err.file(100), file.name(100), line(2500)
		long  	stat.fp, ret2
		
	#pragma used dll ottdllbw 
	#pragma used dll otcmcsdll0036 
	#pragma used dll otcmcsdll0032 
	#define DOMESTIC.INVOICE cisli205.ccur = "INR"
	#define ADV.TYPE "AAR"
	#define LOG.COMP_1 200
	#define LOG.COMP_2 700
	#include "itcisg00001"

|****************************** program section ********************************
before.program:
	curr.comp = get.compnr()


|****************************** group section **********************************

group.1:
init.group:
	get.screen.defaults()

|****************************** choice section ********************************
choice.print.report:	
on.choice:
	generate.file()
	
choice.generate.records:
before.choice:
	if GSTR.filed.for.month() then
		message("GSTR-1 has already been filed for month %s %d....", month.desc, year.f)
		choice.again()
	endif
	
	if month.not.freezed() then 
		select	tfisg417.*
		from	tfisg417 for update
		where	tfisg417._index1 = {:year.f, :mnth.f}
		and	tfisg417.appr <> tcyesno.yes
		selectdo
			db.delete(ttfisg417, db.retry, e)
			
			if e = 0 then
				commit.transaction()
			else
				abort.transaction()
			endif
		endselect
	else
		message("GSTR-1 Data For the Month %s %d has already been Generated...", month.desc, year.f )
		choice.again()
	endif	
	
on.choice:
	sel.type = tpproj.type.both
	make.dates()
	get.data.from.sources()
	
after.choice:
| 	generate.file()	|ISGEC01086.o
	message("Record Generated Successfully")	|ISGEC01086.n
	
|****************************** field section *********************************

field.sfcp.f:
before.input:
	sfcp.f = get.compnr()
	
when.field.changes:
	sfcp.t = sfcp.f	
	

field.ityp.f:
when.field.changes:
	ityp.t = ityp.f
	

field.idoc.f:
before.zoom:
	tfgld018.ttyp = ityp.f
when.field.changes:
	idoc.t = idoc.f
	
field.idoc.t:
before.zoom:
	tfgld018.ttyp = ityp.t

field.mnth.f:
before.zoom:
	tfisg416.year = year.f

field.month.desc:
before.display:
	tcisgdll0100.get.month.description(mnth.f, month.desc)


|****************************** function section ******************************

functions:

function generate.file()
{
	err.file = "c:\temp\" & str$(utc.num()) & ".xls"
	
	file.name = "c:\temp\" & str$(utc.num())  & ".xls"
	
	stat.fp = seq.open(err.file, "w+")
	
	generate.header()
	align.data.for.printing()
	
	message("Please refer to file %s in C:", file.name)
	
	seq.close(stat.fp)
	ret2 = server2client(err.file,file.name,1)
	ret2 = app_start(file.name,"c:","","","")
}

|* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

function generate.header()
{
	if stat.fp >0 then
		
			line =concat$("	", 
			sprintf$("Invoice_Date"),			|1
			sprintf$("Invoice_Number"),			|2
			sprintf$("Customer_Billing_Name"),		|3
			sprintf$("Customer_Billing_GSTIN"),		|4
			sprintf$("State_Place_of_Supply"),		|5
			sprintf$("Item_Type_G_or_S"),			|6
			sprintf$("Item_Description"),			|7
			sprintf$("HSN_SAC_code"),			|8
			sprintf$("Item_Quantity"),			|9
			sprintf$("Item_UnitOfMeasurement"),		|10
			sprintf$("Item_Rate"),				|11
			sprintf$("Item_Total_Before_Discount"),	|12
			sprintf$("Item_Taxable_Value"),		|13
			sprintf$("CGST_Rate"),				|14
			sprintf$("CGST_Amount"),			|15
			sprintf$("SGST_Rate"),				|16
			sprintf$("SGST_Amount"),			|17
			sprintf$("IGST_Rate"),				|18
			sprintf$("IGST_Amount"),			|19
			sprintf$("CESS_Rate"),				|20
			sprintf$("CESS_Amount"),			|21
			sprintf$("Is this a Bill of Supply"),		|22
			sprintf$("Flag_Reverse_Charge"),		|23
			sprintf$("Type_Nil_Exempt_NonGST"),		|24
			sprintf$("Original_Invoice_Date"), 		|25
			sprintf$("Original_Invoice_Number"),		|26
			sprintf$("Original_Customer_Billing_GSTIN"),	|27
			sprintf$("GSTIN_eCommerce"),			|28
			sprintf$("AdvanceReceipt_Date"),		|29
			sprintf$("AdvanceReceipt_Document_Number"),	|30
			sprintf$("Adjustment_Amount_of_the_Linked_Advance_Receipt"),|31
			sprintf$("Flag_Export_GST_Payment"),		|32
			sprintf$("Export_Shipping_Port_Num"),		|33
			sprintf$("Export_Shipping_Bill_Number"),	|34
			sprintf$("Export_Shipping_Bill_Date"),		|35
			sprintf$("Flag_if_GST_TDS_deducted"),		|36	
			sprintf$("Supplier_GSTIN"),			|37	
			sprintf$("Customer_Billing_Address"),		|38	
			sprintf$("Customer_Billing_City"),		|39	
			sprintf$("Customer_Billing_State"),		|40	
			sprintf$("Flag_Cancelled"),			|41
			sprintf$("Receipt No."),			|42
			sprintf$("Receipt Line No."),			|43
			sprintf$("Billing Advice"),			|44
			sprintf$("Project Code"),			|45
			sprintf$("Customer Code"),			|46
			sprintf$("Currency"),				|47			|#ISGEC01043.sn
			sprintf$("Exchange Rate"),			|48			
			sprintf$("Billing Value(FC)"),			|49			|#ISGEC01043.en
			sprintf$(""))					|Last
	
						
		line = strip$(shiftl$(line))
		seq.puts(line, stat.fp)
	endif
}

|* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

function get.data.from.sources()
{
	on case sel.type
	case tpproj.type.dom:
			inv.type = tpproj.type.dom
			read.main.table()
			break
			
		case tpproj.type.exp:
| 			read.main.table.export()						|#ISGEC01043.o
			
			inv.type = tpproj.type.exp
			
			select	tdisg831.invd, tdisg831.invn					|#ISGEC01043.sn
			from	tdisg831
			where	tdisg831.invd inrange :idat.f and :idat.t
			and	tdisg831.type = tdisg.type.export
			and	tdisg831.etyp = tdisg.advice.supply
			group by tdisg831.invd, tdisg831.invn
			selectdo
				read.main.table.export(tdisg.advice.supply, tdisg831.invd, tdisg831.invn)		
			endselect
				
			select	tdisg831.invd, tdisg831.invn
			from	tdisg831
			where	tdisg831.cind inrange :idat.f and :idat.t
			and	tdisg831.type = tdisg.type.export
			and	tdisg831.etyp = tdisg.advice.service
			group by tdisg831.invd, tdisg831.invn
			selectdo
				read.main.table.export(tdisg.advice.service, tdisg831.invd, tdisg831.invn)		
			endselect								|#ISGEC01043.en
			
			break	
			
		case tpproj.type.both:
			inv.type = tpproj.type.dom
			read.main.table()  
| 			read.main.table.export()						|#ISGEC01043.o

			inv.type = tpproj.type.exp
			select	tdisg831.invd, tdisg831.invn					|#ISGEC01043.sn
			from	tdisg831
			where	tdisg831.invd inrange :idat.f and :idat.t
			and	tdisg831.type = tdisg.type.export
			and	tdisg831.etyp = tdisg.advice.supply
			group by tdisg831.invd, tdisg831.invn
			selectdo
				read.main.table.export(tdisg.advice.supply, tdisg831.invd, tdisg831.invn)		
			endselect
			
			select	tdisg831.invd, tdisg831.invn
			from	tdisg831
			where	tdisg831.cind inrange :idat.f and :idat.t
			and	tdisg831.type = tdisg.type.export
			and	tdisg831.etyp = tdisg.advice.service
			group by tdisg831.invd, tdisg831.invn
			selectdo
				read.main.table.export(tdisg.advice.service, tdisg831.invd, tdisg831.invn)		
			endselect								|#ISGEC01043.en
| 			
			break	
	endcase		
}

|* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

function read.main.table()
{	
	long	yy, mm, dd, hh, mn, ss
	
	sfcp.f = 200
	sfcp.t = 250
	
	if curr.comp = LOG.COMP_2 then
		sfcp.f = curr.comp
		sfcp.t = curr.comp
	endif
	
	select	tfgld001.ncmp
	from	tfgld001
	where	tfgld001._index1 inrange {:sfcp.f} and {:sfcp.t}
	selectdo
		switch.to.company(tfgld001.ncmp)
		
		convert.dates(idat.f, 0, 0, 0, idat.utc.f)
		convert.dates(idat.t, 23, 59, 59, idat.utc.t)
		
		select 	cisli205.sfcp, cisli205.ityp, cisli205.idoc,
			cisli205.ccur, cisli205.idat
		from 	cisli205
		where  	cisli205._index1 = {:tfgld001.ncmp}
		and	cisli205.idat inrange :idat.utc.f and :idat.utc.t	
		and	cisli205.ityp <> "SXP"
| 		and	cisli205.ityp = "STR"
| 		and	cisli205.idoc = 39090147
		selectdo
			yy = 0
			mm = 0
			dd = 0
			hh = 0
			mn = 0
			ss = 0
			
			utc.to.date  (cisli205.idat, yy, mm, dd, hh, mn, ss)
			
			store.date =  date.to.num  (yy, mm, dd)

			inv.date = sprintf$("%u(%02d/%02m/%04Y)", cisli205.idat)
			
			inv.no = (cisli205.ityp & str$(cisli205.idoc))
			select	cisli235.slcp
			from	cisli235
			where	cisli235._index2 = {
						:cisli205.sfcp,
						:cisli205.ityp,
						:cisli205.idoc
						}
			selectdo
			selectempty
				cisli235.slcp = 200
			endselect
			
			select	tpisg039.cprj, tpisg039.ofbp, tpisg039.nins,
				tpisg039.edrn, tpisg039.rcno, tpisg039.rcln,
				tpisg122.*
			from	tpisg039, tpisg122
			where	tpisg039._index3 = {:cisli205.ityp, :cisli205.idoc}
			and	tpisg039.cprj refers to tpisg122 UNREF CLEAR
			and	tpisg039._compnr = :cisli235.slcp
			and	tpisg122._compnr = :cisli235.slcp
			
			selectdo
				select	tdisg832.bivl, tdisg832.code, tdisg832.ityp,
					tdisg832.cvat, tdisg832.item, tdisg832.pqty,
					tdisg832.pcun, tdisg832.cvat, tdisg832.gdsc,
					tdisg832.code, tdisg832.rcno, tdisg832.rcln,
					tdisg832.sasa.l
				from	tdisg832
				where	tdisg832._index1 = {
							:tpisg039.edrn,
							:tpisg039.rcno,
							:tpisg039.rcln
							}
				and	tdisg832.tobi = tcyesno.yes			
				and	tdisg832._compnr = :cisli235.slcp			
				selectdo
					select	tdisg831.rnso.l, tdisg831.rnsb.l, tdisg831.gstn.s,
						tdisg831.sbno, tdisg831.shdt
					from	tdisg831
					where	tdisg831._index1 = {:tpisg039.edrn}
					and	tdisg831._compnr = :cisli235.slcp	
					selectdo
						if tdisg832.ityp = tpisg.cont.typ.goods then
							goods.or.services = "G"
						else
							goods.or.services = "S"
							tdisg832.pcun = ""
						endif				
					selectempty
						tdisg831.rnso.l = 0
						tdisg831.rnsb.l = 0
						tdisg831.gstn.s = 0
						goods.or.services = ""
					endselect
					
					|* Customer Details
					get.GSTIN.details(
							0,
							tdisg831.rnsb.l,	|* Bill to GSTIN
							gstn.b.no,		|* GST No.
							bill.to.nama,
							bill.to.country,
							bill.to.zipcode,
							bill.to.code,
							bill.to.state,
							bill.to.city,
							bill.to.address
							)
							
					|* Consignee Details
					get.GSTIN.details(
							0,
							tdisg831.gstn.s,	|* Ship To GSTIN(Consignee)
							gstn.s.no,		|* GST No.
							ship.to.nama,
							ship.to.country,
							ship.to.zipcode,
							ship.to.code,
							ship.to.state,
							ship.to.city,
							ship.to.address
							)
					
					|* Own(Isgec) Details
					get.GSTIN.details(
							1,
							tdisg831.rnso.l,	|* Isgec GSTIN(Company)
							gstn.c.no,		|* GST No.
							own.nama,
							own.ccty,
							own.zipcode,
							own.code,
							own.state,
							own.city,
							own.address
							)		
					port.code = ""
					shipping.bill.no = ""
					exc.rate = 0.00
					get.tax.data()
					get.advance.data.and.print.report()
				endselect
			endselect
		endselect
	endselect
	
	switch.to.company(curr.comp)
	
}

|* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

| function read.main.table.export()											|#ISGEC01043.o
function read.main.table.export(domain tdisg.advice i.advice, domain tfgld.date i.date, domain tcorno i.invn)	|#ISGEC01043.n
{	
	export.deemed = "Export Without Payment of GST"
	cisli235.slcp = 200
	
	if curr.comp = LOG.COMP_1 then
		cisli235.slcp = curr.comp
	endif
	
	select 	tdisg831.edrn, tdisg831.rnso.l, tdisg831.rnsb.l, 
		tdisg831.gstn.s, tdisg831.invd, tdisg831.invn,
		tdisg831.sbno, tdisg831.shdt,
		tdisg831.etyp, tdisg831.cind, tdisg831.cinv,				
		tdisg831.cprj, tdisg831.lcno						
	from 	tdisg831
	where  	tdisg831.invd = :i.date							|#ISGEC01043.n
	and	tdisg831.type = tdisg.type.export
	and	tdisg831.etyp = :i.advice						|#ISGEC01043.n
	and	tdisg831.invn = :i.invn						
	selectdo
		if tdisg831.etyp = tdisg.advice.supply then				|#ISGEC01043.n
			inv.date = sprintf$("%D(%02d/%02m/%04Y)", tdisg831.invd)
			store.date = tdisg831.invd
			inv.no = str$(tdisg831.invn)
			
		endif									|#ISGEC01043.sn
		
		if tdisg831.etyp = tdisg.advice.service then
			inv.date = sprintf$("%D(%02d/%02m/%04Y)", tdisg831.cind)
			tdisg831.invd = tdisg831.cind
			inv.no = str$(tdisg831.cinv)
			store.date = tdisg831.cind
		endif					|#ISGEC01043.en
		
		select	tppdm740.ccur:o.project.currency
		from	tppdm740
		where	tppdm740._index1 = {:tdisg831.cprj}
		selectdo
		selectempty
			o.project.currency = ""
		endselect
		
| 		tppdm.dll0600.get.project.currency(tpisg039.cprj, o.project.currency)	
		get.exchange.rate()
	
		select	tdisg842.port:port.code,
			tdisg842.scod:shipping.bill.no
		from	tdisg842
		where	tdisg842._index1 = {:tdisg831.sbno}
		selectdo
		selectempty
			port.code = ""
			shipping.bill.no = ""
		endselect
		
		
		select	tpisg039.cprj, tpisg039.ofbp, tpisg039.nins,
			tpisg039.edrn, tpisg039.rcno, tpisg039.rcln,
			tpisg122.*
		from	tpisg039, tpisg122
		where	tpisg039._index2 = {:tdisg831.edrn}
		and	tpisg039.cprj refers to tpisg122 UNREF CLEAR
		selectdo
			select	tdisg832.bivl, tdisg832.code, tdisg832.ityp,
				tdisg832.cvat, tdisg832.item, tdisg832.pqty,
				tdisg832.pcun, tdisg832.cvat, tdisg832.gdsc,
				tdisg832.code, tdisg832.rcno, tdisg832.rcln,
				tdisg832.sasa.l
			from	tdisg832
			where	tdisg832._index1 = {
						:tpisg039.edrn,
						:tpisg039.rcno,
						:tpisg039.rcln
						}
			and 	tdisg832.bivl > 0.00	
			selectdo
				if tdisg831.etyp = tdisg.advice.service then				|#ISGEC01043.sn
					goods.or.services = "S"
					tdisg832.pcun = ""
				else									|#ISGEC01043.en
					if tdisg832.ityp = tpisg.cont.typ.goods then
						goods.or.services = "G"
					else
						goods.or.services = "S"
						tdisg832.pcun = ""
					endif	
				endif									|#ISGEC01043.n
				
				|* Customer Details
				get.GSTIN.details(
						0,
						tdisg831.rnsb.l,	|* Bill to GSTIN
						gstn.b.no,		|* GST No.
						bill.to.nama,
						bill.to.country,
						bill.to.zipcode,
						bill.to.code,
						bill.to.state,
						bill.to.city,
						bill.to.address1
						)
						
				select	tdisg825.not1, tdisg825.not2, tdisg825.not3, 
					tdisg825.not4	|#ISGEC01043.sn
				from	tdisg825
				where	tdisg825._index1 = {:tdisg831.lcno}
				selectdo
					bill.to.address = 	trim$(tdisg825.not1) & " " &
								trim$(tdisg825.not2) & " " &
								trim$(tdisg825.not3) & " " &
								trim$(tdisg825.not4)
				selectempty
					bill.to.address = ""
				endselect								
				
				if isspace(tdisg831.lcno) then
					select	tpisg036.buyr1, tpisg036.buyr2, tpisg036.buyr3, tpisg036.buyr4
					from	tpisg036
					where	tpisg036._index1 = {:tdisg831.cprj}
					selectdo
						bill.to.address = 	trim$(tpisg036.buyr1) & " " &
									trim$(tpisg036.buyr2) & " " &
									trim$(tpisg036.buyr3) & " " &
									trim$(tpisg036.buyr4)
					selectempty
						bill.to.address = ""
					endselect								
				endif									|#ISGEC01043.en
						
				|* Consignee Details
				get.GSTIN.details(
						0,
						tdisg831.gstn.s,	|* Ship To GSTIN(Consignee)
						gstn.s.no,		|* GST No.
						ship.to.nama,
						ship.to.country,
						ship.to.zipcode,
						ship.to.code,
						ship.to.state,
						ship.to.city,
						ship.to.address
						)
				
				|* Own(Isgec) Details
				get.GSTIN.details(
						1,
						tdisg831.rnso.l,	|* Isgec GSTIN(Company)
						gstn.c.no,		|* GST No.
						own.nama,
						own.ccty,
						own.zipcode,
						own.code,
						own.state,
						own.city,
						own.address
						)
				tdisg832.sasa.l = tdisg832.bivl * exc.rate
				gstn.b.no = ""
				bill.to.city = ""
				bill.to.code = ""
				
	
				get.tax.data()
				ship.to.code = "NA"
				get.advance.data.and.print.report()					|#ISGEC01043.o
			endselect
		endselect
	selectempty
		tdisg831.rnso.l = 0
		tdisg831.rnsb.l = 0
		tdisg831.gstn.s = 0
		goods.or.services = ""
	endselect
}

|* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

function assign.additional.data()
{	
	place.of.supply = ship.to.code
	
	if DOMESTIC.INVOICE then
		invoice.catg = "Tax Invoice"
		exp.inv = "N"
		exp.type = ""
		export.deemed = ""
	endif
	
	if tdisg832.pqty <> 0.00 then
		item_rate = assv.val / tdisg832.pqty
	endif	
	
}

|* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

function align.data.for.printing()
{
	if sel.type = tpproj.type.both then
		select	tfisg417.*
		from	tfisg417
		where	tfisg417._index1 = {:year.f, :mnth.f}
		selectdo
			print.detail()
		endselect
	else
		select	tfisg417.*
		from	tfisg417
		where	tfisg417._index1 = {
					:year.f, 
					:mnth.f, 
					:sel.type
					}
		selectdo
			print.detail()
		endselect
	endif	
}

|* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

function insert.the.data()
{
	domain	tcmcs.long	max.srno
	domain	tcmcs.long	next.srno,rcln
	domain	whinh.shpm	rcno
	
	select	max(tfisg417.srno):max.srno
	from	tfisg417
	where	tfisg417._index1 = {:year.f, :mnth.f}
	and	tfisg417._compnr = :curr.comp
	selectdo
	selectempty
		max.srno = 0
	endselect
	
	next.srno = max.srno + 1
	
	select	tfisg417.*
	from	tfisg417
	where	tfisg417._index1 = {
				:year.f,
				:mnth.f,
				:inv.type,
				:next.srno
				} 
	and	tfisg417._compnr = :curr.comp			
	selectdo
	selectempty
		rcln = 0				|ISGEC01089.sn
		select	a_tfisg417.rcln:rcln,
			a_tfisg417.rcno:rcno
		from	tfisg417 a_tfisg417
		where	a_tfisg417._index1 = {
				:year.f,
				:mnth.f,
				:inv.type
				} 
		and	a_tfisg417.isup = :inv.no		
		and	a_tfisg417._compnr = :curr.comp	
		selectdo
		endselect
		if rcln = tdisg832.rcln and rcno = tdisg832.rcno then	
			tfisg417._compnr = curr.comp
			tfisg417.year = year.f
			tfisg417.mnth = mnth.f
			tfisg417.type = inv.type
			tfisg417.srno = next.srno
			tfisg417.invd = store.date
			tfisg417.isup = inv.no
			tfisg417.cnam = bill.to.nama
			tfisg417.fovn.b = ""	
			tfisg417.posu = ""
			tfisg417.icat = ""
			tfisg417.idsc = "" 
			tfisg417.code = ""
			tfisg417.iqty = 0
			tfisg417.unit = ""
			tfisg417.irat = 0.00
			tfisg417.disc = 0.00
			tfisg417.itax = 0.00
			tfisg417.igrt = 0.00
			tfisg417.igmt = 0.00
			tfisg417.cgrt = 0.00
			tfisg417.cgmt = 0.00
			tfisg417.sgrt = 0.00
			tfisg417.sgmt = 0.00
			tfisg417.csrt = 0.00
			tfisg417.csmt = 0.00
			tfisg417.bosu = ""
			tfisg417.rcma = ""
			tfisg417.ngst = ""
			tfisg417.oidt = 0
			tfisg417.oinv = ""
			tfisg417.gste = ""
			tfisg417.ogst = ""
			tfisg417.adat = adv.doc.date
			tfisg417.adoc = adv.doc
			tfisg417.aamt = adv.amth
			tfisg417.exfl = export.deemed
			tfisg417.bprt = port.code
			tfisg417.cbln = shipping.bill.no
			tfisg417.bldt = 0
			tfisg417.gtds = ""
			tfisg417.fovn.c = ""
			tfisg417.sadd = ""
			tfisg417.scit = ""
			tfisg417.sste = ""
			tfisg417.cdac = ""
			tfisg417.rcno = tdisg832.rcno
			tfisg417.rcln = tdisg832.rcln
			tfisg417.edrn = ""
			tfisg417.cprj = ""
			tfisg417.bpid = ""
			tfisg417.ccur = ""
			tfisg417.exrt = 0.00
			tfisg417.bval = 0.00
			tfisg417.frez = tcyesno.no
			tfisg417.appr = tcyesno.no
			
			db.insert(ttfisg417, db.skip.dupl, e)
			
			if e = 0 then
				commit.transaction()
			else
				abort.transaction()
			endif							|ISGEC01089.en
		else
			tfisg417._compnr = curr.comp
			tfisg417.year = year.f
			tfisg417.mnth = mnth.f
			tfisg417.type = inv.type
			tfisg417.srno = next.srno
			tfisg417.invd = store.date
			tfisg417.isup = inv.no
			tfisg417.cnam = bill.to.nama
			tfisg417.fovn.b = gstn.b.no	
			tfisg417.posu = place.of.supply
			tfisg417.icat = goods.or.services
			tfisg417.idsc = tdisg832.gdsc 
			tfisg417.code = tdisg832.code
			tfisg417.iqty = tdisg832.pqty
			tfisg417.unit = tdisg832.pcun
			tfisg417.irat = item_rate
			tfisg417.disc = 0.00
			tfisg417.itax = assv.val
			tfisg417.igrt = igst.rate
			tfisg417.igmt = igst.amnt
			tfisg417.cgrt = cgst.rate
			tfisg417.cgmt = cgst.amnt
			tfisg417.sgrt = sgst.rate
			tfisg417.sgmt = sgst.amnt
			tfisg417.csrt = cess.rate
			tfisg417.csmt = cess.amnt
			tfisg417.bosu = "N"
			tfisg417.rcma = "N"
			tfisg417.ngst = ""
			tfisg417.oidt = 0
			tfisg417.oinv = ""
			tfisg417.gste = ""
			tfisg417.ogst = ""
			tfisg417.adat = adv.doc.date
			tfisg417.adoc = adv.doc
			tfisg417.aamt = adv.amth
			tfisg417.exfl = export.deemed
			tfisg417.bprt = port.code
			tfisg417.cbln = shipping.bill.no
			tfisg417.bldt = tdisg831.shdt
			tfisg417.gtds = ""
			tfisg417.fovn.c = gstn.c.no
			tfisg417.sadd = bill.to.address
			tfisg417.scit = bill.to.city
			tfisg417.sste = bill.to.code
			tfisg417.cdac = ""
			tfisg417.rcno = tdisg832.rcno
			tfisg417.rcln = tdisg832.rcln
			tfisg417.edrn = tpisg039.edrn
			tfisg417.cprj = tpisg039.cprj
			tfisg417.bpid = tpisg039.ofbp
			tfisg417.ccur = o.project.currency
			tfisg417.exrt = exc.rate
			tfisg417.bval = tdisg832.bivl
			tfisg417.frez = tcyesno.no
			tfisg417.appr = tcyesno.no
			
			db.insert(ttfisg417, db.skip.dupl, e)
			
			if e = 0 then
				commit.transaction()
			else
				abort.transaction()
			endif	
		endif	
	endselect
}

|* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

function print.detail()
{
						|#ISGECMOD011.sn
	|* Added Trim$() & quoted.string() function
	|* in below code
						|#ISGECMOD011.en
	line = ""

	line = concat$("	",
		sprintf$("%D(%02d/%02m/%04Y)", tfisg417.invd),		|1			
		sprintf$("%s", trim$(tfisg417.isup)),			|2
		sprintf$("%s", trim$(tfisg417.cnam)),			|3
		sprintf$("%s", trim$(tfisg417.fovn.b)),		|4
		sprintf$("%s", trim$(tfisg417.posu)),			|5
		sprintf$("%s", trim$(tfisg417.icat)),			|6
		sprintf$("%s", quoted.string(tfisg417.idsc)),		|7
		sprintf$("%s", trim$(tfisg417.code)),			|8	
		sprintf$("%f", tfisg417.iqty),				|9
		sprintf$("%s", trim$(tfisg417.unit)),			|10
		sprintf$("%f", round(tfisg417.irat, 2, 0)),		|11
		sprintf$("%f", tfisg417.disc),				|12
		sprintf$("%f", round(tfisg417.itax, 2, 0)),		|13
		sprintf$("%f", round(tfisg417.cgrt, 2, 0)),		|14
		sprintf$("%f", round(tfisg417.cgmt, 2, 0)),		|15
		sprintf$("%f", round(tfisg417.sgrt, 2, 0)),		|16
		sprintf$("%f", round(tfisg417.sgmt, 2, 0)),		|17
		sprintf$("%f", round(tfisg417.igrt, 2, 0)),		|18
		sprintf$("%f", round(tfisg417.igmt, 2, 0)),		|19
		sprintf$("%f", round(tfisg417.csrt, 2, 0)),		|20
		sprintf$("%f", round(tfisg417.csmt, 2, 0)),		|21
		sprintf$("%s", trim$(tfisg417.bosu)),			|22
		sprintf$("%s", trim$(tfisg417.rcma)),			|23
		sprintf$("%s", trim$(tfisg417.ngst)),			|24
		sprintf$("%D(%02d/%02m/%04Y)", tfisg417.oidt),		|25
		sprintf$("%s", trim$(tfisg417.oinv)),			|26
		sprintf$("%s", trim$(tfisg417.gste)),			|27
		sprintf$("%s", trim$(tfisg417.ogst)),			|28
		sprintf$("%D(%02d/%02m/%04Y)", tfisg417.adat),		|29
		sprintf$("%s", trim$(tfisg417.adoc)),			|30
		sprintf$("%f", round(abs(tfisg417.aamt), 2, 0)),	|31
		sprintf$("%s", trim$(tfisg417.exfl)),			|32
		sprintf$("%s", trim$(tfisg417.bprt)),			|33				|#ISGEC01043.n
		sprintf$("%s", trim$(tfisg417.cbln)),			|34
		sprintf$("%D(%02d/%02m/%04Y)", tfisg417.bldt),		|35
		sprintf$("%s", trim$(tfisg417.gtds)),			|36
		sprintf$("%s", trim$(tfisg417.fovn.c)),		|37
		sprintf$("%s", trim$(tfisg417.sadd)),			|38
		sprintf$("%s", trim$(tfisg417.scit)),			|39
		sprintf$("%s", trim$(tfisg417.sste)),			|40
		sprintf$("%s", trim$(tfisg417.cdac)),			|41
		sprintf$("%s", trim$(tfisg417.rcno)),			|42
		sprintf$("%d", tfisg417.rcln),				|43
		sprintf$("%s", trim$(tfisg417.edrn)),			|44
		sprintf$("%s", trim$(tfisg417.cprj)),			|45
		sprintf$("%s", trim$(tfisg417.bpid)),			|46
		sprintf$("%s", trim$(tfisg417.ccur)),			|47			|#ISGEC01043.sn
		sprintf$("%f", tfisg417.exrt),				|48			
		sprintf$("%f", tfisg417.bval),				|49			|#ISGEC01043.en	
		sprintf$(""))						|Last

		line = strip$(shiftl$(line))
		
		seq.puts(line, stat.fp)
}

|* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

function get.GSTIN.details
		(
			domain	tcsrnb		i.reg.flag,	|* Flag(if BP GSTIN Seq. or Own GSTIN Seq.)
			domain	tctax.seqn.l	i.seqn.l,	|* Tax Sequence No.
		ref	domain	tctax.txnb.l	o.txnb.l,	|* Registration No.	
		ref	domain	tcnama		o.bp.nama,
		ref	domain	tcdsca		o.ccty.dsca,
		ref	domain	tcpstc		o.pstc,		|* Zip (Postal) Code
		ref	domain	tcmcs.str2	o.scod,		|* Statutory State Code
		ref	domain	tcdsca		o.cste.dsca,	|* State
		ref	domain	tcdsca		o.city.dsca,	|* City
		ref	domain	tcmcs.str215m	o.addr.desc	|* Address
		)
{	
	domain	tccom.cadr	temp.cadr
	
	o.addr.desc = ""
	
	if i.reg.flag = 0 then
		select	tctax400.cadr.l:temp.cadr,
			tctax400.fovn:o.txnb.l
		from	tctax400
		where	tctax400._index3 = {:i.seqn.l}
		selectdo
		selectempty
			temp.cadr = ""
			o.txnb.l = ""
		endselect	
	else
		tctax.dll9140.get.own.reg.number.based.on.seq(i.seqn.l, o.txnb.l)
		tcisgdll0100.get.financial.company.address.CDF.from.seqn(i.seqn.l, temp.cadr)
	endif
		
	select	tccom130.nama:o.bp.nama,
		tccom130.ln01,
		tccom130.ln02,
		tccom130.ln03,
		tccom130.ln04,
		tccom130.ln05,
		tccom130.ln06,
		tccom130.ccty,
		tccom130.cste,
		tccom130.ccit,
		tccom130.pstc:o.pstc,
		tcmcs010.dsca:o.ccty.dsca,
		tcmcs143.dsca:o.cste.dsca,
		tccom139.dsca:o.city.dsca
	from	tccom130, tcmcs010, tcmcs143, tccom139
	where	tccom130._index1 = {:temp.cadr}
	and	tccom130.ccty refers to tcmcs010 UNREF CLEAR
	and	tccom130.cmba refers to tcmcs143 UNREF CLEAR
	and	tccom130.cmbb refers to tccom139 UNREF CLEAR
	selectdo
		o.addr.desc = 	trim$(tccom130.ln01) & " " &
				trim$(tccom130.ln02) & " " &
				trim$(tccom130.ln03) & " " &
				trim$(tccom130.ln04) & " " &
				trim$(tccom130.ln05) & " " &
				trim$(tccom130.ln06)
		
		tcisgdll0100.get.statutory.state.code(	tccom130.ccty, 
							tccom130.cste, 
							o.scod)	|* Statutory State Code		
				
	selectempty
		o.bp.nama = ""
		o.pstc = ""
		o.ccty.dsca = ""
		o.cste.dsca = ""
		o.city.dsca = ""
		o.scod = ""
		o.addr.desc = ""
	endselect
}

|* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

function get.advance.data.and.print.report()
{
	domain	tfgld.ttyp	o.tfgld106.ctyp
	domain	tfgld.docn	o.tfgld106.cinv
	
	select	tfacr200.tdoc, tfacr200.docn, tfacr200.amth(1):adv.amth
	from	tfacr200
	where	tfacr200._index1 = {:cisli205.ityp, :cisli205.idoc}
	and	tfacr200.tdoc = ADV.TYPE
	selectdo
		select	tfgld106.ctyp:o.tfgld106.ctyp,
			tfgld106.cinv:o.tfgld106.cinv
		from	tfgld106
		where	tfgld106._index1 = {:tfacr200.tdoc, :tfacr200.docn}
		and	tfgld106.tcsh = tfcmg.tcsh.ssgn
		as set with 1 rows
		selectdo
		selectempty
			o.tfgld106.ctyp = ""
			o.tfgld106.cinv = 0
		endselect
		
		adv.doc = o.tfgld106.ctyp & " " & str$(o.tfgld106.cinv)
		
		adv.doc.date = tfgld.dll5106.finalized.transaction.get.document.date(	cisli205.sfcp,
											o.tfgld106.ctyp,
											o.tfgld106.cinv)
		assign.additional.data()
		insert.the.data()
	selectempty
		adv.doc = ""
		adv.doc.date = 0
		adv.amth = 0.00
		assign.additional.data()
		insert.the.data()
		
	endselect								
}

|* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

function get.tax.data()
{
	domain	tcamnt		line.tax.amount.array(1, 1)	based
	domain	tcamnt		line.base.amount.array(1, 1)	based
	domain	tccvat		line.tax.code.array(1, 1)	based
	domain	tctax.indt.l	o.line.indirect.tax.array(1, 1)	based
	domain	tctax.indt.l	i.duty.type.array(1, 1)		based
	domain	tcyesno		expensed.tax(1, 1)		based
	domain	tcmcs.s250m	o.comb.output.set(1)		based
	domain	tcpvat		o.tax.rates(1,1)		based
	domain	tcamnt		i.duties.array(1,1)		based
	domain tctax.seqn 	o.maximum.sequence.number
	domain tcamnt 		o.claimable.tax.amount
	domain tcamnt 		o.non.claimable.tax.amount
	domain tcamnt 		o.total.tax.amount
	domain tcamnt 		o.sales.tax
	domain tcmcs.s250m 	o.error.msg mb
	domain	tcamnt		tmp.rate
	
	domain	tctax.indt.l	o.indt.l
	domain	tcpvat		temp.pvat
	
	assv.val = tdisg832.sasa.l
	
	cgst.amnt = 0.00
	sgst.amnt = 0.00
	igst.amnt = 0.00
	
	cgst.rate = 0.00
	sgst.rate = 0.00
	igst.rate = 0.00
	
	select	tppin020.ccty
	from	tppin020
	where	tppin020._index1 = {:tpisg039.cprj, :tpisg039.ofbp, :tpisg039.nins}
	and	tppin020._compnr = :cisli235.slcp		
	selectdo
	selectempty
		tppin020.ccty = OWN.COUNTRY	|* India for Default
	endselect
		
	select 	tppdm740.rtyp, tppdm740.ccur
	from	tppdm740
	where	tppdm740._index1 = {:tpisg039.cprj, :tpisg039.ofbp}
	and	tppdm740._compnr = :cisli235.slcp
	as set with 1 rows
	selectdo
	selectempty
		tppdm740.rtyp = ""
		tppdm740.ccur = ""
	endselect
	
	
	tctax.dll9141.determine.aggregate.tax.amounts.per.line( 
					tppin020.ccty,				| domain tcccty i.tax.country, 
					tdisg832.cvat,				| domain tccvat i.aggregate.tax.code, 
					utc.num(),				| domain tcdate i.tax.date, 
					assv.val,				| domain tcamnt i.order.line.price, 
					assv.val,				| domain tcamnt i.customs.value, 
					assv.val,				| domain tcamnt i.market.retail.price, 
					0.00,					| domain tcamnt i.retail.sales.price, 
					0.00,					| domain tcamnt i.tariff.price, 
					tppdm740.ccur,				| domain tcccur i.price.currency, 
					utc.num(),				| domain tcdate i.currency.rate.date, 
					tppdm740.rtyp,				| domain tcrtyp i.currency.exchange.rate.type, 
					assv.val,				| domain tcpric i.asv.excise, 
					assv.val,				| domain tcpric i.asv.vat, 
					assv.val,				| domain tcpric i.asv.service.tax, 
					assv.val,				| domain tcpric i.asv.gst, |#ISGEC017006.n
					utc.num(),				| domain tcdate i.ship.or.receive.date, 
					tcyesno.no,				| domain tcyesno i.as.is.sales, 
					tcyesno.no,				| domain tcyesno i.yesno.flag, 
					i.duty.type.array,			| ref domain tctax.indt.l i.duty.type.array(,), 
					i.duties.array,				| ref domain tcamnt i.duties.array(,), 
					o.tax.rates,				| ref domain tcpvat o.tax.rates(,), 
					o.maximum.sequence.number,		| ref domain tctax.seqn o.maximum.sequence.number, 
					line.base.amount.array,			| ref domain tcamnt o.line.base.amount.array(,), 
					line.tax.amount.array,			| ref domain tcamnt o.line.tax.amount.array(,), 
					line.tax.code.array,			| ref domain tccvat o.line.tax.code.array(,) fixed, 
					o.line.indirect.tax.array,		| ref domain tctax.indt.l o.line.indirect.tax.array(,), 
					expensed.tax,				| ref domain tcyesno o.expensed.tax(,), 
					o.claimable.tax.amount,			| ref domain tcamnt o.claimable.tax.amount, 
					o.non.claimable.tax.amount,		| ref domain tcamnt o.non.claimable.tax.amount, 
					o.total.tax.amount,			| ref domain tcamnt o.total.tax.amount, 
					o.sales.tax,				| ref domain tcamnt o.sales.tax, 
					o.comb.output.set,			| ref domain tcmcs.s250m o.comb.output.set() fixed mb, 
					o.error.msg)
					
	select	tctax941.cvat
	from	tctax941
	where	tctax941._index1 = {:tppin020.ccty, :tdisg832.cvat}
	and	tctax941.amor = tctax.amor.l.not.appl
	selectdo
		if not tcmcs.dll0036.get.indirect.tax.l(	tppin020.ccty, 
								tctax941.cvat,
								o.indt.l) then	|* Indirect Tax Type	
			
		endif
		
		on case o.indt.l
		case	tctax.indt.l.cgst:
			cgst.rate = cgst.rate + o.tax.rates(tctax941.layr,tctax941.seqn)
			cgst.amnt = cgst.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)
			
			break
			
		case	tctax.indt.l.sgst:
		case	tctax.indt.l.utgst:
			sgst.rate = sgst.rate + o.tax.rates(tctax941.layr,tctax941.seqn)
			sgst.amnt = sgst.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)
			
			break	
			
		case	tctax.indt.l.igst:
			igst.rate = igst.rate + o.tax.rates(tctax941.layr,tctax941.seqn)
			igst.amnt = igst.amnt + line.tax.amount.array(tctax941.layr,tctax941.seqn)
			break	
		endcase
	endselect
		
	tot.amnt = assv.val + cgst.amnt + sgst.amnt + igst.amnt					
}

|* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

function convert.dates
		(
			domain	tfgld.date	i.date,
			domain	tcmcs.long 	i.hh,
			domain	tcmcs.long 	i.mm,
			domain	tcmcs.long 	i.ss,
		ref	domain 	tcdate		o.date
		)

{
	domain	tcmcs.long yr, mnth, day
	
	yr = 0
	mnth = 0
	day = 0
	
	num.to.date(i.date, yr, mnth, day)
	
	o.date = date.to.utc(yr, mnth, day, i.hh , i.mm, i.ss)
}

|* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

function make.dates()
{
	domain	tfgld.prod	no.days

	on case mnth.f
		
		case 1:
		case 3:
		case 5:
		case 7:
		case 8:
		case 10:
		case 12:
			no.days = 31
		break
		
		case 4:
		case 6:
		case 9:
		case 11:
			no.days = 30
		break
		
		default:
			if (year.f\4) = 0 then
				no.days = 29
			else
				no.days = 28
			endif
		break
			
		endcase
		
	
	idat.f = date.to.num(year.f, mnth.f, 1)
	idat.t = date.to.num(year.f, mnth.f, no.days)
}

|* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

function long month.not.freezed()
{
	domain	tcyesno	bind.freeze
	
	select	tfisg417.frez:bind.freeze
	from	tfisg417
	where	tfisg417._index1 = {:year.f, :mnth.f}
	as set with 1 rows
	selectdo
	selectempty
		bind.freeze = empty
	endselect
	
	if bind.freeze <> tcyesno.yes then
		return(1)
	endif
	
	return(0)
}

|* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

function long GSTR.filed.for.month()
{
	domain	tcyesno	bind.appr
	
	select	tfisg417.appr:bind.appr
	from	tfisg417
	where	tfisg417._index1 = {:year.f, :mnth.f}
	as set with 1 rows
	selectdo
	selectempty
		bind.appr = empty
	endselect
	
	if bind.appr = tcyesno.yes then
		return(1)
	endif
	
	return(0)
}

|* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

function get.exchange.rate()
{
	domain tcmcs.long 	yr, mnth, day
	domain tcdate		o.eff.date
	domain tcratf		o.ratf
	domain tcyesno		o.yes.no.flag
	
	if tdisg831.etyp = tdisg.advice.service then
		num.to.date(tdisg831.invd, yr, mnth, day)
		o.eff.date = date.to.utc(yr, mnth, day, 23 , 59, 59)

		if not tcmcs.dll0108.determine.currency.rate.and.rate.factor(	get.compnr(),
										"INR",
										o.project.currency,
										o.eff.date,		|* Effectivity Date
										"SAL",			|* Rate Type
										exc.rate,		|* Curency Rate
										o.ratf,
										o.yes.no.flag)	 then	|* Express in Base Currecy
		endif
	else								
		select	tdisg878.exrt:exc.rate
		from	tdisg878
		where	tdisg878._index1 = {:o.project.currency}
		and	tdisg878.efdt <= :tdisg831.invd
		and	tdisg878.appr = tcyesno.yes 
		selectdo
		selectempty
			exc.rate = 1
		endselect
	endif
}

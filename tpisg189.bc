|******************************************************************************
|* tpisg189  0  VRC B61U a7 isg 
|* DAL for tpisg189
|* RAvi Kumar
|* 19-12-03 [09:31]
|******************************************************************************
|* Script Type: DAL
|******************************************************************************

	table	ttpisg189
	table	ttccom001
	table	ttpisg088
	
	#include <bic_dal2>
	extern	domain	tfgld.sess	calling.prog
		domain	tclogn		log.name
		
function extern long before.open.object.set()
{
| 	define.field.dependencies()
	log.name = LOGNAME$
	get.var(pid, "prog.name$", calling.prog)
	return(0)
}

| function define.field.dependencies()
| {
| 	dal.field.depends.on("tpisg189.ccdt", HOOK_IS_APPLICABLE, "tpisg189.ccod", "tpisg189.rvsn", "tpisg189.ccdt", "tpisg189.addc", "tpisg189.addi")
| 	dal.field.depends.on("tpisg189.addc", HOOK_IS_APPLICABLE, "tpisg189.ccod", "tpisg189.rvsn", "tpisg189.ccdt", "tpisg189.addc", "tpisg189.addi")
| 	dal.field.depends.on("tpisg189.addi", HOOK_IS_APPLICABLE, "tpisg189.ccod", "tpisg189.rvsn", "tpisg189.ccdt", "tpisg189.addc", "tpisg189.addi")
| }

function extern long before.new.object()
{
	tpisg189.rvsn = "1.0"
	return(0)
}

function extern long after.get.object(long type)
{
	long flag.found
	
	flag.found = 0
	
	select	tccom001.emno
	from	tccom001
	where	tccom001._index4 = {:log.name}
	as set with 1 rows
	selectdo
	selectempty
		tccom001.emno = ""
	endselect
	
	if calling.prog = "tpisg1589m000" then
		if logname$ <> "3530" and logname$ <> "9583" and logname$ <> "0592" and logname$ <> "5185" and logname$ <> "0330" and logname$ <> "10344" then 
			select	tpisg088.cprj
			from	tpisg088
			where	tpisg088._index1 = {:tpisg189.ccod}
			selectdo
				select	tpisg046.cprj
				from	tpisg046
				where	tpisg046._index1 = {:tpisg088.cprj, :tccom001.emno}
				as set with 1 rows
				selectdo
					flag.found = 1
				selectempty
					if flag.found = 0 then
						select	tpisg047.cprj
						from	tpisg047
						where	tpisg047._index1 = {:tpisg088.cprj, :tccom001.emno}
						as set with 1 rows
						selectdo
							flag.found = 1
						selectempty
							flag.found = 0
						endselect
					endif
				endselect
			selectempty
				return(DALHOOKERROR)
			endselect
			
			if flag.found = 0 then
				return(DALHOOKERROR)
			endif
		endif
	endif
	return(0)
}

function extern long before.save.object(long type)
{
	domain	tcorno	cod.check
	
	if type = DAL_NEW then
		select	tpisg189.ccod:cod.check
		from	tpisg189
		where	tpisg189._index1 = {:tpisg189.ccod}
		as set with 1 rows
		selectdo
			dal.set.error.message("@ Record already Exist")
			return(DALHOOKERROR)
		endselect
		tpisg189.rrby = logname$
		tpisg189.rrdt = utc.num()
	endif
	
| 	if not reason.check.mand() then
| 		dal.set.error.message("@ Reason of Major revision is Mandatory")
| 		return(DALHOOKERROR)
| 	endif
	if tpisg189.rtyp = tpisg.rvsntype.complete then
		if tpisg189.ccdt = tcyesno.no then
			if tpisg189.addc = tcyesno.no then
				if tpisg189.addi = tcyesno.no then
					dal.set.error.message("@ Reason of Complete Revise is Mandatory")
					return(DALHOOKERROR)
				endif
			endif
		endif
	endif
	return(0)
}

function extern boolean tpisg189.ccod.is.valid()
{
	select	tpisg087.ccod
	from	tpisg087
	where	tpisg087._index1 = {:tpisg189.ccod}
	as set with 1 rows
	selectdo
		return(true)
	endselect
	
	return(false)
}

| function extern boolean tpisg189.ccdt.is.applicable()
| {
| 	if not reason.check.mand() then
| 		dal.set.error.message("@ Select any Reason of Major revision")
| 		return(DALHOOKERROR)
| 	endif
| 	return(true)
| }

| function extern boolean tpisg189.addc.is.applicable()
| {
| 	if not reason.check.mand() then
| 		dal.set.error.message("@ Select any Reason of Major revision")
| 		return(DALHOOKERROR)
| 	endif
| 	return(true)
| }

| function extern boolean tpisg189.addi.is.applicable()
| {
| 	if not reason.check.mand() then
| 		dal.set.error.message("@ Select any Reason of Major revision")
| 		return(DALHOOKERROR)
| 	endif
| 	return(true)
| }


| function boolean reason.check.mand()
| {
| 	select	tpisg189.*
| 	from	tpisg189
| 	where	tpisg189._index1 = {:tpisg189.ccod, :tpisg189.rvsn}
| 	and	(tpisg189.ccdt = tcyesno.yes or tpisg189.addc = tcyesno.yes or tpisg189.addi = tcyesno.yes)
| 	as set with 1 rows
| 	selectdo
| 	selectempty
| 		return(false)
| 	endselect
| 	return(true)
| }


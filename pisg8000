|******************************************************************************
|* tdisg800  0  VRC B61U a  stnd
|* Export Parameter
|* baan
|* 12-03-11 [16:50]
|******************************************************************************
|* Script Type: DAL
|******************************************************************************
|* IDENT ISG001018	Somak Mondal	01-05-2014	VRC B61U a7  live
|******************************************************************************
|* IDENT ISG001016	Somak Mondal	01-05-2014	VRC B61U a7  live
|******************************************************************************                                                                               
#include <bic_dal2>

table		ttdisg800


function extern long before.open.object.set()
{
	return(0)
}

function extern long before.save.object(long mode)
{
	if mode = DAL_NEW then
		tdisg800.indt = 0
	endif
	
	
	if mode = DAL_UPDATE and
	   tdisg800.indt <> 0 then
		|* only datetime=0 current records should be updated
		dal.set.error.message("tcmcs009502")
		|* Modifying historical parameter settings is not
		|* allowed
		return(DALHOOKERROR)
	endif
	
	tdisg800.dsca = sprintf$(form.text$("tcmcs009501"),
			(sprintf$("%u002 %U002", utc.num(), utc.num())))
			|* Actual set defined on %s.
	return(0)
}


function extern long after.save.object(long mode)
{
	tdisg800.indt = utc.num()
	tdisg800.dsca = form.text$("tcmcs009505")

	|* insert history record
	db.insert(ttdisg800, db.retry)

	return(0)
}

|************************* FIELD SECTION ****************

function extern boolean tdisg800.seri.is.valid(long mode)
{
	domain tcmcs.s132m mess.tcmcs.dll0050 mb

| 	Expl	: this function checks if a series has been defined for the
| 			specified number group
| 	Pre	: NA
| 	Post	: retuns 0 If the order series is defined and not blocked.
| 			 1 If the order series is not defined
| 			 2 If the order series is blocked.
| 			 3 If the series length does not correspond to
| 				numbergroup
| 			 4 If the series for a numbergroup is full.
| 	Input	: orno.tcmcs.dll0050 -> serie that must be checked
| 		  nrgr.tcmcs.dll0050 -> number group for which the series to
| 					be checked.
| 	Output	: mess.tcmcs.dll0050 -> This argument is filled the message to
| 		  to be displayed when the order series is not defined or
| 		  blocked.



	if tcmcs.dll0050.check.order.series( tdisg800.seri, tdisg800.nrgr,  mess.tcmcs.dll0050) then
		dal.set.error.message(mess.tcmcs.dll0050)
		return(DALHOOKERROR)
	endif
	return(true)
}


function extern boolean tdisg800.csri.is.valid(long mode)
{
	domain tcmcs.s132m mess.tcmcs.dll0050 mb


	if tcmcs.dll0050.check.order.series( tdisg800.csri, tdisg800.cngr,  mess.tcmcs.dll0050) then
		dal.set.error.message(mess.tcmcs.dll0050)
		return(DALHOOKERROR)
	endif
	return(true)
}


function extern boolean tdisg800.bsri.is.valid(long mode)
{
	domain tcmcs.s132m mess.tcmcs.dll0050 mb


	if tcmcs.dll0050.check.order.series( tdisg800.bsri, tdisg800.bngr,  mess.tcmcs.dll0050) then
		dal.set.error.message(mess.tcmcs.dll0050)
		return(DALHOOKERROR)
	endif
	return(true)
}
											|ISG001018.sn
function extern boolean tdisg800.lcsr.is.valid(long mode)
{
	domain tcmcs.s132m mess.tcmcs.dll0050 mb


	if tcmcs.dll0050.check.order.series( tdisg800.lcsr, tdisg800.lcnr,  mess.tcmcs.dll0050) then
		dal.set.error.message(mess.tcmcs.dll0050)
		return(DALHOOKERROR)
	endif
	return(true)
}

function extern boolean tdisg800.bgsr.is.valid(long mode)
{
	domain tcmcs.s132m mess.tcmcs.dll0050 mb


	if tcmcs.dll0050.check.order.series( tdisg800.bgsr, tdisg800.bgnr,  mess.tcmcs.dll0050) then
		dal.set.error.message(mess.tcmcs.dll0050)
		return(DALHOOKERROR)
	endif
	return(true)
}

function extern boolean tdisg800.pgbs.is.valid(long mode)
{
	domain tcmcs.s132m mess.tcmcs.dll0050 mb


	if tcmcs.dll0050.check.order.series( tdisg800.pgbs, tdisg800.pgbr,  mess.tcmcs.dll0050) then
		dal.set.error.message(mess.tcmcs.dll0050)
		return(DALHOOKERROR)
	endif
	return(true)
}
												|ISG001018.en
												|ISG001016.sn
function extern boolean tdisg800.edsr.is.valid(long mode)			
{
	domain tcmcs.s132m mess.tcmcs.dll0050 mb


	if tcmcs.dll0050.check.order.series( tdisg800.edsr, tdisg800.ednr,  mess.tcmcs.dll0050) then
		dal.set.error.message(mess.tcmcs.dll0050)
		return(DALHOOKERROR)
	endif
	return(true)
}												
												|ISG001016.en

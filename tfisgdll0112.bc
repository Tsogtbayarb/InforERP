|******************************************************************************
|* tfisgdll0112  0  VRC B61U a7 isg 
|* DLL for Refresh Total Actual/Budgeted Inflow/Outfliow
|* 10344
|* 19-12-13 [10:28]
|******************************************************************************
|* Script Type: Library
|******************************************************************************
     
	table	ttfisg012
	table	ttcemm030
	table	ttfisg014
	table	ttfisg015
	table	ttpisg087
	table	ttpisg089
	table	ttfisg021
	table	ttfisg022
	table	ttfisg020
	table	ttfisg019

	extern	domain	tcamnt	monthly.inflow, opening.inflow, monthly.outflow, opening.outflow, aios.inflow, aios.outflow, bios.inflow, bios.outflow
		string	error.message(500)
		
	#include <bic_dam>
	
function extern tfisgdll0112.refresh.actual.inflow.outflow(
						domain	tfgld.year	year,
						domain	tpisg.month	mnth,
						domain	tcemm.grid	eunt)
{
	select	tfisg012.hcod,
		tfisg012.eunt,
		tfisg012.aios
	from	tfisg012 for update
	where	tfisg012._index1 = {:year, :mnth, :eunt}
	selectdo
		monthly.inflow = 0
		monthly.outflow = 0
		opening.inflow = 0
		opening.outflow = 0
		aios.inflow = 0
		aios.outflow = 0
		
		if tfisg012.hcod = "H0000001" then
			tfisgdll0112.cal.actual(tfisg012.eunt)
			tfisg012.aios = aios.inflow
		else
			if tfisg012.hcod = "H0000003" then
				tfisgdll0112.cal.actual(tfisg012.eunt)
				tfisg012.aios = aios.outflow
			else
				tfisg012.aios = 0
			endif
		endif
		db.update(ttfisg012, db.retry)
		commit.transaction()
	endselect
}


function extern tfisgdll0112.refresh.budgeted.inflow.outflow(
						domain	tfgld.year	year,
						domain	tpisg.month	mnth,
						domain	tcemm.grid	eunt)
{
	select	tfisg012.hcod,
		tfisg012.eunt,
		tfisg012.bios
	from	tfisg012 for update
	where	tfisg012._index1 = {:year, :mnth, :eunt}
	selectdo
		bios.inflow = 0
		bios.outflow = 0
		if tfisg012.hcod = "H0000001" then
			tfisgdll0112.cal.budget(tfisg012.eunt)
			tfisg012.bios = bios.inflow
		else
			if tfisg012.hcod = "H0000003" then
				tfisgdll0112.cal.budget(tfisg012.eunt)
				tfisg012.bios = bios.outflow
			else
				tfisg012.bios = 0
			endif
		endif
		db.update(ttfisg012, db.retry)
		commit.transaction()
	endselect
}	
	
function extern	tfisgdll0112.cal.actual(domain	tcemm.grid	eunt)
{
| 	select	tcemm030.fcmp
| 	from	tcemm030
| 	where	tcemm030._index1 = {:eunt}
| 	as set with 1 rows
| 	selectdo
| 		select	tfisg014.iamt,
| 			tfisg014.oamt,
| 			tppdm600.cprj
| 		from	tfisg014, tppdm600
| 		where	tppdm600._index7 = {:tcemm030.fcmp}
| 		and	tfisg014.cprj refers to tppdm600
| 		selectdo
| 			monthly.inflow = monthly.inflow + tfisg014.iamt
| 			monthly.outflow = monthly.outflow + tfisg014.oamt
| 		endselect
| 		
| 		select	tfisg015.iamt,
| 			tfisg015.oamt,
| 			tppdm600.cprj
| 		from	tfisg015, tppdm600
| 		where	tppdm600._index7 = {:tcemm030.fcmp}
| 		and	tfisg015.cprj refers to tppdm600
| 		selectdo
| 			opening.inflow = opening.inflow + tfisg015.iamt
| 			opening.outflow = opening.outflow + tfisg015.oamt
| 		endselect
| 	endselect

	select	tpisg087.ccod
	from	tpisg087
	where	tpisg087.lddn = {:eunt}
	selectdo
		select	tfisg014.iamt, 
			tfisg014.oamt
		from	tfisg014
		where	tfisg014.cprj = {:tpisg087.ccod}
		as set with 1 rows
		selectdo
			monthly.inflow = monthly.inflow + tfisg014.iamt
			monthly.outflow = monthly.outflow + tfisg014.oamt
		endselect
		
		select	tfisg015.iamt,
			tfisg015.oamt
		from	tfisg015
		where	tfisg015._index1 = {:tpisg087.ccod}
		as set with 1 rows
		selectdo
			opening.inflow = opening.inflow + tfisg015.iamt
			opening.outflow = opening.outflow + tfisg015.oamt
		endselect
	endselect
	aios.inflow = monthly.inflow + opening.inflow
	aios.outflow = monthly.outflow + opening.outflow
}
	
function extern	tfisgdll0112.cal.budget(domain	tcemm.grid	eunt)
{
	select	tpisg087.ccod
	from	tpisg087
	where	tpisg087.lddn = {:eunt}
	selectdo
		select	tpisg089.amti,
			tpisg089.amto
		from	tpisg089
		where	tpisg089._index1 = {:tpisg087.ccod}
		selectdo
			bios.inflow = bios.inflow + tpisg089.amti
			bios.outflow = bios.outflow + tpisg089.amto
		endselect
	endselect
}


|***************************************** Revision wise **********************************
function extern tfisgdll0112_Update_History(	domain	tfgld.year	year,
						domain	tpisg.month	mnth,
						domain	tcemm.grid	eunt,
						domain	tcorno		rvsn)
{	
	select	tfisg020.*
	from	tfisg020
	where	tfisg020._index1 = {:year, :mnth, :eunt, :rvsn}
	as set with 1 rows
	selectdo
		tfisg021.year = tfisg020.year
		tfisg021.mnth = tfisg020.mnth
		tfisg021.eunt = tfisg020.eunt
		tfisg021.rvsn = tfisg020.rvsn
		tfisg021.rtyp = tfisg020.rtyp
		tfisg021.stat = tfisg020.stat
		tfisg021.rrby = tfisg020.rrby
		tfisg021.rrdt = tfisg020.rrdt
		tfisg021.saby = tfisg020.saby
		tfisg021.sadt = tfisg020.sadt
		tfisg021.raby = tfisg020.raby
		tfisg021.radt = tfisg020.radt
		tfisg021.rmks = tfisg020.rmks
		db.insert(ttfisg021, db.retry)
		
		select	tfisg019.*
		from	tfisg019
		where	tfisg019._index1 = {:year, :mnth, :eunt, :rvsn}
		selectdo
			tfisg022.year = tfisg019.year
			tfisg022.mnth = tfisg019.mnth
			tfisg022.eunt = tfisg019.eunt
			tfisg022.rvsn = tfisg019.rvsn
			tfisg022.hcod = tfisg019.hcod
			tfisg022.amti = tfisg019.amti
			tfisg022.amto = tfisg019.amto
			tfisg022.namt = tfisg019.namt
			tfisg022.cmti = tfisg019.cmti
			tfisg022.cmto = tfisg019.cmto
			tfisg022.cnmt = tfisg019.cnmt
			tfisg022.oami = tfisg019.oami
			tfisg022.oamo = tfisg019.oamo
			tfisg022.oamn = tfisg019.oamn
			tfisg022.rmks = tfisg019.rmks
			db.insert(ttfisg022, db.retry)
		endselect
	endselect
}

function extern tfisgdll0112_Update_Status_Type(	domain	tfgld.year	year,
							domain	tpisg.month	mnth,
							domain	tcemm.grid	eunt,
							domain	tcorno		rvsn,
							domain	tpisg.rvsntype	rtyp,
							domain	tpisg.rvsnstat	stat)
{
	select	tfisg020.rtyp,
		tfisg020.stat
	from	tfisg020 for update
	where	tfisg020._index1 = {:year, :mnth, :eunt, :rvsn}
	as set with 1 rows
	selectdo
		if dal.change.object("tfisg020") = 0 then
			dal.set.field("tfisg020.rtyp", rtyp)
			dal.set.field("tfisg020.stat", stat)
			if dal.save.object("tfisg020") = 0 then
			else
				dal.get.error.message(error.message)
			endif
		endif
	endselect
}

function extern	tfisgdll0112_Increase_rvsn(	domain	tfgld.year	year,
						domain	tpisg.month	mnth,
						domain	tcemm.grid	eunt,
						domain	tcorno		rvsn,
						domain	tcamnt	inrease_value)
{
	domain	tcorno	new_rvsn
	
	new_rvsn = str$(val(rvsn) + inrease_value)
	
	select	tfisg020.rvsn,
		tfisg020.rrby,
		tfisg020.rrdt,
		tfisg020.saby,
		tfisg020.sadt,
		tfisg020.raby,
		tfisg020.radt,
		tfisg020.rmks
	from	tfisg020 for update
	where	tfisg020._index1 = {:year, :mnth, :eunt, :rvsn}
	as set with 1 rows
	selectdo
		if inrease_value = 1 then
			tfisg020.rvsn = str$(round(val(new_rvsn),0,0))
		else
			tfisg020.rvsn = new_rvsn
		endif
		tfisg020.rrby = ""
		tfisg020.rrdt = 0
		tfisg020.saby = ""
		tfisg020.sadt = 0
		tfisg020.raby = ""
		tfisg020.radt = 0
		db.update(ttfisg020, db.retry, e)
	endselect
	
	if e = 0 then
		select	tfisg019.rvsn
		from	tfisg019 for update
		where	tfisg019._index1 = {:year, :mnth, :eunt, :rvsn}
		selectdo
			if inrease_value = 1 then
				tfisg019.rvsn = str$(round(val(new_rvsn),0,0))
			else
				tfisg019.rvsn = new_rvsn
			endif
			db.update(ttfisg019, db.retry, e)
		endselect
	endif
}



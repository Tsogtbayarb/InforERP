|******************************************************************************
|* tfisgdll1402  0  VRC B61U a7 isg 
|* DLL for Purchase Voucher
|* baan
|* 15-03-25 [16:36]
|******************************************************************************
|* Script Type: Library
|******************************************************************************
function extern boolean tfisg.dll1402.get.purchase.project.from.ir.details
				(
					domain	tcncmp		i.ncmp,		|Company
					domain	tfgld.ttyp	i.ttyp,		|Transaction Type
					domain	tfgld.docn	i.docn,		|Document Number
				ref 	domain	tcorno		o.orno,		|Purchase Order
				ref 	domain	tccprj		o.cprj		|Project
				)
{
	o.orno = ""
	o.cprj = ""
	
	select 	tfisg001.orno:o.orno,
		tfisg001.cprj:o.cprj
	from	tfisg001
	where	tfisg001.invt = :i.ttyp
	and	tfisg001.pinv = :i.docn
	and	tfisg001.ncmp = :i.ncmp
	as set with 1 rows
	selectdo
	selectempty
		return(false)
	endselect
	
	return(true)
}



						|#36095.sn
function extern boolean tfisg.dll1402.get.purchase.project.from.ir.details.1
				(
					domain	tcncmp		i.ncmp,		|Company
					domain	tfgld.ttyp	i.ttyp,		|Transaction Type
					domain	tfgld.docn	i.docn,		|Document Number
					domain	tfgld.lino	i.lino,		|Line
					domain	tfgld.ttyp	i.ctyp,		|Correction Type
					domain	tfgld.docn	i.cdoc,		|Correction Document
				ref	domain	tcorno		o.orno,		|Purchase Order
				ref 	domain	tccprj		o.cprj		|Project
				)
{
		domain	tcncmp		o.target.financial.company
		domain	tfgld.ttyp	o.related.transaction.type
		domain	tfgld.docn	o.related.document
		domain	tcmcs.s200m	o.error.message	
		
		
	if tfisg.dll1402.intercompany.document.present(i.ncmp,i.ttyp,i.docn,
				o.target.financial.company,o.related.transaction.type,
				o.related.document,o.error.message) then
		select 	tfisg001.orno:o.orno,
			tfisg001.cprj:o.cprj
		from	tfisg001
		where	tfisg001.invt = :i.ctyp
		and	tfisg001.pinv = :i.cdoc
		and	tfisg001.ncmp = :o.target.financial.company
		as set with 1 rows
		selectdo
		selectempty
			return(false)
		endselect
	else
		select 	tfisg001.orno:o.orno,
			tfisg001.cprj:o.cprj
		from	tfisg001
		where	tfisg001.invt = :i.ctyp
		and	tfisg001.pinv = :i.cdoc
		and	tfisg001.ncmp = :i.ncmp
		as set with 1 rows
		selectdo
		selectempty
			return(false)
		endselect
	endif
	
	return(true)	
}
						|#36095.sn

function extern boolean tfisg.dll1402.get.purchase.project.from.received.purchase.invoice
				(
					domain	tcncmp		i.ncmp,		|Target Company
					domain	tfgld.ttyp	i.ctyp,		|Copied to Type
					domain	tfgld.docn	i.cinv,		|Copied to Document
				ref 	domain	tcorno		o.orno,		|Purchase Order
				ref 	domain	tccprj		o.cprj		|Project
				)
{
	o.orno = ""
	o.cprj = ""
	
	if i.cinv <> 0 then

		select	tfacp100.cdf_cprj:o.cprj,
			tfacp100.cdf_pono:o.orno
		from	tfacp100
		where	tfacp100.ctyp = :i.ctyp
		and	tfacp100.cinv = :i.cinv
		and	tfacp100._compnr = :i.ncmp
		as set with 1 rows
		selectdo
		selectempty
			return(false)
		endselect	
	else
		return(false)
	endif
	return(true)
}

function extern boolean tfisg.dll1402.get.purchase.project.from.advance.request
				(
					domain	tcncmp		i.ncmp,		|Target Company
					domain	tfgld.ttyp	i.ttyp,		|Transaction Type	
					domain	tfgld.docn	i.docn,		|Document Number
					domain	tfgld.lino	i.lino,		|Line Number
				ref 	domain	tcorno		o.orno,		|Purchase Order
				ref 	domain	tccprj		o.cprj		|Project
				)
{
	o.orno = ""
	o.cprj = ""
	
	select 	tfmsl020.orno:o.orno,
		tfmsl020.cprj:o.cprj
	from	tfmsl020
	where	tfmsl020._index4 = {:i.ttyp,:i.docn,:i.lino}
	and	tfmsl020.fcom = :i.ncmp
	as set with 1 rows
	selectdo
	selectempty
		return(false)
	endselect
	
	return(true)
	
}


function extern boolean tfisg.dll1402.get.purchase.project.from.open.item.purchase
				(
					domain	tcncmp		i.ncmp,		|Target Company
					domain	tfgld.ttyp	i.ttyp,		|Transaction Type
					domain	tfgld.docn	i.ninv,		|Document Number
					domain	tfgld.lino	i.line,		|Line Number
				ref 	domain	tcorno		o.orno,		|Purchase Order
				ref 	domain	tccprj		o.cprj		|Project
				)
{
	o.orno = ""
	o.cprj = ""
	
	if i.ninv <> 0 then
		select 	tfacp200.cdf_cprj:o.cprj,
			tfacp200.cdf_prno:o.orno
		from	tfacp200
		where	tfacp200._index1 = {:i.ttyp,:i.ninv,:i.line}
		and	tfacp200.docn = 0
		and	tfacp200._compnr = :i.ncmp
		as set with 1 rows
		selectdo
		selectempty
			return(false)
		endselect
	else
		return(false)
	endif
	
	return(true)
}

function extern boolean tfisg.dll1402.get.anticipated.document.against.clearing.document
				(
					domain	tcncmp		i.ncmp,		|Target Company
					domain	tfgld.ttyp	i.ctyp,		|Clearing Transaction Type
					domain	tfgld.docn	i.cdoc,		|Clearing Document Number
					domain	tfgld.lino	i.clin,		|Clearing Line Number
				ref 	domain	tfgld.ttyp	o.tdoc,		|Transaction Type
				ref 	domain	tfgld.docn	o.pdoc,		|Document For Ant. Pmt.
				ref 	domain	tfgld.lino	o.scom		|Series No. Composed By		
				)
{
	o.tdoc = ""
	o.pdoc = 0
	o.scom = 0
	
	select 	tfcmg112.tdoc:o.tdoc,
		tfcmg112.pdoc:o.pdoc,
		tfcmg112.scom:o.scom
	from	tfcmg112
	where	tfcmg112._index2 = {:i.ctyp,:i.cdoc,:i.clin}
	and	tfcmg112._compnr =:i.ncmp
	as set with 1 rows 
	selectdo
	selectempty
		return(false)
	endselect
	
	return(true)
}



function extern boolean tfisg.dll1402.get.main.document.line.against.linking.document
				(
					domain	tcncmp		i.ncmp,		|Target Company
					domain	tfgld.ttyp	i.ttyp,		|Transaction Type
					domain	tfgld.docn	i.docn,		|Document Number
					domain	tfgld.ttyp	i.ctyp,		|Correction Type
					domain	tfgld.docn	i.cdoc,		|Correction Document
					domain	tccom.bpid	i.bpid,		|Business Partner
				ref 	domain	tfgld.lino	o.line		|Correction Document Line
				)
{
	o.line = 0
	
	select 	tfacp200.line:o.line
	from	tfacp200
	where	tfacp200._index1 = {:i.ctyp,:i.cdoc}
	and	tfacp200.tdoc = :i.ttyp
	and	tfacp200.docn = :i.docn
	and	tfacp200.ifbp = :i.bpid
	and	tfacp200._compnr = :i.ncmp
	as set with 1 rows
	selectdo
	selectempty
		return(false)
	endselect
	
	return(true)
}


function extern boolean tfisg.dll1402.get.project.from.open.item.sales
				(
					domain	tcncmp		i.ncmp,		|Target Company
					domain	tfgld.ttyp	i.ttyp,		|Transaction Type
					domain	tfgld.docn	i.ninv,		|Document
					domain	tfgld.lino	i.line,		|Line
				ref 	domain	tccprj		o.cprj		|Project
				)
{
	select 	tfacr200.cdf_cprj:o.cprj
	from	tfacr200
	where	tfacr200._index1 = {:i.ttyp,:i.ninv,:i.line}
	and	tfacr200.docn = 0
	and	tfacr200._compnr = :i.ncmp
	as set with 1 rows
	selectdo
	selectempty
		return(false)
	endselect
	
	return(true)
}




function extern boolean tfisg.dll1402.get.project.from.sales.invoice.details
				(
					domain	tcncmp		i.ncmp,		|Finance Company
					domain	tcncmp		i.comp,		|Target Company
					domain	tfgld.ttyp	i.ityp,		|Sales Invoice Transaction
					domain	tfgld.docn	i.idoc,		|Sales Invoice Document
				ref	domain	tccprj		o.cprj		|Project
				)
{
	o.cprj = ""
	
	select 	cisli235.cprj:o.cprj
	from	cisli235
	where	cisli235._index2 = {:i.ncmp,:i.ityp,:i.idoc}
	and	cisli235._compnr = :i.comp
	as set with 1 rows
	selectdo
	selectempty
		return(false)
	endselect
	
	return(true)
}

function extern boolean tfisg.dll1402.get.logistic.comp.against.fin.company
				(
					domain	tcncmp		i.ncmp,
				ref 	domain	tcncmp		o.lcmp
				)
{
	select 	tcisg100.lcmp:o.lcmp
	from	tcisg100
	where	tcisg100._index2 = {:i.ncmp}
	as set with 1 rows
	selectdo
	selectempty
		return(false)
	endselect
	
	return(true)
}

function extern boolean tfisg.dll1402.get.commercial.invoice.from.billing.advice
				(
					domain	tcncmp		i.ncmp,		|Financial Company
					domain	tfgld.ttyp	i.ityp,		|Sales Invoice Transaction
					domain	tfgld.docn	i.idoc,		|Sales Invoice Document
				ref 	domain	tcorno		o.cinv		|Commercial Invoice
				)				
{
	domain	tcncmp		o.lcmp
	domain	tcorno		o.edrn
	
	if tfisg.dll1402.get.logistic.comp.against.fin.company(i.ncmp,o.lcmp) then
		select 	tpisg039.edrn:o.edrn
		from	tpisg039
		where	tpisg039._index3 = {:i.ityp,:i.idoc}
		and	tpisg039._compnr = :o.lcmp
		as set with 1 rows
		selectdo
			select 	tdisg831.cinv:o.cinv
			from	tdisg831
			where	tdisg831._index1 = {:o.edrn}
			and	tdisg831._compnr = :o.lcmp
			as set with 1 rows
			selectdo
			selectempty
				return(false)
			endselect
			
		selectempty
			return(false)
		endselect
	else
		return(false)
	endif
	
	return(true)
}


function extern boolean tfisg.dll1402.get.commercial.invoice.from.open.item.purchase
				(
					domain	tcncmp		i.ncmp,		|Target Company
					domain	tfgld.ttyp	i.ttyp,		|Transaction Type
					domain	tfgld.docn	i.ninv,		|Document Number
				ref 	domain	tfacp.isup	o.isup		|Supplier Invoice Number
				)
{
	select 	tfacp200.isup:o.isup
	from	tfacp200
	where	tfacp200._index1 = {:i.ttyp,:i.ninv}
	and	tfacp200.docn = 0
	and	tfacp200._compnr = :i.ncmp
	as set with 1 rows
	selectdo
	selectempty
		return(false)
	endselect
	
	return(true)
}



function extern boolean tfisg.dll1402.get.payment.batch.from.composed.payment
				(
					domain	tcncmp		i.ncmp,		|Target Company
					domain	tfgld.ttyp	i.ttyp,		|Transaction Type
					domain	tfgld.docn	i.docn,		|Document Number
				ref 	domain	tfgld.btno	o.btno,		|Batch Number
				ref 	domain	tfgld.amnt	o.amth		|Amount
				)
{
	o.btno = 0
	o.amth = 0
	
	select 	tfcmg103.btno:o.btno, 
		tfcmg103.amth(1):o.amth
	from	tfcmg103
	where	tfcmg103.ttyp = :i.ttyp
	and	tfcmg103.docn = :i.docn
	and	tfcmg103._compnr = :i.ncmp
	as set with 1 rows
	selectdo
	selectempty
		return(false)
	endselect
	
	return(true)
}


function extern boolean tfisg.dll1402.get.payment.batch.from.composed.direct.debit
				(
					domain	tcncmp		i.ncmp,		|Target Company
					domain	tfgld.ttyp	i.ttyp,		|Transaction Type
					domain	tfgld.docn	i.docn,		|Document Number
				ref 	domain	tfgld.btno	o.btno,		|Batch Number
				ref 	domain	tfgld.amnt	o.amth		|Amount
				)
{
	o.btno = 0
	o.amth = 0
	
	select 	tfcmg403.btno:o.btno, 
		tfcmg403.amth(1):o.amth
	from	tfcmg403
	where	tfcmg403.ttyp = :i.ttyp
	and	tfcmg403.docn = :i.docn
	and	tfcmg403._compnr = :i.ncmp
	as set with 1 rows
	selectdo
	selectempty
		return(false)
	endselect
	return(true)
}


function extern boolean tfisg.dll1402.get.cheque.number
				(
					domain	tcncmp		i.ncmp,	|Target Company
					domain	tfgld.ttyp	i.ttyp,	|Transaction Type
					domain	tfgld.docn	i.docn,	|Document Number
				ref 	domain	tfcmg.cheq	o.cheq	|Cheque Number
				)
{
	o.cheq = ""
	
	select tfcmg100.cheq:o.cheq
	from	tfcmg100
	where 	tfcmg100.typo = :i.ttyp
	and	tfcmg100.doco = :i.docn
	and	tfcmg100._compnr = :i.ncmp
	as set with 1 rows 
	selectdo
	selectempty
		select tfcmg100.cheq:o.cheq
		from	tfcmg100
		where 	tfcmg100.ttyp = :i.ttyp
		and	tfcmg100.docn = :i.docn
		and	tfcmg100._compnr = :i.ncmp
		selectdo
		selectempty
			return(false)
		endselect
	endselect
	
	return(true)

}



function extern boolean tfisg.dll1402.get.sales.invoice.from.ir
				(
					domain	tcncmp		i.ncmp,	|Target Company
					domain	tfgld.ttyp	i.ttyp,	|Transaction Type
					domain	tfgld.docn	i.docn,	|Document Number
				ref 	domain	tfgld.ttyp	o.ityp,
				ref 	domain	tfgld.docn	o.idoc
					
				)
{
| 	select	tfisg001.ityp:o.ityp,
| 		tfisg001.idoc:o.idoc
| 	from	tfacp100,tfisg001
| 	where	tfacp100._index4 = {:i.ttyp,:i.docn}
| 	and 	tfacp100.ninv refers to tfisg001
| 	and	tfacp100._compnr = :i.ncmp
| 	and	tfisg001._compnr = :i.ncmp
| 	as set with 1 rows
| 	selectdo
| 	selectempty
| 		return(false)
| 	endselect
	
	domain	tfgld.docn	o.tfacp100.ninv
	
	domain	whinh.pksp	o.tfacp251.shpm
	
	
	select 	tfacp251.shpm:o.tfacp251.shpm
	from	tfacp251
	where	tfacp251._index1 = {:i.ncmp,:i.ttyp,:i.docn}
	and	tfacp251._compnr = :i.ncmp
	as set with 1 rows
	selectdo
		o.tfacp100.ninv = lval(o.tfacp251.shpm)
		
| 	select	tfacp100.ninv:o.tfacp100.ninv
| 	from	tfacp100,tfisg001
| 	where	tfacp100._index4 = {:i.ttyp,:i.docn}
| 	and	tfacp100._compnr = :i.ncmp
| 	as set with 1 rows
| 	selectdo
		select 	tfisg001.ityp:o.ityp,
			tfisg001.idoc:o.idoc
		from	tfisg001
		where	tfisg001._index1 = {:o.tfacp100.ninv}
		and	tfisg001.ncmp = :i.ncmp
		as set with 1 rows
		selectdo
		selectempty
			o.ityp = ""
			o.idoc = 0
		endselect
			
	selectempty
		return(false)
	endselect
	return(true)
}


function extern boolean tfisg.dll1402.get.bill.of.ladding
				(
					domain	tcncmp		i.ncmp,		|Financial Company
					domain	tfgld.ttyp	i.ityp,		|Sales Invoice Transaction
					domain	tfgld.docn	i.idoc,		|Sales Invoice Document
				ref	domain	tcdsca		o.biln
				)
{	
	domain	tcncmp		o.lcmp
	domain	tcorno		o.bold
	domain	tcorno		o.cinv
	
	if tfisg.dll1402.get.commercial.invoice.from.billing.advice(
		i.ncmp,i.ityp,i.idoc,o.cinv) then
			if tfisg.dll1402.get.logistic.comp.against.fin.company(i.ncmp,o.lcmp) then
				select 	tdisg831.bold:o.bold
				from	tdisg831
				where	tdisg831._index3 = {:o.cinv}
				and	tdisg831._compnr = :o.lcmp
				as set with 1 rows
				selectdo
					select	tdisg839.biln:o.biln
					from	tdisg839 
					where	tdisg839._index1 = {:o.bold}
					and	tdisg839._compnr = :o.lcmp
					as set with 1 rows
					selectdo
					selectempty
						return(false)
					endselect
				selectempty
					return(false)
				endselect
			else
				return(false)
			endif
	else
		return(false)
		
	endif
	return(true)
}


function extern domain tcnama tfisg.dll1402.get.batch.created.by
				(
					domain	tcncmp		i.ncmp,
					domain	tfgld.year	i.year,
					domain	tfgld.btno	i.btno
				)
{
	domain	tfgld.user	o.user
	
	o.user = ""
		
	select	tfgld100.user:o.user
	from	tfgld100
	where	tfgld100._index1 = {:i.year,:i.btno}
	and	tfgld100._compnr = :i.ncmp
	selectdo
		return(tfisg.dll1402.get.user.nama(o.user))
	endselect
		
	return("")
	
			
		
}
						|#35780.sn

function extern domain tcnama tfisg.dll1402.get.batch.created.by.1
				(
					domain	tcncmp		i.ncmp,
					domain	tfgld.ttyp	i.ttyp,
					domain	tfgld.docn	i.docn,
					domain	tfgld.year	i.year,
					domain	tfgld.btno	i.btno
				)
{
	domain	tcncmp		o.target.financial.company
	domain	tfgld.ttyp	o.related.transaction.type
	domain	tfgld.docn	o.related.document
	domain	tcmcs.s200m	o.error.message	
	
	domain	tfgld.user	o.user
	domain	tfgld.year	o.tfgld018.year
	domain	tfgld.btno	o.tfgld018.btno
	
	o.user = ""	
		
	if tfisg.dll1402.intercompany.document.present(i.ncmp,i.ttyp,i.docn,
				o.target.financial.company,o.related.transaction.type,
				o.related.document,o.error.message) then
		select 	tfgld018.year:o.tfgld018.year,
			tfgld018.btno:o.tfgld018.btno
		from	tfgld018
		where	tfgld018._index1 = {:i.ttyp,:i.docn}
		and	tfgld018._compnr = :o.target.financial.company
		as set with 1 rows
		selectdo
			select	tfgld100.user:o.user
			from	tfgld100
			where	tfgld100._index1 = {:o.tfgld018.year,:o.tfgld018.btno}
			and	tfgld100._compnr = :o.target.financial.company
			selectdo
				return(tfisg.dll1402.get.user.nama(o.user))
			endselect
		selectempty
			return("")
		endselect
	else
		select	tfgld100.user:o.user
		from	tfgld100
		where	tfgld100._index1 = {:i.year,:i.btno}
		and	tfgld100._compnr = :i.ncmp
		selectdo
			return(tfisg.dll1402.get.user.nama(o.user))
		endselect		
	endif
	
	return("")			
}
						|#35780.en


function extern domain tcnama tfisg.dll1402.get.batch.finilized
				(
					domain	tcncmp		i.ncmp,
					domain	tfgld.year	i.year,
					domain	tfgld.trun	i.trun
				)
{
	domain	tfgld.user	o.user
| 	
	o.user = ""

	select tfgld109.trus:o.user
	from	tfgld109
	where	tfgld109._index1 = {:i.year,:i.trun}
	as set with 1 rows
	selectdo
		return(tfisg.dll1402.get.user.nama(o.user))
	endselect
	return("")
}

function extern domain tcnama tfisg.dll1402.get.user.nama
				(
					domain	tfgld.user	i.user
				)
{
	domain	tcnama	o.nama
	
	o.nama = ""
	
	select 	ttaad200.name:o.nama
	from	ttaad200
	where	ttaad200._index1 = {:i.user}
	and	ttaad200._compnr = 0
	as set with 1 rows
	selectdo
	endselect

	return(o.nama)
}

function extern boolean tfisg.dll1402.intercompany.document.present(
		domain	tcncmp		i.source.financial.company,
		domain	tfgld.ttyp	i.source.transaction.type,
		domain	tfgld.docn	i.source.document,
	ref	domain	tcncmp		o.target.financial.company,
	ref	domain	tfgld.ttyp	o.related.transaction.type,
	ref	domain	tfgld.docn	o.related.document,
	ref	domain	tcmcs.s200m	o.error.message)
{
	DLLUsage
	Expl	: This function checks if a given inter-company document
		  is present.
	Pre	: N.A.
	Post	: N.A.
	Input	: i.source.financial.company	- Source Financial Company
		  i.source.transaction.type	- Source Transaction Type
		  i.source.document		- Source Document
		  i.target.financial.company	- Target Financial Company

	Output	: o.related.transaction.type	- Related Transaction Type
		 				  to use in Target Company
		  o.related.document		- Related Document to use
		 				  in Target Company
		  o.error.message		- Error message if intercompany
		 				  document is not present

	Return	: true				- Intercompany document present
		  false				- Intercompany document not
		  				  present
	EndDLLUsage

	|***********************************************************************
	|* Initialize output arguments
	|***********************************************************************
	o.related.transaction.type	= ""
	o.related.document		= 0
	o.error.message			= ""

	select	tfgld112.typt:o.related.transaction.type,
		tfgld112.doct:o.related.document,
		tfgld112.comt:o.target.financial.company
	from	tfgld112
	where	tfgld112._index1 = {	:i.source.financial.company,
					:i.source.transaction.type,
					:i.source.document}
	as set with 1 rows
	selectdo
		return(true)
	endselect

	o.error.message = sprintf$(form.text$("tfglds1067"),
					i.source.transaction.type,
					i.source.document,
								|#COMPEXT.so
|					edit$(i.target.financial.company,"999"))
								|#COMPEXT.eo
								|#COMPEXT.sn
					edit$(o.target.financial.company,"C"))
								|#COMPEXT.en
	|* Related document number not found for document %s %d,
	|* target company %s
	return(false)
}


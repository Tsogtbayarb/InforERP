|******************************************************************************
|* tdisg4401m400  0  VRC B61U a7 isg 
|* Print PO wise Delivery Status
|* Installation user             
|* 2014-10-28
|******************************************************************************
|* Main table tdpur401 Purchase Order Lines, Form Type 4
|******************************************************************************
|* ISGECDV001164, IT0205, Arjit Gupta, VRC B61U a7 live, Dt. 17-11-2014
|* Add a Column of Consumption Percentage and Filter Record on Basis input
|* consumption Percentage.
|*
|* ISGECDV001192, IT0205, Arjit Gupta, VRC B61U a7 live, Dt. 01-12-2014
|* Add a Column Balance Basic Amount.
|*
|* ISGEC01072, IT0375, Sandhyarani, Dt. 03-03-2015, VRC B61U a7 live
|* Modification on Order date
|****************************** declaration section ***************************
declaration:

	table	ttdpur401 | Purchase Order Lines
	table	ttctax941
	table	ttcmcs036
	table	ttclct200
	table	ttdpur400
	table	ttcibd001
	table	ttcmcs052
	table	ttdpur406
	table	ttcmcs032
	table	ttfacp935
	table	twhisg312
	table	twhinh310
	table	twhinh312
	table	twhinh936
	table	ttfisg001
	table	ttfisg002
	table	ttfacp100
	table	ttccom100				
	table	ttccom001
	table	ttdmsl400					|#ISGEC01072.n	

	|*************** Form Variables *******************
	extern	domain	tcorno		orno.f    fixed
	extern	domain	tcorno		orno.t    fixed
	extern	domain	tcorno		rcno.f
	extern	domain	tcorno		rcno.t
	extern	domain	tccom.bpid	bpid.f
	extern	domain	tccom.bpid	bpid.t
	extern	domain	tcdate		odat.f
	extern	domain	tcdate		odat.t
	extern	domain	tcdate		ddta.f
	extern	domain	tcdate		ddta.t
	extern	domain	tcdate		rcdt.f
	extern	domain	tcdate		rcdt.t
	extern	domain	tccprj		cprj.f
	extern	domain	tccprj		cprj.t
	extern	domain	tppdm.cspa	cspa.f
	extern	domain	tppdm.cspa	cspa.t
	extern	domain	tcemno		emno.f
	extern	domain	tcemno		emno.t
	extern	domain	tcperc		cnsm.perc			|#ISGECDV001164.n
	|*************** File Handling Variables *******************
	string		str(300), err.file(100), file.name(100), line3(2000), line4(2000)
	long		ret2, stat.fp
	|************** Script Variables ******************
		domain	tcdate		v.odat.f
		domain	tcdate		v.odat.t
		domain	tcdate		v.ddta.f
		domain	tcdate		v.ddta.t
		domain	tcdate		v.rcdt.f
		domain	tcdate		v.rcdt.t
		domain	tcbool		receipt.found
		domain	tcbool		fwhinh936.found		
		domain	tcamnt		tmp.oval
		domain	tcamnt		scr.bval	
		domain	tcamnt		scr.rcst	
		domain	tcamnt		scr.rexc	
		domain	tcamnt		scr.rstx	
		domain	tcamnt		scr.roch
		domain	tcqiv1		scr.oqnt		
		domain	tcamnt		scr.obsc		
		domain	tcamnt		scr.oexc		
		domain	tcamnt		scr.ocst		
		domain	tcamnt		scr.ostx		
		domain	tcamnt		scr.lcst		
		domain	tcamnt		scr.rbal	
	|************** File Utilization Variables *************************
	extern	domain	tcorno		rep.orno	
	extern	domain	tcdate		rep.odat	
	extern	domain	tcpric		rep.oprc	
	extern	domain	tcamnt		rep.obsc	
	extern	domain	tcamnt		rep.oexc	
	extern	domain	tcamnt		rep.ocst	
	extern	domain	tcamnt		rep.ostx	
	extern	domain	tcamnt		rep.lcst	
	extern	domain	tcamnt		rep.ogrs
	extern	domain	tcamnt		rep.rbsc	
	extern	domain	tcamnt		rep.rexc	
	extern	domain	tcamnt		rep.rcst	
	extern	domain	tcamnt		rep.rstx	
	extern	domain	tcamnt		rep.roch	
	extern	domain	tcamnt		rep.rgrs
	extern	domain	tcmcs.str10	rep.rstt	
	extern	domain	tcamnt		rep.bval
	extern	domain	tccom.bpid	rep.otbp		
	extern	domain	tcnama		rep.nama		
	extern	domain	tcemno		rep.buyr		
	extern	domain	tcnama		rep.bynm		
	extern	domain	tcdate		rep.ddta		
	extern	domain	tcmcs.str15	rep.hdst		
	extern	domain	tcamnt		rep.bbal			|#ISGECDV001192.n
	extern	domain	tcamnt		rep.rbal			
	extern	domain	tcperc		rep.cnpr		|#ISGECDV001164.n	

|*************** Include **************
#include<bic_desktop>
|****************************** program section ********************************


|****************************** group section **********************************

group.1:
init.group:
   get.screen.defaults()

|****************************** choice section ********************************
choice.cont.process:
on.choice:
	generate.file()

|****************************** field section *********************************
field.orno.f:
when.field.changes:
	orno.t = orno.f

field.odat.f:
when.field.changes:
	odat.t = odat.f
	
field.rcdt.f:
when.field.changes:
	rcdt.t = rcdt.f	

field.emno.f:
when.field.changes:
	emno.t = emno.f

field.ddta.f:
when.field.changes:
	ddta.t = ddta.f

field.rcno.f:
when.field.changes:
	rcno.t = rcno.f

field.bpid.f:
when.field.changes:
	bpid.t = bpid.f

|****************************** function section ******************************
functions:

function generate.file()
{
	open.file()
	generate.header()
	read.main.table()
	close.file()
}

function read.main.table()
{
	rcdt.f = 0
	rcdt.t = utc.num()
	set.fmin(rcno.f)
	set.fmax(rcno.t)
	get.date.utc(odat.f, 00, 00, 00, v.odat.f)
	get.date.utc(odat.t, 23, 59, 59, v.odat.t)
	get.date.utc(ddta.f, 00, 00, 00, v.ddta.f)
	get.date.utc(ddta.t, 23, 59, 59, v.ddta.t)
	get.date.utc(rcdt.f, 00, 00, 00, v.rcdt.f)
	get.date.utc(rcdt.t, 23, 59, 59, v.rcdt.t)
	
	select	tdpur400.orno, tdpur400.odat, tdpur400.otbp,	
		tdpur400.hdst, tdpur400.ccon, tdpur400.ddat,
		tccom100.nama, tccom001.nama
	from	tdpur400, tccom100, tccom001
	where	tdpur400._index1 inrange {:orno.f}	and	{:orno.t}
	and	tdpur400.odat inrange :v.odat.f		and	:v.odat.t
	and	tdpur400.ddat inrange :v.ddta.f		and	:v.ddta.t	
	and	tdpur400._index2 inrange {:bpid.f}	and	{:bpid.t}	
	and	tdpur400._index4 inrange {:emno.f}	and	{:emno.t}
	and	tdpur400.otbp refers to tccom100 Unref Clear
	and	tdpur400.ccon refers to tccom001 Unref Clear
	selectdo
		Initialize_Variable()
		get.po.date()					|#ISGEC01072.n				
		rep.orno = tdpur400.orno	
| 		rep.odat = tdpur400.odat			|#ISGEC01072.o
		rep.otbp = tdpur400.otbp		
		rep.nama = tccom100.nama		
		rep.buyr = tdpur400.ccon		
		rep.bynm = tccom001.nama		
		rep.ddta = tdpur400.ddat
		rep.hdst = enum.descr$("tdpur.hdst", tdpur400.hdst)
		
		select	tdpur401.*								
		from	tdpur401		
		where	tdpur401._index1 = {:tdpur400.orno}
		and	tdpur401.ddta inrange :v.ddta.f		and	:v.ddta.t
		and	tdpur401.oltp in (tdgen.oltp.total, tdgen.oltp.orderline)
		selectdo
			receipt.found = false
			scr.oqnt = 0		
			scr.oexc = 0		
			scr.ocst = 0		
			scr.ostx = 0		
			scr.lcst = 0
			scr.rbal = 0
			scr.oqnt = tdpur401.qoor + get.additional.qty.from.401(tdpur401.orno, tdpur401.pono)
			if	tdpur401.qoor <> 0	then
				rep.oprc = (tdpur401.oamt / tdpur401.qoor)
			else
				rep.oprc = 0
			endif	
			rep.obsc = rep.obsc + (scr.oqnt * rep.oprc)
			populate.tax.amounts()
			Get_Landed_Cost(tdpur401.orno, tdpur401.pono)
			rep.oexc = rep.oexc + scr.oexc
			rep.ocst = rep.ocst + scr.ocst
			rep.ostx = rep.ostx + scr.ostx
			rep.lcst = rep.lcst + scr.lcst
			rep.ogrs = rep.obsc + rep.oexc + rep.ocst + rep.ostx + rep.lcst
			tmp.oval = 0				
			tmp.oval = (scr.oqnt * rep.oprc) + scr.oexc + scr.ocst + scr.ostx + scr.lcst			
			if	not Get_Warehouse_Receipt(tdpur401.orno, tdpur401.pono, rcno.f, rcno.t,
							v.rcdt.f, v.rcdt.t, tdpur401.qoor, tdpur401.pric, tdpur401.ccty,
							tdpur401.cvat, tdpur401.tasv.l, tdpur401.tase.l, tdpur401.tass.l,		
							tmp.oval)	then		
			endif				
			if	not Get_Purchase_Receipt(tdpur401.orno, tdpur401.pono, rcno.f, rcno.t,
						v.rcdt.f, v.rcdt.t, tdpur401.qoor, tdpur401.pric, tdpur401.ccty,
						tdpur401.cvat, tdpur401.tasv.l, tdpur401.tase.l, tdpur401.tass.l,		
						tmp.oval)	then
			endif
			
			if	not receipt.found then
				scr.rbal = (scr.oqnt * rep.oprc) + scr.oexc + scr.ocst + scr.ostx + scr.lcst
			endif
			rep.rbal = rep.rbal + scr.rbal
		endselect
		rep.bbal = rep.obsc - rep.rbsc		|#ISGECDV001192.n
								|#ISGECDV001164.sn
		if	rep.ogrs = rep.rbal	then
			rep.cnpr = 0
		else
			if	rep.ogrs <> 0	then
				rep.cnpr = ((rep.ogrs - rep.rbal)/rep.ogrs) * 100
			endif
		endif
		if	cnsm.perc <= rep.cnpr	then
								|#ISGECDV001164.en
			print.detail()
		endif						|#ISGECDV001164.n	
	endselect	
}

function domain tcqiv1	 get.additional.qty.from.401(
				domain	tcorno	in.orno,
				domain	tcpono	in.pono
					)
{
	domain	tcqiv1 ord.qty, app.qty, diff.qty, bac.qty
	ord.qty = 0
	app.qty = 0
	bac.qty = 0
	diff.qty = 0
	select	q_tdpur401.qoor:ord.qty,
		q_tdpur401.qiap:app.qty,
		q_tdpur401.qibo:bac.qty
	from	tdpur401 q_tdpur401
	where	q_tdpur401._index1 = {:in.orno, :in.pono}
	and	q_tdpur401.oltp = tdgen.oltp.total
	selectdo
		diff.qty = diff.qty + bac.qty - (ord.qty - app.qty)
	endselect
	return(diff.qty)
}

function populate.tax.amounts()
{
	domain	tcamnt		line.tax.amount.array(1, 1)	based
	domain	tcamnt		line.base.amount.array(1, 1)	based
	domain	tccvat		line.tax.code.array(1, 1)	based
	domain	tctax.indt.l	o.line.indirect.tax.array(1, 1)	based
	domain	tctax.indt.l	i.duty.type.array(1, 1)		based
	domain	tcyesno		expensed.tax(1, 1)		based
	domain	tcmcs.s250m	o.comb.output.set(1)		based
	domain	tcpvat		o.tax.rates(1,1)		based
	domain	tcamnt		i.duties.array(1,1)		based
	domain tctax.seqn 	o.maximum.sequence.number
	domain tcamnt 		o.claimable.tax.amount
	domain tcamnt 		o.non.claimable.tax.amount
	domain tcamnt 		o.total.tax.amount
	domain tcamnt 		o.sales.tax
	domain tcmcs.s250m 	o.error.msg mb
	
	
	tctax.dll9141.determine.aggregate.tax.amounts.per.line( 
						tdpur401.ccty,				| domain tcccty i.tax.country, 
						tdpur401.cvat,				| domain tccvat i.aggregate.tax.code, 
						tdpur401.odat,				| domain tcdate i.tax.date, 
						tdpur401.oamt,				| domain tcamnt i.order.line.price, 
						tdpur401.cuva,				| domain tcamnt i.customs.value, 
						tdpur401.mrpi.l,			| domain tcamnt i.market.retail.price, 
						0.00,					| domain tcamnt i.retail.sales.price, 
						0.00,					| domain tcamnt i.tariff.price, 
						tdpur400.ccur,				| domain tcccur i.price.currency, 
						tdpur400.ratd,				| domain tcdate i.currency.rate.date, 
						tdpur400.ratt,				| domain tcrtyp i.currency.exchange.rate.type, 
						tdpur401.tase.l,			| domain tcpric i.asv.excise, 
						tdpur401.tasv.l,			| domain tcpric i.asv.vat, 
						tdpur401.tass.l,			| domain tcpric i.asv.service.tax, 
						tdpur401.ddta,				| domain tcdate i.ship.or.receive.date, 
						tcyesno.no,				| domain tcyesno i.as.is.sales, 
						tcyesno.no,				| domain tcyesno i.yesno.flag, 
						i.duty.type.array,			| ref domain tctax.indt.l i.duty.type.array(,), 
						i.duties.array,				| ref domain tcamnt i.duties.array(,), 
						o.tax.rates,				| ref domain tcpvat o.tax.rates(,), 
						o.maximum.sequence.number,		| ref domain tctax.seqn o.maximum.sequence.number, 
						line.base.amount.array,			| ref domain tcamnt o.line.base.amount.array(,), 
						line.tax.amount.array,			| ref domain tcamnt o.line.tax.amount.array(,), 
						line.tax.code.array,			| ref domain tccvat o.line.tax.code.array(,) fixed, 
						o.line.indirect.tax.array,		| ref domain tctax.indt.l o.line.indirect.tax.array(,), 
						expensed.tax,				| ref domain tcyesno o.expensed.tax(,), 
						o.claimable.tax.amount,			| ref domain tcamnt o.claimable.tax.amount, 
						o.non.claimable.tax.amount,		| ref domain tcamnt o.non.claimable.tax.amount, 
						o.total.tax.amount,			| ref domain tcamnt o.total.tax.amount, 
						o.sales.tax,				| ref domain tcamnt o.sales.tax, 
						o.comb.output.set,			| ref domain tcmcs.s250m o.comb.output.set() fixed mb, 
						o.error.msg)				| ref domain tcmcs.s250m o.error.msg mb )
	select	tctax941.*,tcmcs036.*
	from	tctax941,tcmcs036
	where	tctax941._index1 = {:tdpur401.ccty, :tdpur401.cvat}
	and	tctax941.type = 20		|tctax.type.l.tax
	and	tctax941.cmbb refers to tcmcs036
	selectdo
		on case tcmcs036.indt.l
			case	tctax.indt.l.bed:
			case	tctax.indt.l.service:			
			case	tctax.indt.l.aed:	
			case	tctax.indt.l.sed:	
			case	tctax.indt.l.e.cess.excise:	
			case	tctax.indt.l.e.cess.service:			
			case	tctax.indt.l.hse.cess.excise:
			case	tctax.indt.l.hse.cess.servic:		
				scr.oexc = scr.oexc + line.tax.amount.array(tctax941.layr,tctax941.seqn)
				break
			case	tctax.indt.l.lst:	
			case	tctax.indt.l.cst:	
			case	tctax.indt.l.vat:	
			case	tctax.indt.l.n.a:
				scr.ocst = scr.ocst + line.tax.amount.array(tctax941.layr,tctax941.seqn)
				break	
			default:
				scr.ostx = scr.ostx + line.tax.amount.array(tctax941.layr,tctax941.seqn)
		endcase
	endselect
}

function Get_Landed_Cost(domain tcorno		im.orno,
			domain	tcpono		im.pono)
{
	domain	tcpono	tmp.sqnb
	string	tmp.borf(5)
	
	select	a_tdpur401.sqnb:tmp.sqnb 
	from	tdpur401 a_tdpur401
	where	a_tdpur401._index1 = {:im.orno, :im.pono}
	and	a_tdpur401.oltp in (2,3,4)
	selectdo
		tmp.borf = str$(im.pono)&"/"&str$(tmp.sqnb)
		select	tclct200.* from tclct200
		where	tclct200._index1 = {2}
		and	tclct200.bobj = :im.orno
		and	tclct200.borf = :tmp.borf
		order by tclct200._index1
		selectdo
			scr.lcst = scr.lcst + tclct200.lcam
		endselect
	endselect	
}

function boolean Get_Warehouse_Receipt(
			domain	tcorno		in.orno,
			domain	tcpono		in.pono,
			domain	tcorno		in.rcno.f,
			domain	tcorno		in.rcno.t,
			domain	tcdate		in.rcdt.f,
			domain	tcdate		in.rcdt.t,
			domain	tcqiv1		in.qoor,
			domain	tcpric		in.pric,
			domain	tcccty		in.ccty,
			domain	tccvat		in.cvat,
			domain	tcamnt		in.tasv.l,		
			domain	tcamnt		in.tase.l,			
			domain	tcamnt		in.tass.l,			
		ref	domain	tcamnt		in.ogrs				
					)
{
	domain	tcpvat	r.eces.per
	domain	tcpvat	r.cess.per
	domain	tcpvat	r.cst.per
	domain	tcpvat	r.ser.per
	domain	tcpvat	r.sces.per
	domain	tcamnt	v.eces
	domain	tcamnt	v.cess
	domain	tcamnt	v.serv
	domain	tcamnt	v.sces
	domain	tcamnt	tot.rcpt		
	domain	tcamnt	tot.ogrs		
	
	tot.rcpt = 0				
	tot.ogrs = in.ogrs				
	select	whinh312.*, whinh310.stat, whinh310.dino
	from	whinh312, whinh310
	where	whinh312._index1 inrange {:in.rcno.f}	and	{:in.rcno.t}
	and	whinh312._index4 = {whinh.oorg.purchase, :in.orno, :in.pono}
	and	whinh312.ardt inrange :in.rcdt.f	and	:in.rcdt.t
	and	whinh312.rcno refers to whinh310
	selectdo
		rep.rbsc = rep.rbsc + (in.pric * whinh312.qrcr)
		scr.bval = 0
		select	whisg312.inrq
		from	whisg312
		where	whisg312._index1 = {:whinh312.rcno, :whinh312.rcln}
		selectdo
			get.billing.value(whisg312.inrq, whinh312.rcno, whinh312.rcln, scr.bval)
		endselect
		rep.bval = rep.bval + scr.bval
			
		r.eces.per = 0
		r.cess.per = 0
		r.cst.per = 0
		r.ser.per = 0
		r.sces.per = 0
		v.eces = 0
		v.cess = 0
		v.serv = 0
		v.sces = 0
		fwhinh936.found = false	
		scr.roch = 0
		scr.rexc = 0	
		scr.rcst = 0	
		scr.rstx = 0
			
		Calculate_Other_Charge(whinh312.rcno, whinh312.rcln, scr.roch)
		rep.roch = rep.roch + scr.roch
		on case whinh310.stat
			case whinh.rhst.confirmed:
				rep.rstt = "Confirmed"
				get.tax.from.tfacp935(whinh312.rcno, whinh312.rcln, whinh312.orno, whinh312.pono,
								whinh312.seqn, scr.rexc, scr.rcst, scr.rstx)	
				break
			case whinh.rhst.open:
				fwhinh936.found = false		
				rep.rstt = "Open"
				get.tax.from.whinh936(whinh312.rcno, whinh312.rcln, scr.rexc, scr.rcst, scr.rstx)
				if	fwhinh936.found = false		then		
					get.tax.rate(in.ccty, in.cvat, whinh312.ardt, r.eces.per, r.cess.per, r.cst.per, r.ser.per, r.sces.per)
					|Excise
					if	in.qoor <> 0	then
						in.tase.l = (in.tase.l/in.qoor)* whinh312.qrcr
						in.tass.l = (in.tass.l/in.qoor)* whinh312.qrcr
					else
						in.tase.l = 0
						in.tass.l = 0
					endif
					v.eces =  ((in.tase.l * r.eces.per) / 100 )			
					v.cess = ((v.eces * r.cess.per) / 100) 
					scr.rexc = scr.rexc + (v.eces + v.cess)
					|Service
					v.serv = ((in.tass.l * r.ser.per) / 100)		
					v.sces = ((v.serv * r.sces.per) / 100)
					scr.rstx = scr.rstx + (v.serv + v.sces)
					|CST / VAT				
					if	in.qoor <> 0	then
						in.tasv.l = (in.tasv.l/in.qoor)* whinh312.qrcr
					else
						in.tasv.l = 0
					endif	
					scr.rcst = ((in.tasv.l + scr.rexc) * r.cst.per) / 100
				endif	
				break	
			default:
				rep.rstt = "Open"
				get.tax.rate(in.ccty, in.cvat, whinh312.ardt, r.eces.per, r.cess.per, r.cst.per, r.ser.per, r.sces.per)
				|Excise
				if	in.qoor <> 0	then
					in.tase.l = (in.tase.l/in.qoor)* whinh312.qrcr
					in.tass.l = (in.tass.l/in.qoor)* whinh312.qrcr
				else
					in.tase.l = 0
					in.tass.l = 0
				endif
				v.eces =  ((in.tase.l * r.eces.per) / 100 )		
				v.cess = ((v.eces * r.cess.per) / 100) 
				scr.rexc = scr.rexc + (v.eces + v.cess)
				|Service
				v.serv = ((in.tass.l * r.ser.per) / 100)		
				v.sces = ((v.serv * r.sces.per) / 100)
				scr.rstx = scr.rstx + (v.serv + v.sces)
				|CST / VAT				
				if	in.qoor <> 0	then
					in.tasv.l = (in.tasv.l/in.qoor)* whinh312.qrcr
				else
					in.tasv.l = 0
				endif	
				scr.rcst = ((in.tasv.l + scr.rexc) * r.cst.per) / 100
		ENDCASE
		rep.rexc = rep.rexc + scr.rexc	
		rep.rcst = rep.rcst + scr.rcst	
		rep.rstx = rep.rstx + scr.rstx	
		rep.rgrs = (rep.rbsc + rep.roch + rep.rexc + rep.rcst + rep.rstx)
		
		tot.rcpt = tot.rcpt + (in.pric * whinh312.qrcr) + scr.roch + scr.rexc + scr.rcst + scr.rstx
		
		scr.rbal = tot.ogrs -  tot.rcpt	
		in.ogrs = scr.rbal
				
		receipt.found = true
	selectempty
		return(false)	
	endselect
	return(true)
}

function boolean Get_Purchase_Receipt(
			domain	tcorno		in.orno,
			domain	tcpono		in.pono,
			domain	tcorno		in.rcno.f,
			domain	tcorno		in.rcno.t,
			domain	tcdate		in.rcdt.f,
			domain	tcdate		in.rcdt.t,
			domain	tcqiv1		in.qoor,
			domain	tcpric		in.pric,
			domain	tcccty		in.ccty,
			domain	tccvat		in.cvat,
			domain	tcamnt		in.tasv.l,		
			domain	tcamnt		in.tase.l,			
			domain	tcamnt		in.tass.l,			
		ref	domain	tcamnt		in.ogrs				
					)
{
	domain	tcpvat	r.eces.per
	domain	tcpvat	r.cess.per
	domain	tcpvat	r.vat.per
	domain	tcpvat	r.ser.per
	domain	tcpvat	r.sces.per
	domain	tcamnt	v.eces
	domain	tcamnt	v.cess
	domain	tcamnt	v.serv
	domain	tcamnt	v.sces
	domain	tcamnt	tot.rcpt		
	domain	tcamnt	tot.ogrs		
	
	tot.rcpt = 0			
	tot.ogrs = in.ogrs			
	select	tdpur406.*
	from	tdpur406
	where	tdpur406._index2 inrange {:in.rcno.f} and	{:in.rcno.t}
	and	tdpur406._index1 = {:in.orno, :in.pono}
	and	tdpur406.ddte inrange	:in.rcdt.f	and	:in.rcdt.t
	and	tdpur406.rcno not in (select	whinh312.rcno	from	whinh312
					where	whinh312._index4 = {whinh.oorg.purchase, :in.orno, :in.pono}
					and	whinh312._index1 inrange {:in.rcno.f} and	{:in.rcno.t}
					and	whinh312.ardt inrange	:in.rcdt.f	and	:in.rcdt.t)
	selectdo	
		scr.bval = 0	
		select	whisg312.inrq
		from	whisg312
		where	whisg312._index1 = {:tdpur406.rcno, :tdpur406.rseq}
		selectdo
			get.billing.value(whisg312.inrq, tdpur406.rcno, tdpur406.rseq, scr.bval)
		endselect
		rep.bval = rep.bval + scr.bval
		v.eces = 0
		v.cess = 0
		r.eces.per = 0
		r.cess.per = 0
		r.vat.per = 0
		r.ser.per = 0
		r.sces.per = 0
		v.serv = 0
		v.sces = 0
		
		rep.rbsc = rep.rbsc + (tdpur406.qiap * in.pric)
		
		scr.roch = 0
		scr.rexc = 0
		scr.rcst = 0
		scr.rstx = 0
		Calculate_Other_Charge(tdpur406.rcno, tdpur406.rseq, scr.roch)
		rep.roch = rep.roch + scr.roch
		
		if	tdpur406.conf = tcyesno.yes	then
			rep.rstt = "Confirmed"
			get.tax.from.tfacp935(tdpur406.rcno, tdpur406.rseq, tdpur406.orno,
						tdpur406.pono, tdpur406.sqnb, scr.rexc, scr.rcst, scr.rstx)	
		else
			rep.rstt = "Open"
			get.tax.rate(in.ccty, in.cvat, tdpur406.ddte, r.eces.per, r.cess.per, r.vat.per, r.ser.per, r.sces.per)
			if	in.qoor <> 0	then
				in.tase.l = (in.tase.l/in.qoor)* tdpur406.qiap
				in.tass.l = (in.tass.l/in.qoor)* tdpur406.qiap
			else
				in.tase.l = 0
				in.tass.l = 0
			endif
			v.eces =  ( (in.tase.l * r.eces.per) / 100 )		
			v.cess = (v.eces * r.cess.per) / 100 
			scr.rexc = scr.rexc + (v.eces + v.cess)

			v.serv = ((in.tass.l * r.ser.per) /100)			
			v.sces = ((v.serv * r.sces.per) /100)
			scr.rstx = scr.rstx + (v.serv + v.sces)
					
			if	in.qoor <> 0	then
				in.tasv.l = (in.tasv.l/in.qoor) * tdpur406.qiap
			else
				in.tasv.l = 0
			endif	
			scr.rcst = ((in.tasv.l + scr.rexc) * r.vat.per) / 100
		endif	
		rep.rexc = rep.rexc + scr.rexc
		rep.rcst = rep.rcst + scr.rcst
		rep.rstx = rep.rstx + scr.rstx
		
		rep.rgrs = (rep.rbsc + rep.rexc + rep.rcst + rep.roch + rep.rstx)
		tot.rcpt = tot.rcpt + (tdpur406.qiap * in.pric) + scr.roch + scr.rexc + scr.rcst + scr.rstx
		
		scr.rbal = tot.ogrs -  tot.rcpt
		in.ogrs = scr.rbal	
		receipt.found = true	
	selectempty
		return(false)
	endselect
	
	return(true)
}

function Calculate_Other_Charge(
			domain	tcorno	i.rcno,
			domain	tcpono	i.rcln,
		ref	domain	tcamnt	tmp.roch	
				)
{
	domain tcamnt	additional.amount
	
	tmp.roch = 0
	select 	tclct200.lcos, sum(tclct200.lcam):additional.amount
	from	tclct200
	where	tclct200._index1 = {21, 100, :i.rcno, :1}
	group by tclct200.lcos
	wherebind(1, str$(i.rcln))
	selectdo
		tmp.roch = tmp.roch + additional.amount
	endselect
}

function get.tax.rate(
			domain	tcccty	i.ccty, 
			domain	tccvat	i.cvat,
			domain	tcdate	i.ddte,
		ref	domain	tcpvat	o.eces.per,
		ref	domain	tcpvat	o.cess.per,
		ref	domain	tcpvat	o.vat.per,
		ref	domain	tcpvat	o.serv.per,
		ref	domain	tcpvat	o.sces.per
			)
{
	o.eces.per = 0 
	o.cess.per = 0
	o.vat.per = 0
	o.serv.per = 0
	o.sces.per = 0
	
	select 	tctax941.ccty, tctax941.cvat
	from 	tctax941
	where	tctax941._index1={:i.ccty, :i.cvat}
	and	tctax941.type = {20}
	selectdo
		select 	tcmcs036.ccty, tcmcs036.cvat, tcmcs036.indt.l
		from 	tcmcs036
		where	tcmcs036._index1 = {:tctax941.ccty, :tctax941.cvat}
		selectdo
			on case	tcmcs036.indt.l
				case tctax.indt.l.bed:
					o.eces.per = get.rate.from.tcmcs032(tcmcs036.ccty, tcmcs036.cvat, i.ddte)
					break
				case tctax.indt.l.service:
					o.serv.per = get.rate.from.tcmcs032(tcmcs036.ccty, tcmcs036.cvat, i.ddte)
					break	
				case tctax.indt.l.e.cess.excise:	
				case tctax.indt.l.hse.cess.excise:	
					o.cess.per = o.cess.per + get.rate.from.tcmcs032(tcmcs036.ccty, tcmcs036.cvat, i.ddte)
					break
				case tctax.indt.l.e.cess.service:	
				case tctax.indt.l.hse.cess.servic:
					o.sces.per = o.sces.per + get.rate.from.tcmcs032(tcmcs036.ccty, tcmcs036.cvat, i.ddte)
					break	
				case tctax.indt.l.vat:	
				case tctax.indt.l.cst:	
				case tctax.indt.l.lst:	
				case tctax.indt.l.n.a:	
					o.vat.per = o.vat.per + get.rate.from.tcmcs032(tcmcs036.ccty, tcmcs036.cvat, i.ddte)
					break
			ENDCASE		
		endselect
	endselect	
}

function domain tcpvat get.rate.from.tcmcs032(
			domain	tcccty	in.ccty,
			domain	tccvat	in.cvat,
			domain	tcdate	in.ddte
			)
{
	domain	tcpvat	tmp.pvat
	
	tmp.pvat = 0
	select 	tcmcs032.ccty, tcmcs032.cvat, tcmcs032.edat, tcmcs032.pvat
	from 	tcmcs032
	where	tcmcs032._index1 = {:in.ccty, :in.cvat}
	and	tcmcs032.edat <= :in.ddte
	order by tcmcs032._index1 desc
	as set with 1 rows
	selectdo
		tmp.pvat = tmp.pvat + tcmcs032.pvat
	selectempty
		tmp.pvat = 0
	endselect
	
	return(tmp.pvat)
}

function get.tax.from.tfacp935(
			domain	tcorno	i.rcno,
			domain	tcpono	i.rcln,
			domain	tcorno	i.orno,			
			domain	tcpono	i.pono,			
			domain	tcpono	i.sqnb,			
		ref	domain	tcamnt	o.rexc.amnt,
		ref	domain	tcamnt	o.rcst.amnt,
		ref	domain	tcamnt	o.ser.amnt
				)
{
	domain	tcamnt	amount
	
	o.rexc.amnt = 0
	o.rcst.amnt = 0
	o.ser.amnt = 0
	amount = 0
	
	select	tfacp935.ccty, tfacp935.cvat, sum(tfacp935.vamt):amount
	from	tfacp935
	where	tfacp935.rcno = :i.rcno
	and	tfacp935.rseq = :i.rcln
	and	tfacp935.orno = :i.orno			
	and	tfacp935.pono = :i.pono			
	and	tfacp935.sqnb = :i.sqnb			
	group by tfacp935.ccty, tfacp935.cvat
	selectdo
		select	tcmcs036.indt.l
		from	tcmcs036
		where	tcmcs036._index1 = {:tfacp935.ccty, :tfacp935.cvat}
		selectdo
			on case etol(tcmcs036.indt.l)
				case 4:				|Basic Excise Duty
				case 9:				|Basic Custom Duty	
				case 10:			|Countervailing Duty
				case 14:			|ECess CVD
				case 15:			|ECess on Custom
				case 17:			|Ecess on Excise
				case 19:			|SHE Cess on CVD
				case 20:			|SHE Cess on Excise
				case 22:			|SHE Cess on Custom
					o.rexc.amnt = o.rexc.amnt + amount
					break
				case 1:				|Service
				case 16:			|Ecess on Service
				case 21:			|SHE Cess on Service	
					o.ser.amnt = o.ser.amnt + amount
					break	
				case 2:				|Local Sales Tax	
				case 3:				|Central Sales Tax
				case 26:			|VAT
				case 30:			|Not Applicable
					o.rcst.amnt = o.rcst.amnt + amount
					break
			endcase
		endselect
	endselect
}

function get.billing.value(
			domain	tcorno	i.inrq,
			domain	tcorno	i.rcno,
			domain	tcpono	i.rcln,
		ref	domain	tcamnt	o.bval
			)
{
	o.bval = 0
	
	select	b_tdisg832.bivl:o.bval
	from	tdisg832 b_tdisg832
	where	b_tdisg832._index1 = {:i.inrq, :i.rcno, :i.rcln}
	selectdo
	selectempty
		o.bval = 0
	endselect
}

function get.tax.from.whinh936(
			domain	tcorno	in.rcno,
			domain	tcpono	in.rcln,	
		ref	domain	tcamnt	o.exc.amnt,
		ref	domain	tcamnt	o.cst.amnt,
		ref	domain	tcamnt	o.ser.amnt
			)
{
	domain	tcamnt	amount
	
	o.exc.amnt = 0
	o.cst.amnt = 0
	o.ser.amnt = 0
	
	select	sum(whinh936.aamt):amount, whinh936.rcno, whinh936.taxc, whinh936.pvat
	from	whinh936
	where	whinh936._index1 = {:in.rcno, :in.rcln}
	group by whinh936.rcno,whinh936.taxc,whinh936.pvat
	selectdo
		fwhinh936.found = true		
		select	tcmcs036.indt.l
		from	tcmcs036
		where	tcmcs036._index1 = {"IN", :whinh936.taxc}
		selectdo
			on case etol(tcmcs036.indt.l)
				case 4:				|Basic Excise Duty
				case 9:				|Basic Custom Duty	
				case 10:			|Countervailing Duty
				case 14:			|ECess CVD
				case 15:			|ECess on Custom
				case 17:			|Ecess on Excise
				case 19:			|SHE Cess on CVD
				case 20:			|SHE Cess on Excise
				case 22:			|SHE Cess on Custom
					o.exc.amnt = o.exc.amnt + amount
					break
				case 1:				|Service
				case 16:			|Ecess on Service
				case 21:			|SHE Cess on Service	
					o.ser.amnt = o.ser.amnt + amount
					break	
				case 2:				|Local Sales Tax	
				case 3:				|Central Sales Tax
				case 26:			|VAT
				case 30:			|Not Applicable
					o.cst.amnt = o.cst.amnt + amount
					break
			endcase
		endselect
	endselect
}


function	generate.header()
{
	line4 =	concat$("	",
		sprintf$("PO Number"),					|1		
		sprintf$("Supplier"),					|2		
		sprintf$("Name"),					|3		
		sprintf$("Buyer"),					|4		
		sprintf$("Buyer Name"),				|5		
		sprintf$("Order Date"),				|6
		sprintf$("Order Status"),				|7		
		sprintf$("Delivery Date"),				|8		
		sprintf$("Basic Value"),				|9
		sprintf$("Excise"),					|10	
		sprintf$("CST/VAT"),					|11
		sprintf$("S. Tax"),					|12
		sprintf$("Landed Cost"),				|13
		sprintf$("Gross Value"),				|14
		sprintf$("Receipt Basic Amount"),			|15
		sprintf$("Excise Duty"),				|16
		sprintf$("CST/VAT"),					|17
		sprintf$("Service Tax"),				|18
		sprintf$("Other Charge"),				|19
		sprintf$("Gross Amount"),				|20
		sprintf$("PO Basic Balance Amount"),			|21		|#ISGECDV001192.n			
		sprintf$("PO Balance Amount"),				|22			
		sprintf$("Billing Value"),				|23											
		sprintf$("Consumption Percentage"))			|24		|#ISGECDV001164.n											
		
	line4 = strip$(shiftl$(line4))		
	seq.puts(line4, stat.fp)	
}

function	print.detail()
{	
	line3 =	concat$("	",
		sprintf$("%s", rep.orno),				|1
		sprintf$("%s", rep.otbp),				|2				
		sprintf$("%s", rep.nama),				|3				
		sprintf$("%s", rep.buyr),				|4				
		sprintf$("%s", rep.bynm),				|5				
		sprintf$("%u(%02d/%02m/%04Y)", rep.odat),		|6
		sprintf$("%s", rep.hdst),				|7				
		sprintf$("%u(%02d/%02m/%04Y)", rep.ddta),		|8				
		sprintf$("%f", rep.obsc),				|9
		sprintf$("%f", rep.oexc),				|10
		sprintf$("%f", rep.ocst),				|11
		sprintf$("%f", rep.ostx),				|12
		sprintf$("%f", rep.lcst),				|13
		sprintf$("%f", rep.ogrs),				|14
		sprintf$("%f", rep.rbsc),				|15
		sprintf$("%f", rep.rexc),				|16
		sprintf$("%f", rep.rcst),				|17
		sprintf$("%f", rep.rstx),				|18
		sprintf$("%f", rep.roch),				|19
		sprintf$("%f", rep.rgrs),				|20
		sprintf$("%f", rep.bbal),				|21		|#ISGECDV001192.n			
		sprintf$("%f", rep.rbal),				|21			
		sprintf$("%f", rep.bval),				|22
		sprintf$("%f", rep.cnpr))				|23
	
		line3 = strip$(shiftl$(line3))
		seq.puts(line3, stat.fp)
}	

function Initialize_Variable()
{
	rep.orno = ""				|1
	rep.otbp = ""				|2				
	rep.nama = ""				|3				
	rep.buyr = ""				|4				
	rep.bynm = ""				|5				
	rep.odat = 0				|6
	rep.hdst = ""				|7				
	rep.ddta = 0				|8				
	rep.oprc = 0				|
	rep.obsc = 0				|9
	rep.oexc = 0				|10
	rep.ocst = 0				|11
	rep.ostx = 0				|12
	rep.lcst = 0				|13
	rep.ogrs = 0				|14
	rep.rbsc = 0				|15
	rep.rexc = 0				|16
	rep.rcst = 0				|17
	rep.rstx = 0				|18
	rep.roch = 0				|19
	rep.rgrs = 0				|20
	rep.bbal = 0				|21			|#ISGECDV001192.n			
	rep.rbal = 0				|22			
	rep.bval = 0				|23
	rep.cnpr = 0				|24
}

function get.date.utc(
		domain	tcdate	i.date,
		long		i.hh,
		long		i.mn,
		long		i.ss,
	ref	domain	tcdate	o.date
			)
{
	long	dd, mm, yy, hh, mn, ss
	
	utc.to.date(i.date, yy , mm, dd, hh, mn, ss)
	o.date = date.to.utc(yy, mm, dd, i.hh, i.mn, i.ss)
	if	o.date < 0	then
		o.date = 0
	endif
}	

function open.file()
{
	err.file = bse.tmp.dir$() & str$(utc.num()) & ".xls"
	
	file.name = "c:\temp\" & str$(utc.num())  & ".xls"
	
	stat.fp = seq.open(err.file, "w+")
	if stat.fp >0 then
 		seq.seek(0, 0, stat.fp)
	endif
}

function close.file()
{
	seq.close(stat.fp)
	ret2 = server2client(err.file,file.name,1)
	ret2 = app_start(file.name,"c:","","","")
}

function get.po.date()							|#ISGEC01072.sn
{
	select	tdmsl400.apdt
	from	tdmsl400
	where	tdmsl400._index1 = {:tdpur400.orno,0}
	selectdo
		rep.odat = tdmsl400.apdt
	selectempty
		tdmsl400.apdt = 0
	endselect	
}									|#ISGEC01072.en

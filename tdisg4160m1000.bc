|******************************************************************************
|* tdisg4160m000  0  VRC B61U a7 isg 
|* Maintain Request for Indent Value increase
|* TechVikas                     
|* 2019-09-26
|******************************************************************************
|* Main table tdisg460 Request for Indent Value increase (For zero revision of PO), Form Type 1
|******************************************************************************
                                                                                
|****************************** declaration section ***************************
declaration:

	table   ttdisg460 | Request for Indent Value increase (For zero revision of PO)
	table   ttdisg462
	table	ttdpur200
	table	ttdpur201
	table	tbpmdm001
	table	ttccom001
	table	ttdisg461
	table	ttdpur401
	table	ttdpur400
	table	ttpisg012
	table	ttcmcs052
	table	ttppdm090
	table	ttcibd001
	table	ttppdm649	
	
	extern domain		tcorno		o.vers
	extern domain	tcnama	reqs.name,appr.name
	extern domain	tcamnt	tot.ind.val,tot.po.val,tot.amnt.inc,tot.aamt,tot.val,amti.var
	domain	tcmcs.s512m	body.attachment
	long	file.ret,diff.cprj,ret
	long	comma.pos,mail.len,mail.name.len,comma.name.pos,cc.mail.len,cc.comma.pos,cc.mail.name.len,cc.comma.name.pos,cc.id
	string  cc.mail.name(1000),cc.mail(1000)
	domain	tcmcs.str100		recipient.name
	domain	tcinfo		recipient.mail,from.mail


#include <bic_cmf>
|****************************** program section ********************************


|****************************** group section **********************************
|****************************** form section **********************************
form.all:
init.form:
	disable.fields("tdisg460.reqn")
	disable.fields("tdisg460.orno")
	disable.fields("tdisg460.indv")
	disable.fields("tdisg460.dpov")
	disable.fields("tdisg460.amti")
	disable.fields("tdisg460.reby")
	disable.fields("tdisg460.reon")
	disable.fields("tdisg460.stat")
	disable.fields("tdisg460.stdt")
	disable.fields("tdisg460.appr")
	disable.fields("tdisg460.rem1")

|****************************** choice section **********************************
choice.tpisg0111m001:
before.choice:
	select	tdisg461.cprj,tdisg461.cspa
	from	tdisg461
	where	tdisg461._index1 = {:tdisg460.reqn}
	as set with 1 rows
	selectdo
		tpisgdll0012.check_sanction_status(tdisg461.cprj,o.vers)
		tpisg012.cprj = tdisg461.cprj
		tpisg012.vers = o.vers
	endselect
| 	start.synchronized.child("tpisg0111m001","tdisg461.cprj","tpisg012.cprj","o.vers","tpisg012.vers")

choice.appr.request:
before.choice:
	select	tdisg461.*
	from	tdisg461
	where	tdisg461._index1 = {:tdisg460.reqn,:tdisg460.orno}
	selectdo
		select	tdpur402.*
		from	tdpur402
		where	tdpur402._index1 = {:tdisg461.orno,:tdisg461.pono,:tdisg461.sqnb}
		and	tdpur402.rqno = :tdisg461.indn
		and	tdpur402.rqpo = :tdisg461.indl
		selectdo
		selectempty
			message("PO line does not found.!!")
			choice.again()
		endselect
		select	tdpur401.cprj,tdpur401.cspa
		from	tdpur401
		where	tdpur401._index1 = {:tdisg461.orno,:tdisg461.pono,:tdisg461.sqnb}
		and	tdpur401.cprj = :tdisg461.cprj
		and	tdpur401.cspa = :tdisg461.cspa
		selectdo
		selectempty
			message("Project or Element Chnaged in PO !!")
			choice.again()			
		endselect		
	endselect
	check_project()
	if diff.cprj > 1 then
		message("different project not allowed in PO !!")
		choice.again()
	else
	endif
	
	select	tdpur401.cprj,tdpur401.cspa,sum(tdpur401.oamt):tot.val
	from	tdpur401
	where	tdpur401._index1 = {:tdisg460.orno}
	group by tdpur401.cprj,tdpur401.cspa
	selectdo
		get_increase_amnt()
		tpisgdll0012.check_sanction_status(tdpur401.cprj,o.vers)
		select	tpisg012.totl,tpisg012.exha,tpisg012.avai
		from	tpisg012
		where	tpisg012._index1 = {:tdpur401.cprj,:o.vers,:tdpur401.cspa}
		selectdo
			if (tpisg012.totl-tpisg012.exha) >= amti.var then
			else
				message("Insufficient Sanction amount(Amount to Approve = %s, Available Value = %s ).!!",amti.var,(tpisg012.totl-tpisg012.exha))
				choice.again()
			endif
			if tpisg012.avai >= amti.var then
			else
				if ask.enum("tdisg000000003",tcyesno.no,ret) =  tcyesno.yes then
				else
					choice.again()
				endif
			endif
		selectempty
			message("Project %s, version %s and Element %s not present in Santion Control.",tdpur401.cprj,o.vers,tdpur401.cspa)
			choice.again()
		endselect
	selectempty
	endselect
	
on.choice:
	approve()
	
choice.ret.request:
on.choice:
	return.data()
	
|****************************** field section **********************************
field.reqs.name:
before.display:
	select	ttaad200.name:reqs.name
	from	ttaad200
	where	ttaad200._index1 = {:tdisg460.reby}
	and	ttaad200._compnr = {000}
	selectdo
	selectempty
		reqs.name = ""
	endselect
	if tdisg460.stat = ltoe(4) then
		enable.commands("appr.request")
		enable.commands("ret.request")
		enable.fields("tdisg460.rem2")
	else
		disable.commands("appr.request")
		disable.commands("ret.request")
		disable.fields("tdisg460.rem2")
	endif
	

field.appr.name:
before.display:
	select	ttaad200.name:appr.name
	from	ttaad200
	where	ttaad200._index1 = {:tdisg460.appr}
	and	ttaad200._compnr = {000}
	selectdo
	selectempty
		appr.name = ""
	endselect
	
field.tot.ind.val:
before.display:
	select	sum(tdisg461.indv):tot.ind.val,sum(tdisg461.dpov):tot.po.val,sum(tdisg461.amti):tot.amnt.inc,sum(tdisg461.aamt):tot.aamt
	from	tdisg461
	where	tdisg461._index1 = {:tdisg460.reqn,:tdisg460.orno}
	selectdo
	selectempty
		tot.ind.val = 0
		tot.po.val = 0
		tot.amnt.inc = 0
		tot.aamt = 0
	endselect
	
|*****************************function section ********************************************
functions:
function approve()
{
	select	tdisg460.*
	from	tdisg460 for update
	where	tdisg460._index1 = {:tdisg460.reqn,:tdisg460.orno}
	selectdo
		tdisg460.stat = ltoe(2)
		tdisg460.stdt = utc.num()
		db.update(ttdisg460,db.retry,e)
		
		select	tdisg461.*
		from	tdisg461
		where	tdisg461._index1 = {:tdisg460.reqn,:tdisg460.orno}
		selectdo
			select	tdisg462.*
			from	tdisg462
			where	tdisg462._index1 = {:tdisg461.reqn,:tdisg461.orno,:tdisg461.pono,:tdisg461.sqnb,:tdisg461.indn,:tdisg461.indl,:tdisg460.stdt}
			selectdo
			selectempty
				tdisg462.reqn = tdisg460.reqn
				tdisg462.orno = tdisg460.orno
				tdisg462.pono = tdisg461.pono
				tdisg462.sqnb = tdisg461.sqnb
				tdisg462.indn = tdisg461.indn
				tdisg462.indl = tdisg461.indl
				tdisg462.amti = tdisg461.amti
				tdisg462.indv = tdisg461.indv
				tdisg462.dpov = tdisg461.dpov
				tdisg462.reby = tdisg460.reby
				tdisg462.reon = tdisg460.reon
				tdisg462.stat = tdisg460.stat
				tdisg462.stdt = tdisg460.stdt
				tdisg462.rem1 = tdisg460.rem1
				tdisg462.rem2 = tdisg460.rem2
				tdisg462.cprj = tdisg461.cprj
				tdisg462.cspa = tdisg461.cspa
				tdisg462.updt = logname$
				tdisg462.upno = utc.num()
				tdisg462.rate = tdisg460.rate
				tdisg462.ratf = tdisg460.ratf
				tdisg462.ccur = tdisg460.ccur
				db.insert(ttdisg462,db.retry,e)
			endselect
		endselect
	endselect
	commit.transaction()
| 	select	tdpur401.cprj,tdpur401.cspa
| 	from	tdpur401
| 	where	tdpur401._index1 = {:tdisg460.orno}
| 	selectdo
| 		if not tpisgdll0012.check_sanction_status(tdpur401.cprj,o.vers) then
| 			|Update Sanction Amount
| 			tpisgdll0012.SanctionControlLine(tdpur401.cprj,o.vers,tdpur401.cspa)
| 		endif
| 	endselect
	select	tdisg461.cprj,tdisg461.cspa
	from	tdisg461
	where	tdisg461._index1 = {:tdisg460.reqn}
	selectdo
		if not tpisgdll0012.check_sanction_status(tdisg461.cprj,o.vers) then
			|Update Sanction Amount
			tpisgdll0012.SanctionControlLine(tdisg461.cprj,o.vers,tdisg461.cspa)
		endif
	endselect
	commit.transaction()
	send.email.alert()
}
function return.data()
{
	select	tdisg460.*
	from	tdisg460 for update
	where	tdisg460._index1 = {:tdisg460.reqn,:tdisg460.orno}
	selectdo
		tdisg460.stat = ltoe(6)
		tdisg460.stdt = utc.num()
		db.update(ttdisg460,db.retry,e)
		
		select	tdisg461.*
		from	tdisg461
		where	tdisg461._index1 = {:tdisg460.reqn,:tdisg460.orno}
		selectdo
			select	tdisg462.*
			from	tdisg462
			where	tdisg462._index1 = {:tdisg461.reqn,:tdisg461.orno,:tdisg461.pono,:tdisg461.sqnb,:tdisg461.indn,:tdisg461.indl,:tdisg460.stdt}
			selectdo
			selectempty
				tdisg462.reqn = tdisg460.reqn
				tdisg462.orno = tdisg460.orno
				tdisg462.pono = tdisg461.pono
				tdisg462.sqnb = tdisg461.sqnb
				tdisg462.indn = tdisg461.indn
				tdisg462.indl = tdisg461.indl
				tdisg462.amti = tdisg461.amti
				tdisg462.indv = tdisg461.indv
				tdisg462.dpov = tdisg461.dpov
				tdisg462.reby = tdisg460.reby
				tdisg462.reon = tdisg460.reon
				tdisg462.stat = tdisg460.stat
				tdisg462.stdt = tdisg460.stdt
				tdisg462.rem1 = tdisg460.rem1
				tdisg462.rem2 = tdisg460.rem2
				tdisg462.cprj = tdisg461.cprj
				tdisg462.cspa = tdisg461.cspa
				tdisg462.updt = logname$
				tdisg462.upno = utc.num()
				tdisg462.rate = tdisg460.rate
				tdisg462.ratf = tdisg460.ratf
				tdisg462.ccur = tdisg460.ccur
				db.insert(ttdisg462,db.retry,e)
			endselect
		endselect
	endselect
	commit.transaction()
	send.email.alert()	
}

function send.email.alert()
{
	string tmp.file(200),line(500)
	long fp
	domain tcemno	emno.code
	domain	tfgld.user	user.code
	
	long    message.ID
        long    to.ID
        long    attachment.ID
        long    ret

	double	amount
	domain	tccprj	cprj
        domain	ttcmf.prov service
        long stat       
        long mid        
	domain  ttaad.user       server.user
	domain  tcdate           server.time

	server.user = logname$
	server.time = utc.num()	

	select	tdisg461.indn
	from	tdisg461
	where	tdisg461._index1 = {:tdisg460.reqn,:tdisg460.orno}
	as set with 1 rows
	selectdo
		select	tdpur200.remn
		from	tdpur200
		where	tdpur200._index1 = {:tdisg461.indn}
		selectdo
			select tccom001.nama from tccom001
			where tccom001._index1 = {:tdpur200.remn}
			as set with 1 rows
			selectdo
			endselect
		endselect
	endselect
	
	tmp.file = bse.tmp.dir$()
	body.attachment = strip$(tmp.file) &"/Body"&server.user&".html"
	file.ret = seq.open(body.attachment , "w+")
	if file.ret <=0 then
		message("Temp file can not be created")
	endif
	
	line = concat$("	","<p1>","","</p1>") 
	fp = seq.puts(line , file.ret)
	
	line = concat$("	","<p1>","Request " & tdisg460.reqn & " is "& enum.descr$("tdisg.rest",tdisg460.stat),"<br><br>","</p1>")	
	fp = seq.puts(line , file.ret)
	
	line = concat$("	","<p1>","Approval/Rejection Remarks- " & trim$(tdisg460.rem2),"<br><br>","</p1>")	
	fp = seq.puts(line , file.ret)
	
	line = concat$("	","<p1>","Request Detail -","<br>","</p1>")	
	fp = seq.puts(line , file.ret)
	
	line = concat$("	","<table","border=","1"," >")
	fp = seq.puts(line , file.ret)
		
	line = concat$("	","<tr>")
	fp = seq.puts(line , file.ret)
	
	line = concat$("	","<th align =left>","Indent No.","</th>")
	fp = seq.puts(line , file.ret)
	
	line = concat$("	","<th align =left>","Line No.","</th>")
	fp = seq.puts(line , file.ret)
	
	line = concat$("	","<th align =left>","PO No.","</th>")
	fp = seq.puts(line , file.ret)
	
	line = concat$("	","<th align =left>","Line No.","</th>")
	fp = seq.puts(line , file.ret)
	
	line = concat$("	","<th align =left>","Project","</th>")
	fp = seq.puts(line , file.ret)
	
	line = concat$("	","<th align =left>","Description","</th>")
	fp = seq.puts(line , file.ret)
	
	line = concat$("	","<th align =left>","Element","</th>")
	fp = seq.puts(line , file.ret)
	
	line = concat$("	","<th align =left>","Description","</th>")
	fp = seq.puts(line , file.ret)
	
	line = concat$("	","<th align =left>","Item","</th>")
	fp = seq.puts(line , file.ret)
	
	line = concat$("	","<th align =left>","Description","</th>")
	fp = seq.puts(line , file.ret)
	
	line = concat$("	","<th align =left>","Indent Amount","</th>")
	fp = seq.puts(line , file.ret)

	line = concat$("	","<th align =left>","PO Amount","</th>")
	fp = seq.puts(line , file.ret)
	
	line = concat$("	","<th align =left>","Amount to increase","</th>")
	fp = seq.puts(line , file.ret)

	line = concat$("	","</tr>")
	fp = seq.puts(line , file.ret)
	
	select	tdisg461.*,tcmcs052.dsca,tppdm090.desc
	from	tdisg461,tcmcs052,tppdm090
	where	tdisg461._index1 = {:tdisg460.reqn,:tdisg460.orno}
	and	tdisg461.cprj refers to tcmcs052
	and	tdisg461.cspa refers to tppdm090
	selectdo
		select	tdpur201.item,tcibd001.dsca
		from	tdpur201,tcibd001
		where	tdpur201._index1 = {:tdisg461.indn,:tdisg461.indl}
		and	tdpur201.item refers to tcibd001
		selectdo
		selectempty
			tdpur201.item = ""
			tcibd001.dsca = ""
		endselect
		line = concat$("	","<tr>")
		fp = seq.puts(line , file.ret)
		
		line = concat$("	","<th align =left>",tdisg461.indn,"</th>")
		fp = seq.puts(line , file.ret)
		
		line = concat$("	","<th align =left>",tdisg461.indl,"</th>")
		fp = seq.puts(line , file.ret)
		
		line = concat$("	","<th align =left>",tdisg461.orno,"</th>")
		fp = seq.puts(line , file.ret)
		
		line = concat$("	","<th align =left>",tdisg461.pono,"</th>")
		fp = seq.puts(line , file.ret)
		
		line = concat$("	","<th align =left>",tdisg461.cprj,"</th>")
		fp = seq.puts(line , file.ret)
		
		line = concat$("	","<th align =left>",tcmcs052.dsca,"</th>")
		fp = seq.puts(line , file.ret)
		
		line = concat$("	","<th align =left>",tdisg461.cspa,"</th>")
		fp = seq.puts(line , file.ret)
		
		line = concat$("	","<th align =left>",tppdm090.desc,"</th>")
		fp = seq.puts(line , file.ret)
		
		line = concat$("	","<th align =left>",tdpur201.item,"</th>")
		fp = seq.puts(line , file.ret)
		
		line = concat$("	","<th align =left>",tcibd001.dsca,"</th>")
		fp = seq.puts(line , file.ret)
		
		line = concat$("	","<th align =left>",tdisg461.indv,"</th>")
		fp = seq.puts(line , file.ret)
		
		line = concat$("	","<th align =left>",tdisg461.dpov,"</th>")
		fp = seq.puts(line , file.ret)
		
		line = concat$("	","<th align =left>",tdisg461.amti,"</th>")
		fp = seq.puts(line , file.ret)
		
		line = concat$("	","</tr>")
		fp = seq.puts(line , file.ret)
		
	endselect
	line = concat$("	","</table>","<br><br>")
	fp = seq.puts(line , file.ret)

	line = concat$("	","<p1>","Note - This is an autogenerated e-mail.","<br><br>","</p1>")
	fp = seq.puts(line , file.ret)
	
	ret = seq.close(file.ret)
	
	user.code = logname$
	select bpmdm001.mail,tccom001.nama from tccom001,bpmdm001
	where tccom001._index4 = {:user.code}
	and	tccom001.emno refers to bpmdm001
	as set with 1 rows
	selectdo
	selectempty
		bpmdm001.mail = ""
	endselect
	if isspace(bpmdm001.mail) then
		message("Email ID for user " & user.code & " Not maintained")
	endif		
	|******* Email Header
        message.ID = cmf.create()
	line = "Indent Value Increase request"& enum.descr$("tdisg.rest",tdisg460.stat) & tdisg461.indn&"."
        ret = cmf.setClass(message.ID, "CMF.NOTE.EMAIL")
        ret = cmf.setSubject(message.ID,line)
	
	|******** from ID
| 	bpmdm001.mail = "veena.pawar@isgec.co.in"		|for testing
	to.ID = cmf.createRecipient(message.ID, ttcmf.role.from)  
	ret = cmf.setRecipientName(to.ID,tccom001.nama)
        ret = cmf.setRecipientAddress(to.ID, bpmdm001.mail)	
	ret = cmf.setRecipientType(to.ID, "SMTP")
| 	|******** CC ID
| 	bpmdm001.mail = "sanjeev.kumar@techvikas.com"		|for testing
| 	to.ID = cmf.createRecipient(message.ID, ttcmf.role.cc)  
| 	ret = cmf.setRecipientName(to.ID,tccom001.nama)
|         ret = cmf.setRecipientAddress(to.ID, bpmdm001.mail)	
| 	ret = cmf.setRecipientType(to.ID, "SMTP")
|********cc list**************************
	create.cc.list()
	
	cc.mail.len = len(trim$(cc.mail))
	cc.comma.pos = pos(cc.mail,",")	
	cc.mail.name.len = len(trim$(cc.mail.name))
	cc.comma.name.pos = pos(cc.mail.name,",")
	
	while (cc.comma.pos<>0)
		recipient.mail = ""
		recipient.name = ""
		mail.name.len = len(trim$(cc.mail.name))
		cc.comma.name.pos = pos(cc.mail.name,",")
		recipient.name = trim$(cc.mail.name(1;(cc.comma.name.pos-1)))
		recipient.mail = trim$(cc.mail(1;(cc.comma.pos-1)))
		
		cc.ID = cmf.createRecipient(message.ID, ttcmf.role.cc)
		ret = cmf.setRecipientName(cc.ID, recipient.name)
		ret = cmf.setRecipientAddress(cc.ID,recipient.mail)
	        ret = cmf.setRecipientType(cc.ID, "SMTP")
	        ret = cmf.setRecipientResponsibility(cc.ID, "TRUE")
	        
	        cc.mail = cc.mail((cc.comma.pos+1);cc.mail.len)
	        cc.mail.len = len(trim$(cc.mail))
		cc.comma.pos = pos(cc.mail,",")
		
		cc.mail.name = cc.mail.name((cc.comma.name.pos+1);cc.mail.name.len)
	        cc.mail.name.len = len(trim$(cc.mail.name))
		cc.comma.name.pos = pos(cc.mail.name,",")
	endwhile
	
	select	tdpur400.ccon
	from	tdpur400
	where	tdpur400._index1 = {:tdisg460.orno}
	selectdo
		select bpmdm001.mail,tccom001.nama from tccom001,bpmdm001
		where tccom001._index1 = {:tdpur400.ccon}
		and	tccom001.emno refers to bpmdm001
		as set with 1 rows
		selectdo
		selectempty
			bpmdm001.mail = ""
		endselect
	selectempty
	endselect
	
| 	bpmdm001.mail = "randev.katoch@techvikas.com"		|for testing
	if isspace(bpmdm001.mail) then
		message("Email ID for requester " & tdpur200.ccon & " Not maintained")
	else
		to.ID = cmf.createRecipient(message.ID, ttcmf.role.to)  
		ret = cmf.setRecipientName(to.ID,tccom001.nama)
		ret = cmf.setRecipientAddress(to.ID, bpmdm001.mail)	
		ret = cmf.setRecipientResponsibility(to.ID, "TRUE")		
		ret = cmf.setRecipientType(to.ID, "SMTP")
	endif
	
	|********* Mail Body
	attachment.ID = cmf.createAttachment(message.ID)
	ret = cmf.setAttachmentBody(attachment.ID,ttyeno.yes)
	ret = cmf.setAttachmentMIME(attachment.ID,"text/html")                       
	ret = cmf.setAttachmentFileName(attachment.ID,body.attachment)


	|*********  Send mail
        if message.ID <>0 then
                stat = cmf.startService("SMTP",2)
                if stat<>0 then
                        message("Message could not be sent "&
                                "(Infor ERP Enterprise eMessage Connector"&
                                " service did not start)")
                endif
                stat = cmf.send(message.ID,"SMTP")
                if stat<>0 then
                        message("Message could not be sent "& "(Infor ERP Enterprise eMessage Connector "&"service refused message)")
                        cmf.stopService("SMTP",2)
                endif
                stat = cmf.stopService("SMTP",2)
        endif

}
function check_project()
{
	domain	tccprj	cprj.var
	cprj.var = ""
	diff.cprj = 0
	select	tdpur401.cprj
	from	tdpur401
	where	tdpur401._index1 = {:tdpur400.orno}
	group by tdpur401.cprj
	selectdo
		diff.cprj = diff.cprj + 1
	selectempty
	endselect

}
function get_increase_amnt()
{
	amti.var = 0
	select	tdpur401.orno,tdpur401.pono,tdpur401.sqnb
	from	tdpur401
	where	tdpur401._index1 = {:tdisg460.orno}
	and	tdpur401.cprj = :tdpur401.cprj
	and	tdpur401.cspa = :tdpur401.cspa
	selectdo
		select	tdisg461.dpov | tdisg461.amti
		from	tdisg461,tdisg460
		where	tdisg461._index2 = {:tdpur401.orno,:tdpur401.pono,:tdpur401.sqnb}
		and	tdisg460.stat = 4
		and	tdisg461.reqn refers to tdisg460
		selectdo
			amti.var = amti.var + tdisg461.dpov|tdisg461.amti
		selectempty
		endselect
	selectempty
	endselect
}
function create.cc.list()	|#
{
	cc.mail.name = " "
	cc.mail = " "
	
	select	tdisg461.cprj
	from	tdisg461
	where	tdisg461._index1 = {:tdisg460.reqn}
	as set with 1 rows
	selectdo
		select	tppdm649.emno
		from	tppdm649
		where	tppdm649._index1 = {:tdisg461.cprj}
		and	tppdm649.cres(1;1) = "P"
		selectdo
			select	bpmdm001.mail,tccom001.nama
			from	bpmdm001,tccom001
			where	bpmdm001._index1 = {:tppdm649.emno}
			and	bpmdm001.emno refers to tccom001
			selectdo
				cc.mail.name = cc.mail.name & strip$(tccom001.nama) & ","
				cc.mail = cc.mail & strip$(bpmdm001.mail) & ","
			endselect
		selectempty
		endselect
	endselect
	
| 	bpmdm001.mail = "sanjeev.kumar@techvikas.com"		|for testing
}

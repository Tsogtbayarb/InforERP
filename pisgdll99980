|******************************************************************************
|* tfglddll9999  0  VRC B40O c4 DEV 
|* Amount.in.words
|* ireddy
|* 06-03-03 [13:09]
|******************************************************************************
|* Script Type: Library
|******************************************************************************



function extern tfgld.dll9998.in.words(domain tfgld.amnt net.amount,		
		  ref domain tcmcs.str215 cash.str)
{
|	domain	tcmcs.int	ten.crore
	domain	tcmcs.int	hundred.millions
|	domain	tcmcs.int	crore
	domain	tcmcs.int	ten.millions
	
|	domain	tcmcs.int	ten.lakhs
	domain	tcmcs.int	millions
|	domain	tcmcs.int	lakhs
	domain	tcmcs.int	hundred.thousands
	domain	tcmcs.int	ten.thousands
	domain	tcmcs.int	thousands
	domain	tcmcs.int	hundreds
	domain	tcmcs.int	tens
	domain	tcmcs.int	ones
	domain	tcbool		eleven
	domain	tfgld.amnt	rem.net.amount
	domain	tcmcs.int	net.cent

	domain	tcmcs.str15	amount.string
	domain	tcmcs.str15	cent.string
	domain	tcmcs.int	something

		long		cent.tens
		long		cent.ones
		long		whole.amount
		long  		long.cent

	amount.string = str$(net.amount)
	string.scan(amount.string,"%d.%s",something,cent.string)
	|net.cent = 0
	on case len(strip$(cent.string))
	case 1:
		net.cent = lval(cent.string)
		net.cent = net.cent *10
		break
	case 2:
		net.cent = lval(cent.string)
		break
	case 3:
		cent.string = cent.string(1;2)
		net.cent = lval(cent.string)
		break
	case 4:
		cent.string = cent.string(1;2)
		net.cent = lval(cent.string)
		break
	case 5:
		cent.string = cent.string(1;2)
		net.cent = lval(cent.string)
		break
	case 6:
		cent.string = cent.string(1;2)
		net.cent = lval(cent.string)
		break		
	endcase
		
	cent.tens = net.cent/10
	cent.ones = net.cent\10

	hundred.millions = net.amount/100000000
	rem.net.amount = net.amount\100000000
	ten.millions = rem.net.amount/10000000
	rem.net.amount = rem.net.amount\10000000

	millions = rem.net.amount/1000000
	rem.net.amount = rem.net.amount\1000000
	hundred.thousands = rem.net.amount/100000
	rem.net.amount = rem.net.amount\100000 	
	ten.thousands = rem.net.amount/10000
	rem.net.amount = rem.net.amount\10000 
	thousands = rem.net.amount/1000
	rem.net.amount = rem.net.amount\1000 
	hundreds = rem.net.amount/100
	rem.net.amount = rem.net.amount\100
	tens = rem.net.amount/10
	ones = rem.net.amount\10
|============
eleven = 0

ON CASE hundred.millions
	CASE 1:
		cash.str = cash.str&" one "&"hundred "
		if ten.millions = 0 and millions = 0 then
			cash.str = cash.str & "million "
		endif
		break
	CASE 2:
		cash.str = cash.str&" two "&"hundred "
		if ten.millions = 0 and millions = 0 then
			cash.str = cash.str & "million "
		endif
		break
	CASE 3:
		cash.str = cash.str&" three "&"hundred "
		if ten.millions = 0 and millions = 0 then
			cash.str = cash.str & "million "
		endif
		break
	CASE 4:
		cash.str = cash.str&" four "&"hundred "
		if ten.millions = 0 and millions = 0 then
			cash.str = cash.str & "million "
		endif
		break
	CASE 5:
		cash.str = cash.str&" five "&"hundred "
		if ten.millions = 0 and millions = 0 then
			cash.str = cash.str & "million "
		endif
		break
	CASE 6:
		cash.str = cash.str&" six "&"hundred "
		if ten.millions = 0 and millions = 0 then
			cash.str = cash.str & "million "
		endif
		break
	CASE 7:	
		cash.str = cash.str&" seven "&"hundred "
		if ten.millions = 0 and millions = 0 then
			cash.str = cash.str & "million "
		endif
		break
	CASE 8:
		cash.str = cash.str&" eight "&"hundred "
		if ten.millions = 0 and millions = 0 then
			cash.str = cash.str & "million "
		endif
		break
	CASE 9:
		cash.str = cash.str&" nine "&"hundred "
		if ten.millions = 0 and millions = 0 then
			cash.str = cash.str & "million "
		endif
		break
	ENDCASE		

	eleven = 0

	ON CASE ten.millions
	CASE 1:
		eleven = 1
		break
	CASE 2:
		cash.str = cash.str&"twenty "
		if millions = 0 then
			cash.str = cash.str & "million "
		endif
		break
	CASE 3:
		cash.str = cash.str&"thirty "
		if millions = 0 then
			cash.str = cash.str & "million "
		endif
		break
	CASE 4:
		cash.str = cash.str&"forty "
		if millions = 0 then
			cash.str = cash.str & "million "
		endif
		break
	CASE 5:
		cash.str = cash.str&"fifty "
		if millions = 0 then
			cash.str = cash.str & "million "
		endif
		break
	CASE 6:
		cash.str = cash.str&"sixty "
		if millions = 0 then
			cash.str = cash.str & "million "
		endif
		break
	CASE 7:	
		cash.str = cash.str&"seventy "
		if millions = 0 then
			cash.str = cash.str & "million "
		endif
		break
	CASE 8:
		cash.str = cash.str&"eighty "
		if millions = 0 then
			cash.str = cash.str & "million "
		endif
		break
	CASE 9:
		cash.str = cash.str&"ninety "
		if millions = 0 then
			cash.str = cash.str & "million "
		endif
	ENDCASE
	
	ON CASE millions
	CASE 1:
		if eleven = 1 then
			cash.str = cash.str&"Eleven million "
		else
			cash.str = cash.str&"one million "
		endif
		break
	CASE 2:
		if eleven = 1 then
			cash.str = cash.str&"Twelve million "
		else
			cash.str = cash.str&"two million "
		endif
		break
	CASE 3:
		if eleven = 1 then
			cash.str = cash.str&"Thirteen million "
		else
			cash.str = cash.str&"three million "
		endif	
		break
	CASE 4:
		if eleven = 1 then
			cash.str = cash.str&"Fourteen million "
		else
			cash.str = cash.str&"four million "
		endif
		break
	CASE 5:
		if eleven = 1 then
			cash.str = cash.str&"Fifteen million "
		else
			cash.str = cash.str&"five million "
		endif	
		break
	CASE 6:
		if eleven = 1 then
			cash.str = cash.str&"Sixteen million "
		else
			cash.str = cash.str&"six million "
		endif
		break
	CASE 7:	
		if eleven = 1 then
			cash.str = cash.str&"Seventeen million "
		else
			cash.str = cash.str&"seven million "
		endif	
		break
	CASE 8:
		if eleven = 1 then
			cash.str = cash.str&"Eighteen million "
		else
			cash.str = cash.str&"eight million "
		endif
		break
	CASE 9:
		if eleven = 1 then
			cash.str = cash.str&"Nineteen million "
		else
			cash.str = cash.str&"nine million "
		endif
		break
	DEFAULT:
		if ten.millions = 1 then
			cash.str = cash.str&"ten million "
		endif
		break 
	ENDCASE	
	


ON CASE hundred.thousands
	CASE 1:
		cash.str = cash.str&" one "&"hundred "
		if ten.thousands = 0 and thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
		break
	CASE 2:
		cash.str = cash.str&" two "&"hundred "
		if ten.thousands = 0 and thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
		break
	CASE 3:
		cash.str = cash.str&" three "&"hundred "
		if ten.thousands = 0 and thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
		break
	CASE 4:
		cash.str = cash.str&" four "&"hundred "
		if ten.thousands = 0 and thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
		break
	CASE 5:
		cash.str = cash.str&" five "&"hundred "
		if ten.thousands = 0 and thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
		break
	CASE 6:
		cash.str = cash.str&" six "&"hundred "
		if ten.thousands = 0 and thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
		break
	CASE 7:	
		cash.str = cash.str&" seven "&"hundred "
		if ten.thousands = 0 and thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
		break
	CASE 8:
		cash.str = cash.str&" eight "&"hundred "
		if ten.thousands = 0 and thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
		break
	CASE 9:
		cash.str = cash.str&" nine "&"hundred "
		if ten.thousands = 0 and thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
		break
	ENDCASE		

	eleven = 0

on CASE ten.thousands
	CASE 1:
		eleven = 1
		break
	CASE 2:
		cash.str = cash.str&"twenty "
		if thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
		break
	CASE 3:
		cash.str = cash.str&"thirty "
		if thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
		break
	CASE 4:
		cash.str = cash.str&"forty "
		if thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
		break
	CASE 5:
		cash.str = cash.str&"fifty "
		if thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
		break
	CASE 6:
		cash.str = cash.str&"sixty "
		if thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
		break
	CASE 7:	
		cash.str = cash.str&"seventy "
		if thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
		break
	CASE 8:
		cash.str = cash.str&"eighty "
		if thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
		break
	CASE 9:
		cash.str = cash.str&"ninety "
		if thousands = 0 then
			cash.str = cash.str & "thousand "
		endif
	ENDCASE
	
on CASE thousands
	CASE 1:
		if eleven = 1 then
			cash.str = cash.str&"Eleven thousand "
		else
			cash.str = cash.str&" one thousand "
		endif
		break
	CASE 2:
		if eleven = 1 then
			cash.str = cash.str&"Twelve thousand "
		else
			cash.str = cash.str&" two thousand "
		endif
		break
	CASE 3:
		if eleven = 1 then
			cash.str = cash.str&"Thirteen thousand "
		else
			cash.str = cash.str&" three thousand "
		endif	
		break
	CASE 4:
		if eleven = 1 then
			cash.str = cash.str&"Fourteen thousand "
		else
			cash.str = cash.str&" four thousand "
		endif
		break
	CASE 5:
		if eleven = 1 then
			cash.str = cash.str&"Fifteen thousand "
		else
			cash.str = cash.str&" five thousand "
		endif	
		break
	CASE 6:
		if eleven = 1 then
			cash.str = cash.str&"Sixteen thousand "
		else
			cash.str = cash.str&" six thousand "
		endif
		break
	CASE 7:	
		if eleven = 1 then
			cash.str = cash.str&"Seventeen thousand "
		else
			cash.str = cash.str&" seven thousand "
		endif	
		break
	CASE 8:
		if eleven = 1 then
			cash.str = cash.str&"Eighteen thousand "
		else
			cash.str = cash.str&" eight thousand "
		endif
		break
	CASE 9:
		if eleven = 1 then
			cash.str = cash.str&"Nineteen thousand "
		else
			cash.str = cash.str&" nine thousand "
		endif
		break
	DEFAULT:
		if ten.thousands = 1 then
			cash.str = cash.str&"ten thousand "
		endif
		break 
	ENDCASE	
	
	ON CASE hundreds
	CASE 1:
		cash.str = cash.str&" one "&"hundred "
		break
	CASE 2:
		cash.str = cash.str&" two "&"hundred "
		break
	CASE 3:
		cash.str = cash.str&" three "&"hundred "
		break
	CASE 4:
		cash.str = cash.str&" four "&"hundred "
		break
	CASE 5:
		cash.str = cash.str&" five "&"hundred "
		break
	CASE 6:
		cash.str = cash.str&" six "&"hundred "
		break
	CASE 7:	
		cash.str = cash.str&" seven "&"hundred "
		break
	CASE 8:
		cash.str = cash.str&" eight "&"hundred "
		break
	CASE 9:
		cash.str = cash.str&" nine "&"hundred "
		break
	ENDCASE		

	eleven = 0

	ON CASE tens
	CASE 1:
		eleven = 1
		break
	CASE 2:
		cash.str = cash.str&"twenty "
		break
	CASE 3:
		cash.str = cash.str&"thirty "
		break
	CASE 4:
		cash.str = cash.str&"forty "
		break
	CASE 5:
		cash.str = cash.str&"fifty "
		break
	CASE 6:
		cash.str = cash.str&"sixty "
		break
	CASE 7:	
		cash.str = cash.str&"seventy "
		break
	CASE 8:
		cash.str = cash.str&"eighty "
		break
	CASE 9:
		cash.str = cash.str&"ninety "
	ENDCASE
	
	ON CASE ones
	CASE 1:
		if eleven = 1 then
			cash.str = cash.str&"Eleven "
		else
			cash.str = cash.str&" one "
		endif
		break
	CASE 2:
		if eleven = 1 then
			cash.str = cash.str&"Twelve " 
		else
			cash.str = cash.str&" two " 
		endif
		break
	CASE 3:
		if eleven = 1 then
			cash.str = cash.str&"Thirteen "
		else
			cash.str = cash.str&" three " 
		endif	
		break
	CASE 4:
		if eleven = 1 then
			cash.str = cash.str&"Fourteen "
		else
			cash.str = cash.str&" four" 
		endif
		break
	CASE 5:
		if eleven = 1 then
			cash.str = cash.str&"Fifteen"
		else
			cash.str = cash.str&" five "  
		endif	
		break
	CASE 6:
		if eleven = 1 then
			cash.str = cash.str&"Sixteen "
		else
			cash.str = cash.str&" six " 
		endif
		break
	CASE 7:	
		if eleven = 1 then
			cash.str = cash.str&"Seventeen "
		else
			cash.str = cash.str&" seven " 
		endif	
		break
	CASE 8:
		if eleven = 1 then
			cash.str = cash.str&"Eighteen "
		else
			cash.str = cash.str&" eight " 
		endif
		break
	CASE 9:
		if eleven = 1 then
			cash.str = cash.str&"Nineteen "
		else
			cash.str = cash.str&" nine " 
		endif
		break
	DEFAULT:
		if tens = 1 then
			cash.str = cash.str&"ten "
		endif
		break 
	ENDCASE	

	|*** cent 
	
	if strip$(shiftl$(cash.str)) <> "" and net.cent <> 0 then
		|cash.str = cash.str& " and " 
		cash.str = cash.str& " and cents " 
	endif

	eleven = 0
	
	ON CASE cent.tens
	CASE 1:
		eleven = 1
		break
	CASE 2:
		cash.str = cash.str&"twenty "
		break
	CASE 3:
		cash.str = cash.str&"thirty "
		break
	CASE 4:
		cash.str = cash.str&"forty "
		break
	CASE 5:
		cash.str = cash.str&"fifty "
		break
	CASE 6:
		cash.str = cash.str&"sixty "
		break
	CASE 7:	
		cash.str = cash.str&"seventy "
		break
	CASE 8:
		cash.str = cash.str&"eighty "
		break
	CASE 9:
		cash.str = cash.str&"ninety "
	ENDCASE
	
	ON CASE cent.ones
	CASE 1:
		if eleven = 1 then
			cash.str = cash.str&"Eleven "
		else
			cash.str = cash.str&"one "
		endif
		break
	CASE 2:
		if eleven = 1 then
			cash.str = cash.str&"Twelve " 
		else
			cash.str = cash.str&"two " 
		endif
		break
	CASE 3:
		if eleven = 1 then
			cash.str = cash.str&"Thirteen "
		else
			cash.str = cash.str&"three " 
		endif	
		break
	CASE 4:
		if eleven = 1 then
			cash.str = cash.str&"Fourteen "
		else
			cash.str = cash.str&"four " 
		endif
		break
	CASE 5:
		if eleven = 1 then
			cash.str = cash.str&"Fifteen"
		else
			cash.str = cash.str&"five "  
		endif	
		break
	CASE 6:
		if eleven = 1 then
			cash.str = cash.str&"Sixteen "
		else
			cash.str = cash.str&"six " 
		endif
		break
	CASE 7:	
		if eleven = 1 then
			cash.str = cash.str&"Seventeen "
		else
			cash.str = cash.str&"seven " 
		endif	
		break
	CASE 8:
		if eleven = 1 then
			cash.str = cash.str&"Eighteen "
		else
			cash.str = cash.str&"eight "
		endif
		break
	CASE 9:
		if eleven = 1 then
			cash.str = cash.str&"Nineteen "
		else
			cash.str = cash.str&"nine " 
		endif
		break
	DEFAULT:
		if cent.tens = 1 then
			cash.str = cash.str&"ten "
		endif
		break 
	ENDCASE	

	if net.cent <> 0 then
		|cash.str = cash.str & " cent"
		cash.str = cash.str & ""
	endif

	if net.amount <> 0 then
		cash.str = cash.str&" Only"
	endif
}  

|******************************************************************************
|* tfisg1402m100  0  VRC B61U a7 live
|* Print Finalized / Non - Finalized Voucher
|* Installation user             
|* 2014-10-06
|******************************************************************************
|* Form Type 4
|******************************************************************************
|*
|* ID ISGECDV001079,	Sujeet Kumar,	2014-10-06
|* New Report Development.
|* Functional: Mr. Deepak Rawat
|*
|* ISGEC001093, IT0205, Arjit Gupta, VRC B61U a7 isg, Dt. 13-10-2014
|* Logic Added for Interim for category income tax
|* Add logic to get Bill of Lading
|
|* ISG01007, IT0386, Saurabh Dubey, 14 April 2016, B61U a7 isg
|* New Field Purchase Invoice Status Added in the Report
|*
|* ISGEC017005, Mudit Sharma, 2017-02-22
|* New Group of fields added, for Net payable computation
|*
|* GST001026, IT0386, Saurabh Dubey, 24 August 2017, B61U a7 isg
|* Modificaton for Tax Ledger Data
|*
|* ISGEC01090, Arun Chauhan ,Date - 13/12/2018
|* Modificaton in SGST Tax line Print
|*
|* ID: ISGEC002028,Bharti Garg, 25-04-2019
|* Changes 
|*
|* ID: ISG01020, Bharti Garg, 24-04-2019
|* Changes 
|* 
|* ID: GH315CR613, RAvi Kumar, 19-05-2020
|* Add IR field in report
|*
|* ID: GH326CR620, RAvi Kumar, 30-05-2020
|* Auto set of values while printing voucher from transactions
|*
|* ID: GH352CR648, RAvi Kumar, 06-07-2020
|* Payment due date in print voucher
|*
|* GH413CR739, RAvi Kumar, 07-10-2020
|* Display Billing Advice Status against FOC Receipts in PTR Print
|*
|* GH457CR795, RAvi Kumar, 21-12-2020
|* Modification in Print Voucher
|*
|* GH552CR828, RAvi Kumar, 07-05-2021
|* MSME Code required in Print Voucher (Purchase)
|*
|* GH607CR936, RAvi Kumar, 19-07-2021
|* Modification in Purchase voucher in Quick Payment Session
|****************************** declaration section ***************************
declaration:
	table	ttfgld102
	table	ttfgld106
	table	ttfgld107
	table	ttfgld018
	table	ttfgld071
	table	ttfgld100
	table	ttttxt010				|ISGEC017005.n
	table	ttfacp200				|ISGEC017005.n
	table	ttfacp201				|ISGEC017005.n
	table	ttfacp203				|ISGEC017005.n
	table	ttcisg001				|ISGEC017005.n
	table	ttfisg001				|ISGEC017005.n
	table	ttfcmg100				|ISGEC017005.n
	table	ttfacp100			|ISG01020.n
	table	ttcemm030				|RAvi.a.25092020		
	table	ttfacp251				|RAvi.a.25092020
	table	ttpisg039				|GH413CR739.a
	table	ttdisg831				|GH413CR739.a
	table	ttdisg832				|GH413CR739.a
	table	ttdisg873				|GH413CR739.a
	table	ttfisg183				|GH457CR795.a
	table	ttccom001				|GH457CR795.a
	table	ttccom120				|GH552CR828.a

|******** Form Field ***********************************************************

	extern	domain	tfgld.year		fyer.f
	extern	domain	tcncmp			ncmp.f
	extern	domain	tfgld.btno		btno.f
	extern	domain	tfgld.btno		btno.t
	extern	domain	tfgld.ttyp		ttyp.f
	extern	domain	tfgld.ttyp		ttyp.t
	extern	domain	tfgld.docn		docn.f
	extern	domain	tfgld.docn		docn.t
|********** Report Variables ***************************************************	
	extern 	domain 	tcncmp		rep.company
	extern 	domain 	tcncmp		rep.target.comp
	extern	domain	tfgld.year	rep.fiscal.year
	extern 	domain	tfgld.prod	rep.fiscal.prod
	extern	domain	tfgld.year	rep.tax.year
	extern	domain	tfgld.prod	rep.tax.prod
	extern 	domain	tfgld.btno	rep.batch
	extern	domain	tfgld.ttyp	rep.ttyp
	extern	domain	tfgld.ttyp	ttyp1					|ISGEC017005.n
	extern	domain	tfgld.ttyp	tdoc1					|ISGEC017005.n
	extern	domain	tfgld.ttyp	tdoc2					|ISGEC017005.n
	extern	domain	tfgld.ttyp	tmp.ttyp				|ISGEC017005.n
	extern	domain	tfgld.docn	rep.docn
	extern	domain	tfgld.docn	ninv1					|ISGEC017005.n
	extern	domain	tfgld.docn	docn1					|ISGEC017005.n
	extern	domain	tfgld.docn	docn2					|ISGEC017005.n
	extern	domain	tfgld.docn	tmp.ninv				|ISGEC017005.n
	extern	domain	tfgld.date	rep.dcdt
	extern	domain	tfgld.leac	rep.ledger
	extern	domain	tfgld.desc	rep.ledger.dsca
	extern	domain	tfgld.dimx	rep.dimension1
	extern	domain	tfgld.desc	rep.dim1.dsca
	extern	domain	tfgld.dimx	rep.dimension2
	extern	domain	tfgld.desc	rep.dim2.dsca
	extern	domain	tfgld.dimx	rep.dimension3
	extern	domain	tfgld.desc	rep.dim3.dsca
	extern	domain	tfgld.dimx	rep.dimension4
	extern	domain	tfgld.desc	rep.dim4.dsca
	extern	domain	tfgld.dimx	rep.dimension5
	extern	domain	tfgld.desc	rep.dim5.dsca
	extern	domain	tfgld.dbcr	rep.dbcr
	extern	domain	tfgld.amnt	rep.amount
	extern	domain	tccom.bpid	rep.bpid
	extern	domain	tcnama		rep.bp.nama
	extern 	domain	tcnama		rep.user.name
| 	extern 	domain	tcnama		rep.fina.name
	extern 	domain	tcmcs.str50m	rep.fina.name
	extern	domain	tfgld.btno	rep.btno
	extern	domain	tfgld.amnt	rep.amth
	extern	domain	tfgld.amnt	rep.forgn.amnt
	extern	domain	tfcmg.cheq	rep.cheque
	extern	domain	tfgld.ttyp	rep.sales.ityp
	extern	domain	tfgld.docn	rep.sales.idoc
	extern	domain	tcmcs.str30	rep.tran.type
	extern	domain	tcdsca		rep.comp.dsca
	extern	domain	tccprj		rep.cprj
	extern	domain	tcorno		rep.orno
	extern	domain	tcccur		rep.ccur
	extern	domain	tcmcs.str8	rep.table
	extern	domain	tcdsca		rep.biln			|#ISGEC001093.n
	extern	domain	tcmcs.str25	rep.pur.inv.stat	|#ISG01007.sn
	extern	domain	tfgld.ttyp	o.appr.ttyp		
	extern	domain	tfgld.docn	o.appr.docn	
	extern	domain	tfacp.stap	o.stap			|#ISG01007.en
	extern	domain	tcmcs.str100	ledger.line(3)	|#GST001026.n

	extern	domain	tfgld.desc	sort.field1
	extern	domain	tcmcs.str60	sort.field2
	extern	domain	tfgld.desc	sort.field3		|ISGEC017005.n
	extern	domain	tcyesno		npcf.f			|ISGEC017005.n
	extern	domain	tccom.bpid	o.ifbp			|ISGEC017005.n
| 	extern	domain	tttxt.buf	text1			|ISGEC017005.n
	extern	domain	tfgld.date	pay.due.date		|ISGEC017005.n
	extern	domain	tfgld.amnt	sum.amth1		|ISGEC017005.n
	extern	domain	tfgld.amnt	sum.amth2		|ISGEC017005.n
	extern	domain	tfgld.amnt	amth3			|ISGEC017005.n
	extern	domain	tfgld.amnt	amth4			|ISGEC017005.n
	extern	domain	tcmcs.str10m	amth9			|ISGEC017005.n
	extern	domain	tcmcs.str20m	cheq1			|ISGEC017005.n
	extern	domain	tfgld.amnt	amth5			|ISGEC017005.n
	extern	domain	tfgld.amnt	amth6			|ISGEC017005.n
	extern	domain	tfgld.amnt	amth7			|ISGEC017005.n
	extern	domain	tfgld.amnt	ptr.net.payable		|ISGEC017005.n
	extern	domain	tfgld.amnt	ptr_gross_amnt		|ISGEC017005.n
	extern	domain	tfgld.amnt	sum.amth3		|ISGEC017005.n
	extern	domain	tcorno		hold.reason		|ISGEC017005.n
	extern	domain	tfgld.ttyp	tmp.ttyp		|ISGEC017005.n
	extern	domain	tfgld.docn	tmp.docn		|ISGEC017005.n
	long yy,mm,dd,lines					|ISGEC017005.n
	extern domain	tcpono		flag			|ISGEC017005.n
	extern domain	tcpono		flag1			|ISGEC017005.n
	extern domain	tcmcs.str80     buffer(99)		|ISGEC017005.n
	extern domain	tcmcs.str80	text1			|ISGEC017005.n
	extern domain	tcmcs.str30	hold.desc		|ISGEC017005.n
	extern domain	tcmcs.str30m	sum.amth8		|ISGEC017005.n
	extern domain	tcmcs.str30m	sum.amth9		|ISGEC017005.n
	extern domain	tcdsca		tax.dsca1		|ISGEC017005.n
	extern domain	tcdsca		tax.dsca2		|ISGEC017005.n
	extern domain	tcdate		oird			|ISGEC017005.n
	extern domain	tfgld.date	oird1			|ISGEC017005.n
	extern domain	tcpono		print1,print2,print3,var1,var2		|ISGEC017005.n
	
	long	yy2,mm2,dd2,hh2,mm3,ss2	, g.flag			|ISGEC017005.n
	extern	 domain		tcncmp	cur.comp		|ISG01020.n
	extern	 domain		tcdate	original_date		|ISG01020.n
	extern	domain	tfgld.docn	rep.irno		|GH315CR613.a
	extern	domain	tcmcs.str8	rep.irno.str		|GH315CR613.a
		string		session.code(13)		|GH326CR620.a
	extern	domain	tcncmp		comp.curr		|GH326CR620.a
	extern	domain	tcmcs.long	reason.flag		|GH413CR739.a
	extern	domain	tcorno		reason.data		|GH413CR739.a
	extern	domain	tcncmp		i.ncmp.185		|GH607CR936.a
	extern	domain	tfgld.btno	i.btno			|GH607CR936.a	
			long	brp_open			|GH607CR936.a	
	#include <bic_text>
	
	#define	FIX_LEDGER "9500300     "	|#GST001026.n
|****************************** program section ********************************
before.program:							|GH326CR620.a.s
	import("prog.name$", session.code)	
	comp.curr = get.compnr()
	brp_open = 0				|GH607CR936.a	
	if session.code = "tfgld1101m000" then
		import("tfgld100.year", fyer.f)
		import("comp.curr", ncmp.f)
		import("tfgld100.btno", btno.f)
		import("tfgld100.btno", btno.t)
	endif							|GH326CR620.a.e	

	
	if session.code = "tfisg1201m000" then
		import("c.btno", btno.f)
		import("c.btno", btno.t)
		import("c.year", fyer.f)
		import("i.ncmp", ncmp.f)
	endif

	if session.code = "tfisg1185m000" then			|GH607CR936.a.s
		import("tfisg185.pyad", i.btno)	
		import("tfisg185.ncmp", i.ncmp.185)		
		import("tfisg185.ttyp", ttyp.f)		
		import("tfisg185.ninv", docn.f)
		ttyp.t = ttyp.f
		docn.t = docn.f					
		btno.f = 0
		btno.t = 999999
		ncmp.f = i.ncmp.185
		npcf.f = tcyesno.yes
		switch.to.company(i.ncmp.185)			
		select tfgld102.year from tfgld102
		where tfgld102._index2 = {:i.ncmp.185,:ttyp.f,:docn.f}
		as set with 1 rows
		selectdo
			fyer.f = tfgld102.year
		selectempty
			select tfgld106.oyer from tfgld106
			where tfgld106._index1 = {:ttyp.f,:docn.f}
			as set with 1 rows
			selectdo
				fyer.f = tfgld106.oyer
			endselect
		endselect
		execute(cont.process)	
	endif							|GH607CR936.a.e
|****************************** group section **********************************

group.1:
init.group:
	if session.code <> "tfisg1201m000" then
		get.screen.defaults()
	endif

|****************************** choice section ********************************

choice.cont.process:
on.choice:
   execute(print.data)

choice.print.data:
on.choice:
	if session.code = "tfisg1185m000" then			|GH607CR936.a.new
		spool.device = "P"
		spool.preview = true
		brp_open = brp.open("rtfisg140201101", spool.device, 0)	
		read.main.table()
		brp.close(brp_open)
		end()
	else
		select 	tfgld001.ncmp
		from	tfgld001
		where	tfgld001._index1 = {:ncmp.f}
		as set with 1 rows
		selectdo
		selectempty
			message("Enter Valid Financial Company")
			choice.again()
		endselect
		switch.to.company(ncmp.f)
	   if rprt_open() then
	       read.main.table()
	       rprt_close()
	   else
	       choice.again()
	   endif
	   endif


|****************************** field section *********************************
field.fyer.f:
before.display:
	import("prog.name$", session.code)			|GH326CR620.a.s
	if session.code <> "tfgld1101m000" then 
		if session.code <> "tfisg1201m000" then
			fyer.f = get.fiscal.year(date.num())
		endif
	endif
								|GH326CR620.a.e
| field.fyer.f:
| before.display:
| 	fyer.f = get.fiscal.year(date.num())
field.ncmp.f:
before.display:
	ncmp.f = get.compnr()

field.btno.f:
when.field.changes:
	btno.t = btno.f
before.zoom:
	tfgld100.year = fyer.f

field.btno.t:
before.zoom:
	tfgld100.year = fyer.f

field.ttyp.f:
when.field.changes:
	ttyp.t = ttyp.f
	
field.docn.f:
when.field.changes:
	docn.t = docn.f
before.zoom:
	tfgld018.ttyp = ttyp.f

field.docn.t:
before.zoom:
	tfgld018.ttyp = ttyp.t
	


|****************************** function section ******************************

functions:

function domain tfgld.year get.fiscal.year
				(
					domain	tfgld.date	i.date
				)
{
	domain	tfgld.year	o.year
	domain	tfgld.date	o.stdt
	
	select tfgld005.year:o.year,
		tfgld005.stdt:o.stdt
	from	tfgld005
	where	tfgld005._index1 = {1}
	and	tfgld005.stdt <= :i.date
	order by tfgld005.stdt desc
	as set with 1 rows
	selectdo
	selectempty
		o.year = 0
	endselect
	
	return(o.year)
}
function read.main.table()
{
	initialize.variable2()		|ISGEC017005.n
	rep.pur.inv.stat = ""	|#ISG01007.n
	non.finalized.transactions()
	finalized.transactions()
}

function non.finalized.transactions()
{
	domain tcccur	o.local.currency
	
	rep.tran.type = "Non-Finalized Transactions"
	rep.table = "tfgld102"
	g.flag = 1	|#GST001026.n
	select 	tfgld102.cono,
		tfgld102.tcom,
		tfgld102.fyer,
		tfgld102.fprd,
		tfgld102.vyer,
		tfgld102.vprd,
		tfgld102.btno,
		tfgld102.year,
		tfgld102.ttyp,
		tfgld102.docn,
		tfgld102.lino,
		tfgld102.serl,
		tfgld102.dcdt,
		tfgld102.leac,
		tfgld102.dim1,
		tfgld102.dim2,
		tfgld102.dim3,
		tfgld102.dim4,
		tfgld102.dim5,
		tfgld102.wtsc,
		tfgld102.dbcr,
		tfgld102.vamh,
		tfgld102.amth,
		tfgld102.amnt,
		tfgld102.ccur,
		tfgld102.bpid,
		tfgld102.catg
	from	tfgld102
	where	tfgld102._index1 inrange {:ncmp.f,:fyer.f,:btno.f,:ttyp.f,:docn.f}
				and	{:ncmp.f,:fyer.f,:btno.t,:ttyp.t,:docn.t}
	order by tfgld102.btno
	selectdo
		assign.report.variables(
				tfgld102.cono,		|Company
				tfgld102.tcom,		|Target Company
| 				tfgld102.fyer,		|Fiscal Year
				tfgld102.year,		|Fiscal Year
				tfgld102.fprd,		|Fiscal Period
				tfgld102.vyer,		|Tax Year
				tfgld102.vprd,		|Tax Period
				tfgld102.btno,		|Batch Number
				tfgld102.ttyp,		|Transaction Type
				tfgld102.docn,		|Document Number
				tfgld102.dcdt,		|Document Date
				tfgld102.leac,		|Ledger Account
				tfgld102.dim1,		|Dimension 1
				tfgld102.dim2,		|Dimension 2
				tfgld102.dim3,		|Dimension 3
				tfgld102.dim4,		|Dimension 4
				tfgld102.dim5,		|Dimension 5
				tfgld102.dbcr,		|Debit/Credit
				tfgld102.amth(1),	|Amount		
				tfgld102.bpid)		|Business Partner
		tcemm.dll0170.get.company.local.currency( tfgld102.cono,tcyesno.no, o.local.currency) 	
		tcemm.dll0170.get.company.description( tfgld102.cono, tcyesno.no, rep.comp.dsca )
		if tfgld102.ccur <> o.local.currency then
			rep.forgn.amnt = tfgld102.amnt
		endif
		get.irno(tfgld102.ttyp, tfgld102.docn)							|GH315CR613.a
		rep.ccur = tfgld102.ccur
		pint.reasoncode(tfgld102.cono, tfgld102.ttyp, tfgld102.docn)						|GH413CR739.a	
		get.hdat.data(tfgld102.ttyp, tfgld102.docn)										|GH457CR795.a	
		on case  tfgld102.catg
		case	tfgld.catg.purchase.inv:
		case	tfgld.catg.purchase.cred:
			get.purchase.order(tfgld102.cono,tfgld102.ttyp,tfgld102.docn,rep.cprj,rep.orno)
			break
		endcase
		
		tmp.ttyp = tfgld102.ttyp								|ISGEC017005.n
		tmp.docn = tfgld102.docn								|ISGEC017005.n
		
		get_invoice_status(rep.ttyp, rep.docn)	|#ISG01007.n
		get.bp.name(o.ifbp)				|ISGEC017005.n
		select	tccom120.creg							|GH552CR828.a.s
		from	tccom120
		where	tccom120._index1 = {:o.ifbp}
		as set with 1 rows
		selectdo
		selectempty
			tccom120.creg = ""
		endselect								|GH552CR828.a.
		
		get_ptr_text(rep.ttyp, rep.docn)							|ISGEC017005.n
		get.tax.ledger.data(g.flag, rep.ttyp, rep.docn)	|#GST001026.n
| 		rprt_send()							|GH607CR936.a.s
		if brp_open > 0 then
			brp.ready(brp_open)
		else		
			rprt_send()
		endif								|GH607CR936.a.e
		
		if tfgld102.wtsc = tcyesno.yes or tfgld102.vamh(1) <> 0 then
			interim.tax.table(tfgld102.cono,tfgld102.ttyp,tfgld102.docn,
					tfgld102.lino,tfgld102.serl,tfgld102.dbcr,
					tfgld102.fprd,tfgld102.vprd,tfgld102.dcdt,
					tfgld102.bpid)
		endif
		

													|ISGEC017005.sn
| 		if 	npcf.f	 	= 	tcyesno.yes	then
| 			ptr.net.payable.computation(tfgld102.ttyp,tfgld102.docn,tfgld102.lino,rep.orno)
| 		endif
		tmp.ttyp = ""
		tmp.docn = 0
		sort.field3 = ""
	selecteos
			print1 = 0
			print2 = 0 
			print3 = 0
			if 	npcf.f	 	= 	tcyesno.yes	then
				ptr.net.payable.computation(tfgld102.ttyp,tfgld102.docn,tfgld102.lino,rep.orno)
			endif	
													|ISGEC017005.en
	endselect		
}

function interim.tax.table
			(
				domain	tcncmp		i.cono,		|Company
				domain	tfgld.ttyp	i.ttyp,		|Transactin Type
				domain	tfgld.docn	i.docn,		|Document
				domain	tfgld.lino	i.lino,		|Line
				domain	tfgld.serl	i.serl,		|Sequence No.
				domain	tfgld.dbcr	i.dbcr,		|Debit/Credit
				domain	tfgld.prod	i.fprd,		|Fiscal Period
				domain	tfgld.prod	i.vprd,		|Tax Period
				domain	tfgld.date	i.dcdt,		|Document Date
				domain	tccom.bpid	i.bpid
			)
{
	domain	tfgld.dbcr	tmp.dbcr
	tmp.dbcr = i.dbcr
	
	select 	tfgld107.cono,
		tfgld107.tcom,
		tfgld107.year,
		tfgld107.btno,
		tfgld107.year,
		tfgld107.ttyp,
		tfgld107.docn,
		tfgld107.vlac,
		tfgld107.dim1,
		tfgld107.dim2,
		tfgld107.dim3,
		tfgld107.dim4,
		tfgld107.dim5,
		tfgld107.ktax,
		tfgld107.vlac,
		tfgld107.vamh
	from	tfgld107
	where	tfgld107._index1 = {:i.cono,:i.ttyp,:i.docn,:i.lino,:i.serl}
	selectdo
		
		i.dbcr = tmp.dbcr
		on case tfgld107.ktax
			case	tcktax.vat:	
			case	tcktax.stamp.tax:	
			case	tcktax.social.contrib:	
			case	tcktax.excl.of.withhld:	
			case	tcktax.tax.settlement:	
			case	tcktax.not.applicable:	
				
				if i.dbcr = tfgld.dbcr.credit then
				else
				endif
				
				break
			case	tcktax.income.tax:
				if tfgld107.vamh(1) > 0 then
					i.dbcr = tfgld.dbcr.credit		|#ISGEC001093.n
				else
					i.dbcr = tfgld.dbcr.debit		|#ISGEC001093.n
				endif
				
				break
			case	tcktax.social.cont.exp:
					if i.dbcr = tfgld.dbcr.credit then
						i.dbcr = tfgld.dbcr.debit
					else
						i.dbcr = tfgld.dbcr.credit
					endif
				break
		endcase
		
		assign.report.variables(
				tfgld107.cono,		|Company
				tfgld107.tcom,		|Target Company
				tfgld107.year,		|Fiscal Year
				i.fprd,			|Fiscal Period
				tfgld107.year,		|Tax Year
				i.vprd,			|Tax Period
				tfgld107.btno,		|Batch Number
				tfgld107.ttyp,		|Transaction Type
				tfgld107.docn,		|Document Number
				i.dcdt,			|Document Date
				tfgld107.vlac,		|Ledger Account
				tfgld107.dim1,		|Dimension 1
				tfgld107.dim2,		|Dimension 2
				tfgld107.dim3,		|Dimension 3
				tfgld107.dim4,		|Dimension 4
				tfgld107.dim5,		|Dimension 5
				i.dbcr,			|Debit/Credt
				tfgld107.vamh(1),	|Amount	
				i.bpid)			|Business Partner
		
		
| 		rprt_send()							|GH607CR936.a.s
		if brp_open > 0 then
			brp.ready(brp_open)
		else		
			rprt_send()
		endif								|GH607CR936.a.e
	endselect
}

function get.purchase.order
			(
				domain	tcncmp		i.cono,		|Financial Comapny
				domain	tfgld.ttyp	i.ttyp,		|Transaction Type
				domain	tfgld.docn	i.docn,		|Document Number
			ref 	domain	tccprj		o.cprj,		|Project
			ref 	domain	tcorno		o.orno		|Purchase Order
			)
{
	domain	tcpono		o.pono
	domain	tcpono		o.sqnb
	
	
	select tfacp251.orno:o.orno,
		tfacp251.pono:o.pono,
		tfacp251.sqnb:o.sqnb
	from	tfacp251
	where	tfacp251._index1 = {:i.cono,:i.ttyp,:i.docn}
	and	tfacp251.otyp = 1
	as set with 1 rows
	selectdo
		if get.compnr() = 651 then		|#9384TV - By sanjeev on 23/12/2019
			select 	tdpur401.cprj:o.cprj
			from	tdpur401
			where	tdpur401._index1 = {:o.orno,:o.pono,:o.sqnb}
			and	tdpur401._compnr = 651				|#9384TV - By sanjeev on 23/12/2019
			as set with 1 rows
			selectdo
			selectempty
				o.cprj = ""
			endselect
		else
			if get.compnr() = 700 then				|RAvi.a.18112020
				select 	tdpur401.cprj:o.cprj
				from	tdpur401
				where	tdpur401._index1 = {:o.orno,:o.pono,:o.sqnb}
				and	tdpur401._compnr = 700				|#36096.n
				as set with 1 rows
				selectdo
				selectempty
					o.cprj = ""
				endselect
			else							|RAvi.a.s.18112020
				select 	tdpur401.cprj:o.cprj
				from	tdpur401
				where	tdpur401._index1 = {:o.orno,:o.pono,:o.sqnb}
				and	tdpur401._compnr = 200				|#36096.n
				as set with 1 rows
				selectdo
				selectempty
					o.cprj = ""
				endselect
			endif							|RAvi.a.E.18112020
		endif
	selectempty
		o.orno = ""
		o.cprj = ""
	endselect
	
}


function finalized.transactions()
{
	domain	tfgld.user	o.user
	domain tcccur	o.local.currency
	
	rep.tran.type = "Finalized Transactions"
	rep.table = "tfgld106"
	g.flag = 2 |#GST001026.n
	
	select 	tfgld106.otyp,
		tfgld106.odoc,
		tfgld106.ocmp,
		tfgld106.fyer,
		tfgld106.fprd,
		tfgld106.vyer,
		tfgld106.vprd,
		tfgld106.obat,
		tfgld106.dcdt,
		tfgld106.leac,
		tfgld106.dim1,
		tfgld106.dim2,
		tfgld106.dim3,
		tfgld106.dim4,
		tfgld106.dim5,
		tfgld106.dbcr,
		tfgld106.amth,
		tfgld106.bpid,
		tfgld106.oyer,
		tfgld106.amnt,
		tfgld106.ccur,
		tfgld106.trun,
		tfgld106.catg
		,tfgld106.olin							|ISGEC017005.n
	from	tfgld106
	where	tfgld106._index1 inrange {:ttyp.f,:docn.f} and {:ttyp.t,:docn.t}
	and	tfgld106.obat inrange :btno.f and :btno.t
	and	tfgld106.oyer = :fyer.f
	and	tfgld106.ocmp = :ncmp.f
	and	tfgld106.amth(1) <> 0
	order by tfgld106.obat 
	selectdo
		assign.report.variables(
				tfgld106.ocmp,		|Company
				tfgld106.ocmp,		|Target Company
				tfgld106.fyer,		|Fiscal Year
				tfgld106.fprd,		|Fiscal Period
				tfgld106.vyer,		|Tax Year
				tfgld106.vprd,		|Tax Period
				tfgld106.obat,		|Batch Number
				tfgld106.otyp,		|Transaction Type
				tfgld106.odoc,		|Document Number
				tfgld106.dcdt,		|Document Date
				tfgld106.leac,		|Ledger Account
				tfgld106.dim1,		|Dimension 1
				tfgld106.dim2,		|Dimension 2
				tfgld106.dim3,		|Dimension 3
				tfgld106.dim4,		|Dimension 4
				tfgld106.dim5,		|Dimension 5
				tfgld106.dbcr,		|Debit/Credt
				tfgld106.amth(1),	|Amount	
				tfgld106.bpid)
		

		tcemm.dll0170.get.company.local.currency( tfgld106.ocmp,tcyesno.no, o.local.currency) 
		tcemm.dll0170.get.company.description( tfgld106.ocmp, tcyesno.no, rep.comp.dsca )
		if tfgld106.ccur <> o.local.currency then
			rep.forgn.amnt = tfgld106.amnt
		endif
		
		get.irno(tfgld106.otyp, tfgld106.odoc)							|GH315CR613.a
		pint.reasoncode(tfgld106.ocmp, tfgld106.otyp, tfgld106.odoc)						|GH413CR739.a		
		get.hdat.data(tfgld106.otyp, tfgld106.odoc)								|GH457CR795.a	
		rep.ccur = tfgld106.ccur
		
		on case  tfgld106.catg
			case	tfgld.catg.purchase.inv:
			case	tfgld.catg.purchase.cred:
				get.purchase.order(tfgld106.ocmp,tfgld106.otyp,tfgld106.odoc,rep.cprj,rep.orno)
				break
		endcase
		
		select tfgld109.trus:o.user 
		from	tfgld109
		where	tfgld109._index1 = {:tfgld106.oyer,:tfgld106.trun}
		as set with 1 rows
		selectdo
		endselect
		
		tmp.ttyp = tfgld106.otyp								|ISGEC017005.n
		tmp.docn = tfgld106.odoc								|ISGEC017005.n
		
		rep.fina.name = get.user.name(o.user)	
		
		get_invoice_status(rep.ttyp, rep.docn)	|#ISG01007.n
		get.tax.ledger.data(g.flag, rep.ttyp, rep.docn)	|#GST001026.n
		get.bp.name(o.ifbp)				|ISGEC017005.n
		select	tccom120.creg							|GH552CR828.a.s
		from	tccom120
		where	tccom120._index1 = {:o.ifbp}
		as set with 1 rows
		selectdo
		selectempty
			tccom120.creg = ""
		endselect								|GH552CR828.a.
		get_ptr_text(rep.ttyp, rep.docn)
		print1 = 0					|ISGEC017005.n
| 		rprt_send()							|GH607CR936.a.s
		if brp_open > 0 then
			brp.ready(brp_open)
		else		
			rprt_send()
		endif								|GH607CR936.a.e
													|ISGEC017005.sn
| 		if 	npcf.f	 	= 	tcyesno.yes	then
| 			ptr.net.payable.computation(tfgld106.otyp,tfgld106.odoc,tfgld106.olin,rep.orno)
| 		endif
| 		
		tmp.ttyp = ""
		tmp.docn = 0
	selecteos
		print1 = 0
		if 	npcf.f	 	= 	tcyesno.yes	then
			ptr.net.payable.computation(tfgld106.otyp,tfgld106.odoc,tfgld106.olin,rep.orno)
		endif
													|ISGEC017005.en
	endselect
}


function initilized.report.variables()
{
	
	rep.company 	= 0
	rep.target.comp = 0 
	rep.fiscal.year = 0
	rep.fiscal.prod = 0
	rep.tax.year 	= 0
	rep.tax.prod 	= 0
	rep.batch	= 0
	rep.ttyp 	= ""
	rep.docn 	= 0
	rep.dcdt 	= 0
	rep.ledger 	= ""
	rep.ledger.dsca = ""
	rep.dimension1 	= ""
	rep.dim1.dsca 	= ""
	rep.dimension2 	= ""
	rep.dim2.dsca 	= ""
	rep.dimension3	= ""
	rep.dim3.dsca 	= ""
	rep.dimension4 	= ""
	rep.dim4.dsca 	= ""
	rep.dimension5 	= ""
	rep.dim5.dsca 	= ""
	rep.amount 	= 0.0
	rep.dbcr 	= empty
	sort.field1 	= ""
	sort.field2 	= ""
	rep.user.name 	= ""
	rep.cheque	= ""
	rep.btno 	= 0
	rep.amth	= 0
	rep.sales.ityp 	= ""
	rep.sales.idoc 	= 0
	rep.fina.name 	= ""
	rep.forgn.amnt	= 0 
	rep.comp.dsca	= ""
| 	rep.cprj	= ""
| 	rep.orno	= ""
}

function assign.report.variables
			(
				domain	tcncmp		i.cono,		|Company
				domain	tcncmp		i.tcom,		|Target Company
				domain	tfgld.year	i.fyer,		|Fiscal Year
				domain	tfgld.prod	i.fprd,		|Fiscal Period
				domain	tfgld.year	i.vyer,		|Tax Year
				domain	tfgld.prod	i.vprd,		|Tax Period
				domain	tfgld.btno	i.btno,		|Batch Number
				domain	tfgld.ttyp	i.ttyp,		|Transaction Type
				domain	tfgld.docn	i.docn,		|Document Number
				domain	tfgld.date	i.dcdt,		|Document Date
				domain	tfgld.leac	i.leac,		|Ledger Account
				domain	tfgld.dimx	i.dim1,		|Dimension 1
				domain	tfgld.dimx	i.dim2,		|Dimension 2
				domain	tfgld.dimx	i.dim3,		|Dimension 3
				domain	tfgld.dimx	i.dim4,		|Dimension 4
				domain	tfgld.dimx	i.dim5,		|Dimension 5
				domain	tfgld.dbcr	i.dbcr,		|Debit/Credit
				domain	tfgld.amnt	i.amth,		|Amount
				domain	tccom.bpid	i.bpid		|Business Partner
			)
{
	initilized.report.variables()
		
	rep.company 	= i.cono
	rep.target.comp = i.tcom
	rep.fiscal.year = i.fyer
	rep.fiscal.prod = i.fprd
	rep.tax.year 	= i.vyer
	rep.tax.prod 	= i.vprd
	rep.batch	= i.btno
	rep.ttyp 	= i.ttyp
	rep.docn 	= i.docn
	rep.dcdt 	= i.dcdt
	rep.ledger 	= i.leac
	rep.ledger.dsca = get.ledger.description(i.leac)
	rep.dimension1 	= i.dim1
	rep.dim1.dsca 	= get.dimension.description(1,i.dim1)
	rep.dimension2 	= i.dim2
	rep.dim2.dsca 	= get.dimension.description(2,i.dim2)
	rep.dimension3	= i.dim3
	rep.dim3.dsca 	= get.dimension.description(3,i.dim3)
	rep.dimension4 	= i.dim4
	rep.dim4.dsca 	= get.dimension.description(4,i.dim4)
	rep.dimension5 	= i.dim5
	rep.dim5.dsca 	= get.dimension.description(5,i.dim5)
	
	rep.dbcr 	= i.dbcr
	rep.amount 	= i.amth
	
	rep.bpid 	= i.bpid
	rep.bp.nama 	= get.bp.name(i.bpid)
	
	rep.user.name	= get.user.code(rep.fiscal.year,rep.batch)
	
	rep.cheque	= get.cheque.number(rep.ttyp,rep.docn)
	
	payment.or.direct.debit.batch(rep.ttyp,rep.docn,rep.btno,rep.amth)
	
| 	get.sales.invoice.document(rep.ttyp,rep.docn,rep.sales.ityp,rep.sales.idoc)		|#36084.o
| 	get.sales.invoice.document(rep.target.comp,rep.ttyp,rep.docn,rep.sales.ityp,rep.sales.idoc)		|#36084.n
								|#ISGEC001093.sn
	rep.biln = ""
| 	Get_Bill_of_Lading(i.ttyp, i.docn, rep.biln)		|#ISGEC002028.o
	

								|#ISGEC001093.en
	
	sort.field1 = rep.ttyp & "/" & str$(rep.docn)
	sort.field2 = strip$(rep.ledger) & " " & strip$(rep.dimension1) & " " & strip$(rep.dimension2)
^			& " " & strip$(rep.dimension3) & " " & strip$(rep.dimension4) 
^			& " " & strip$(rep.dimension5) 
	
}

function domain tfgld.desc get.ledger.description
			(
				domain	tfgld.leac	i.leac
			)
{
	domain	tfgld.desc	o.desc
	
	select	tfgld008.desc:o.desc
	from	tfgld008
	where	tfgld008._index1 = {:i.leac}
	as set with 1 rows
	selectdo
	selectempty
		o.desc = ""
	endselect
	
	return(o.desc)
}

function domain tfgld.desc get.dimension.description
			(
				domain	tfgld.dimn	i.dtyp,		|Dimension Type
				domain	tfgld.dimx	i.dimx		|Dimension
			)
{
	domain 	tfgld.desc	o.desc
	
	select	tfgld010.desc:o.desc
	from	tfgld010
	where	tfgld010._index1 = {:i.dtyp,:i.dimx}
	as set with 1 rows
	selectdo
	selectempty
		o.desc = ""
	endselect
	
	return(o.desc)
}


function domain tcnama	get.bp.name
			(
				domain	tccom.bpid	i.bpid
			)
{
	domain	tcnama	o.nama
	
	select	tccom100.nama:o.nama
	from	tccom100
	where	tccom100._index1 = {:i.bpid}
	as set with 1 rows
	selectdo
	selectempty
		o.nama = ""
	endselect
	
	return(o.nama)
}


function domain tcnama get.user.code
			(
				domain	tfgld.year	i.year,
				domain	tfgld.btno	i.btno
			)
{
	domain 	tfgld.user	o.user
	domain	tcnama		o.name
	
	select 	tfgld100.user:o.user
	from	tfgld100
	where	tfgld100._index1 = {:i.year,:i.btno}
	as set with 1 rows
	selectdo
		o.name = get.user.name(o.user)		
	selectempty
		o.name = ""
	endselect
	
	return(o.name)
}


function domain tcnama get.user.name
			(
				domain	tfgld.user	i.user
			)
{
| 	domain 	tcnama	o.name
	domain 	tcmcs.str50m	o.name
	
	select 	ttaad200.name:o.name
	from	ttaad200
	where	ttaad200._index1 = {:i.user}
	and	ttaad200._compnr = 0
	as set with 1 rows
	selectdo
	selectempty
		o.name = ""
	endselect
	return(o.name)
}

function domain tfcmg.cheq get.cheque.number
			(
				domain	tfgld.ttyp	i.ttyp,
				domain	tfgld.docn	i.docn
			)
{
	domain	tfcmg.cheq	o.cheq
	
	select tfcmg100.cheq:o.cheq
	from	tfcmg100
	where 	tfcmg100.typo = :i.ttyp
	and	tfcmg100.doco = :i.docn
	selectdo
	selectempty
		select tfcmg100.cheq:o.cheq
		from	tfcmg100
		where 	tfcmg100.ttyp = :i.ttyp
		and	tfcmg100.docn = :i.docn
		selectdo
		selectempty
			o.cheq = ""
		endselect
	endselect
	
	return(o.cheq)
}


function payment.or.direct.debit.batch
			(
				domain	tfgld.ttyp	i.ttyp,
				domain	tfgld.docn	i.docn,
			ref	domain	tfgld.btno	o.btno,
			ref 	domain	tfgld.amnt	o.amth
			)
{
	
	select 	tfcmg103.btno:o.btno, 
		tfcmg103.amth(1):o.amth
	from	tfcmg103
	where	tfcmg103.ttyp = :i.ttyp
	and	tfcmg103.docn = :i.docn
	as set with 1 rows
	selectdo
	selectempty
		select 	tfcmg403.btno:o.btno, 
			tfcmg403.amth(1):o.amth
		from	tfcmg403
		where	tfcmg403.ttyp = :i.ttyp
		and	tfcmg403.docn = :i.docn
		as set with 1 rows
		selectdo
		selectempty
			o.btno = 0
			o.amth = 0
		endselect
	endselect
}


function get.sales.invoice.document
			(
				domain	tcncmp		i.ncmp,		|#36084.n
				domain	tfgld.ttyp	i.ttyp,
				domain	tfgld.docn	i.docn,
			ref 	domain	tfgld.ttyp	o.ityp,
			ref 	domain	tfgld.docn	o.idoc
			)
{
									|#36084.sn
	if tfisg.dll1402.get.sales.invoice.from.ir(i.ncmp,i.ttyp,i.docn,
		o.ityp,o.idoc) then
	else
	endif
									|#36084.en
	
					


| 						|#36084.so
| 	select 	tfisg001.ityp:o.ityp,
| 		tfisg001.idoc:o.idoc
| 	from	tfacp100,tfisg001
| 	where	tfacp100._index4 = {:i.ttyp,:i.docn}
| 	and 	tfacp100.ninv refers to tfisg001
| 	as set with 1 rows
| 	selectdo
| 	selectempty
| 		o.ityp = ""
| 		o.idoc = 0
| 	endselect
						|#36084.eo
}

						|#ISGEC001093.sn
function Get_Bill_of_Lading
			(
			domain	tfgld.ttyp	in.ttyp,
			domain	tfgld.docn	in.docn,
		ref	domain	tcdsca		ot.biln
			)
{
	domain	whinh.shpm	t_rcno
	domain	tcpono		t_rseq, t_pono
	domain	tcorno		t_orno, t_cinv, t_bold
	domain	tcitem		t_item
	
	t_rcno = ""
	t_orno = ""
	t_cinv = ""
	t_bold = ""
	t_item = ""
	t_rseq = 0
	t_pono = 0
	
	select	bl_tfacp251.rcno:t_rcno,
		bl_tfacp251.rseq:t_rseq,
		bl_tfacp251.orno:t_orno,
		bl_tfacp251.pono:t_pono
	from	tfacp251 bl_tfacp251
	where	bl_tfacp251.ityp = :in.ttyp
	and	bl_tfacp251.idoc = :in.docn
	order by bl_tfacp251.rcno desc, bl_tfacp251.rseq desc
	as set with 1 rows
	selectdo
		select	bl_tdpur401.item:t_item
		from	tdpur401 bl_tdpur401
		where	bl_tdpur401._index1 = {:t_orno, :t_pono}
		as set with 1 rows
		selectdo
		endselect
		
		select	bl_tdisg832.cinv:t_cinv
		from	tdisg832 bl_tdisg832
		where	bl_tdisg832._index4 = {:t_rcno, :t_rseq}
		and	bl_tdisg832.item = :t_item
		and	bl_tdisg832.cinv <> "         " 
		selectdo
		endselect
		
		select	bl_tdisg831.bold:t_bold
		from	tdisg831 bl_tdisg831
		where	bl_tdisg831._index3 = {:t_cinv}
		as set with 1 rows
		selectdo
		endselect
		
		select	bl_tdisg839.biln:ot.biln
		from	tdisg839 bl_tdisg839
		where	bl_tdisg839._index1 = {:t_bold}
		selectdo
		endselect
	endselect	
}			
									|#ISGEC001093.en
									

				|#ISG01007.sn
function get_invoice_status(domain tfgld.ttyp i.ttyp, domain tfgld.docn i.ninv)
{
	select	tfacp200.stap:o.stap, tfacp200.tapr:o.appr.ttyp,
		tfacp200.dapr:o.appr.docn
		,tfacp200.ifbp:o.ifbp					|ISGEC017005.n
	from	tfacp200
	where	tfacp200._index1 = {:i.ttyp, :i.ninv}
	and 	tfacp200.tpay = tfacp.tpay.invoice
	selectdo
		rep.pur.inv.stat = enum.descr$("tfacp.stap", o.stap)
	selectempty
		rep.pur.inv.stat = ""
	endselect
}
				|#ISG01007.en

function get_ptr_text(domain tfgld.ttyp i.ttyp, domain tfgld.docn i.ninv)
{
	select	tfacp200.text
	from	tfacp200
	where	tfacp200._index1 = {:i.ttyp, :i.ninv}
	as set with 1 rows
	selectdo
		select 	tttxt010.text
		from	tttxt010
		where	tttxt010._index1 = {:tfacp200.text}
		selectdo
| 			text1 = text.to.buf("tttxt010.text",2,10,buffer)
			lines = text.to.buf("tfacp200.text", language$, 15, buffer)
			text1 = buffer(1,1)
		endselect
	endselect	
}


													|ISGEC017005.sn
function ptr.net.payable.computation(	domain	tfgld.ttyp	i.ttyp,			|Transactin Type
					domain	tfgld.docn	i.docn,			|Document
					domain	tfgld.lino	i.lino,			|Line
					domain	tcorno		rep.orno1)		|Order
{
| 	select	tfacp200.*
| 	from	tfacp200
| 	where	tfacp200._index1	=	{:i.ttyp,:i.docn}	
| 	selectdo
| 		print1 = 1
		sort.field3	=	i.ttyp & "/" & str$(i.docn)
| 		sort.field3	=	"abc"
		get_invoice_status(i.ttyp, i.docn)
		get.tax.ledger.data(g.flag, rep.ttyp, rep.docn)	|#GST001026.n
		get.bp.name(o.ifbp)
		
		select	tccom120.creg							|GH552CR828.a.s
		from	tccom120
		where	tccom120._index1 = {:o.ifbp}
		as set with 1 rows
		selectdo
		selectempty
			tccom120.creg = ""
		endselect								|GH552CR828.a.e
		get.pay.due.date(i.ttyp, i.docn, rep.orno1)	
		get_ptr_gross_amnt(i.ttyp, i.docn, i.lino)
		get.withholding.data(i.ttyp, i.docn)	
		paid_amnt_schedule_wise(i.ttyp, i.docn, i.lino)
		get.unpaid.amnt(i.ttyp, i.docn, i.lino)	
		get.ptr.net.payable.amnt()
| 	endselect
}

function get.pay.due.date(domain tfgld.ttyp i.ttyp, domain tfgld.docn i.ninv, domain	tcorno	o.orno)
{
	domain	tfgld.docn	ninv.paydate
	cur.comp = get.compnr()			|#ISG01020.n
	
| 	select	tfisg001.irno								|RAvi.a.s25092020
| 	from	tfisg001
| 	where	tfisg001.invt		=	:i.ttyp
| 	and	tfisg001.pinv		=	:i.ninv
| 	and	tfisg001.ncmp 		= 	:cur.comp				|ISG01020.n
| 	selectdo
| 	endselect
| 	
| 	select	tfacp100.*
| 	from	tfacp100
| 	where	tfacp100._index1 = {:tfisg001.irno}
| 	selectdo
| 		get.var(pid,"tfacp100.cdf_oird",oird)
		|if oird = 0 then						|ISG01020.sn
		|	message("Date Not Filled.")
		|endif								|ISG01020.en
| 	endselect
	
| 	utc.to.date(oird,yy2,mm2,dd2,hh2,mm3,ss2)
| 	oird1 = date.to.num(yy2,mm2,dd2)

	select	tfacp251.shpm
	from	tfacp251
	where	tfacp251._index1 = {:ncmp.f, :i.ttyp, :i.ninv}
	and	tfacp251._compnr = :ncmp.f
	as set with 1 rows
	selectdo
	endselect
	
	ninv.paydate = lval(tfacp251.shpm)
	
	select	tcemm030.lcmp
	from	tcemm030
	where	tcemm030.fcmp = :cur.comp
	as set with 1 rows
	selectdo
	endselect

	select	tfacp100.ninv,
		tfacp100.cdf_oird
	from	tfacp100
	where	tfacp100._index1 = {:ninv.paydate}
	and	tfacp100._compnr = :tcemm030.lcmp
	as set with 1 rows
	selectdo
		get.var(pid,"tfacp100.cdf_oird",oird)
	endselect								|RAvi.a.e.25092020
	
	if oird <> 0 then							|Gh352CR648.a.s
		utc.to.date(oird,yy2,mm2,dd2,hh2,mm3,ss2)
		oird1 = date.to.num(yy2,mm2,dd2)
	else
		oird1 = 0
	endif									|Gh352CR648.a.e
	
	select	tcisg001.nods
	from	tcisg001
	where	tcisg001._index1 	=	{:o.orno}
	and 	tcisg001.catg		= 	tcisg.catg.running.payment
| 	and 	tcisg001._compnr 	=	200
	and 	tcisg001._compnr 	=	:tcemm030.lcmp			|GH515CR000.a.Ravi
	selectdo
	endselect
	
| 	pay.due.date	= 	oird1	+	tcisg001.nods
	|num.to.date(oird,yy,mm,dd)
| 	num.to.date(pay.due.date,yy,mm,dd)

	
	if oird <> 0 then						|Gh352CR648.a.s
		pay.due.date	= 	oird1	+	tcisg001.nods
| 		num.to.date(oird,yy,mm,dd)
		num.to.date(pay.due.date,yy,mm,dd)
	else
		pay.due.date = 0
	endif	
}

function get_ptr_gross_amnt(domain tfgld.ttyp i.ttyp, domain tfgld.docn i.ninv, domain tfgld.lino i.lino)
{
	select	sum(tfacp200.amth(1)):amth7
	from	tfacp200
	where	tfacp200._index1 	=	{:i.ttyp,:i.ninv}			|MAIN DOC
	and	tfacp200.docn 		=	0
	selectdo
	endselect
	
	select	tfacp203.amth, tfacp203.txtp
	from	tfacp203
	where	tfacp203._index1	=	{:i.ttyp, :i.ninv}
	selectdo
		if 	tfacp203.txtp	= 	tctax.txtp.income.tax	then	
			sum.amth3 	= 	sum.amth3 + tfacp203.amth(1)
		endif
	endselect
	ptr_gross_amnt = amth7 + sum.amth3
}
function get.withholding.data(domain tfgld.ttyp i.ttyp, domain tfgld.docn i.ninv)
{
	select	tfacp203.amth,
		tfacp203.txtp,
		tfacp203.txcg,
		tfacp203.cvat
	from	tfacp203
	where	tfacp203._index1	=	{:i.ttyp, :i.ninv}
	selectdo
| 		if 	tfacp203.txtp	= 	tctax.txtp.income.tax	then	
| 			sum.amth1 	= 	sum.amth1 + tfacp203.amth(1)
| 		else if tfacp203.txtp	=	tctax.txtp.social.contr	then
| 			sum.amth2	= 	sum.amth1 + tfacp203.amth(1)
| 		endif
| 		endif
| 		if 	strip$(shiftl$(tfacp203.txcg))	= 	"TDS-194C"	or	strip$(shiftl$(tfacp203.txcg))	=	"TDS"	then	
		if 	strip$(shiftl$(tfacp203.txcg(1;3)))	=	"TDS"	then	
			select	tcmcs036.dsca:tax.dsca1
			from	tcmcs036
			where	tcmcs036.cvat = :tfacp203.cvat
			selectdo
			endselect
			sum.amth1 	= 	sum.amth1 + tfacp203.amth(1)
			sum.amth8	= 	"-"&str$(sum.amth1)
| 		else if strip$(shiftl$(tfacp203.txcg))	=	"WCT-CT"	or	strip$(shiftl$(tfacp203.txcg))	=	"WCT"	then
		else if	strip$(shiftl$(tfacp203.txcg(1;3)))	=	"WCT"	then
			select	tcmcs036.dsca:tax.dsca2
			from	tcmcs036
			where	tcmcs036.cvat = :tfacp203.cvat
			selectdo
			endselect
| 			sum.amth2	= 	sum.amth1 + tfacp203.amth(1)
			sum.amth2	= 	sum.amth2 + tfacp203.amth(1)
			sum.amth9	= 	"-"&str$(sum.amth2)
		endif
		endif
	endselect
	print1 = 1
| 	rprt_send()		|test.n							|GH607CR936.a.s
	if brp_open > 0 then
		brp.ready(brp_open)
	else		
		rprt_send()
	endif								|GH607CR936.a.e
}

function paid_amnt_schedule_wise(domain tfgld.ttyp i.ttyp, domain tfgld.docn i.ninv, domain tfgld.lino i.lino)
{
	print2 = 0
| 	print1 = 0
	ninv1 = 0
	ttyp1 =""
	amth3 = 0
	select	tfacp200.amth,
		tfacp200.ttyp,
		tfacp200.ninv,
		tfacp200.pysh
	from	tfacp200
	where	tfacp200._index1 	=	{:i.ttyp,:i.ninv}
	and 	tfacp200.pysh		= 	tcyesno.yes
	selectdo
| 		amth3 = tfacp200.amth(1)
		select	tfacp200.ttyp:ttyp1,
			tfacp200.ninv:ninv1,
			tfacp200.doca:docn1,
			tfacp200.typa:tdoc1,
			tfacp200.tdoc:tdoc2,
			tfacp200.docn:docn2,
			tfacp200.tpay,
			tfacp200.amth,
			tfacp200.pdoc,
			tfacp200.pcom				| TV-#12387 by Sanjeev on 24/06/2020 again
			|,tfcmg100.chst
		from	tfacp200|,tfcmg100
		where	tfacp200._index1 	=	{:tfacp200.ttyp,:tfacp200.ninv}
		and 	tfacp200.docn		<>	0
| 		and 	tfacp200.pdoc		<>	""
| 		and 	tfcmg100.cheq = :tfacp200.pdoc
| 		and 	tfcmg100.chst = tfcmg.chst.paid or tfcmg100.chst = tfcmg.chst.anticipated
| 		and 	tfacp200.tpay		= 	tfacp.tpay.normal or tfacp200.tpay = tfacp.tpay.assignment or tfacp200.tpay = tfacp.tpay.credit
		selectdo
			cheq1 = trim$(tfacp200.pdoc)
			tdoc1 = trim$(tdoc1)
| 			if 	cheq1 <> ""	then
| 			tfacp200.pdoc = strip$(shiftl$(tfacp200.pdoc))
| 			cheq1 = trim$(tfacp200.pdoc)

| 				select	tfcmg100.chst
			if 	docn1 = 0	then
				docn1 = docn2
				tdoc1 = tdoc2
				amth3 = tfacp200.amth(1)
				amth6 = amth6 + amth3
				print1 = 2
				flag =  1
| 				rprt_send()							|GH607CR936.a.s
				if brp_open > 0 then
					brp.ready(brp_open)
				else		
					rprt_send()
				endif								|GH607CR936.a.e
				flag =  0
			endif
| 			if docn1 <> 0	and 	cheq1 <> "" then
| 			if tdoc1 <> ""	and 	cheq1 <> "" then
| 			if cheq1 <> "" then
				select	tfcmg100.*
				from	tfcmg100
				where	tfcmg100.cheq = :tfacp200.pdoc
| 				where	tfcmg100.cheq = :cheq1
				and 	tfcmg100.typo = :tdoc1
				and 	tfcmg100.doco = :docn1
| 				and 	tfcmg100.chst = tfcmg.chst.paid or tfcmg100.chst = tfcmg.chst.anticipated
				and 	tfcmg100.chst in (5,7)
				and	tfcmg100._compnr = :tfacp200.pcom	| TV-#12387 by Sanjeev on 24/06/2020 again
				as set with 1 rows
				selectdo
| 					if	tfcmg100.typo = tdoc1 and	tfcmg100.doco = docn1	then
						amth3 = tfacp200.amth(1)
						amth6 = amth6 + amth3
						print1 = 2
						flag =  1
| 						rprt_send()							|GH607CR936.a.s
						if brp_open > 0 then
							brp.ready(brp_open)
						else		
							rprt_send()
						endif								|GH607CR936.a.e
						flag =  0
| 					endif
				endselect
| 			else
| 				docn1 = docn2
| 				tdoc1 = tdoc2
| 				amth3 = tfacp200.amth(1)
| 				amth6 = amth6 + amth3
| 				print1 = 2
| 				flag =  1
| 				rprt_send()
| 				flag =  0
| 			endif
| 			endif
| 			endselect
		endselect
	endselect
	var1 = 1
}

function get.unpaid.amnt(domain tfgld.ttyp i.ttyp, domain tfgld.docn i.ninv, domain tfgld.lino i.lino)
{
| 		print1 = 0
| 		print3 = 0
		select	tfacp201.*
		from	tfacp201
| 		where	tfacp201._index1	=	{:tmp.ttyp,:tmp.ninv}
		where	tfacp201._index1	=	{:i.ttyp,:i.ninv}
		and 	tfacp201.cdf_bloc	<>	""
		selectdo
| 			print3 = 1
			print1 = 3
| 			flag1 =  1
			get.var(pid,"tfacp201.cdf_bloc",hold.reason)
			amth4 = tfacp201.balc
			amth9 = "-"&str$(tfacp201.balc)
			amth5 = amth5 + tfacp201.balc
			select	tfacp002.desc:hold.desc
			from	tfacp002
			where	tfacp002._index1 = {:hold.reason}
			selectdo
			endselect
| 			rprt_send()							|GH607CR936.a.s
			if brp_open > 0 then
				brp.ready(brp_open)
			else		
				rprt_send()
			endif								|GH607CR936.a.e
			flag1 = 0
		endselect
		var2 = 1
| 	endselect	
}
				|#GST001026.sn
function get.tax.ledger.data
			(
					long		i.flag,
				domain	tfgld.ttyp	i.rep.ttyp,
				domain	tfgld.docn	i.rep.docn
			)
{
	domain	tfgld.amnt	sum.leac.amnt(5) ,temp.sum.amnt
	domain	tfgld.leac	temp.leac, get.GL.code, purchase.GL(5), GL.code
	domain	tcccty		temp.ccty
	domain	tccvat		temp.cvat
	domain	tcdsca		GL.code.desc
		long		count.val, i,loop.count
		boolean		assign.ledger
	
	i = 0
	count.val = 0
	loop.count = 0
	
	for i = 1 to 5
		purchase.GL(1, i) = ""
		sum.leac.amnt(i) = 0.00
	endfor
	
	
	if i.flag = 1 then
		select	tfgld102.leac:temp.leac,
			tfgld102.ccty:temp.ccty,
			tfgld102.cvat:temp.cvat
		from	tfgld102
		where	tfgld102._index2 = {
					:ncmp.f,
					:i.rep.ttyp,
					:i.rep.docn
					}
		and	tfgld102.leac = FIX_LEDGER
		and	tfgld102.cvat <> "STCS00001"					|GH457CR795.a
		group by tfgld102.leac, tfgld102.ccty, tfgld102.cvat
		selectdo	
			select	tfgld071.vacp:get.GL.code
			from	tfgld071
			where	tfgld071._index1 = {:temp.ccty, :temp.cvat}
			selectdo
			selectempty
				get.GL.code = ""
			endselect
			
			select	sum(tfgld102.amth(1)):temp.sum.amnt
			from	tfgld102
			where	tfgld102._index2 = {
						:ncmp.f,
						:i.rep.ttyp,
						:i.rep.docn
						}
			and	tfgld102.leac = :temp.leac
			and	tfgld102.ccty = :temp.ccty
			and	tfgld102.cvat = :temp.cvat
			selectdo
			selectempty
				temp.sum.amnt = 0.00
			endselect
			
			assign.ledger = true
			
			for i = 1 to 5
				if purchase.GL(1, i) = get.GL.code then
					sum.leac.amnt(i) = sum.leac.amnt(i) + temp.sum.amnt
					assign.ledger = false
					break
				endif
			endfor	

			if assign.ledger = true then		|* For Accumulating the Purchase Ledgers assigned for different Tax Codes	
			if 	temp.sum.amnt <> 0.00 then				|#ISGEC01090.sn
				loop.count = loop.count + 1	
				purchase.GL(1, loop.count) = get.GL.code
				sum.leac.amnt(loop.count) = temp.sum.amnt		
			endif								|#ISGEC01090.en
| 				loop.count = loop.count + 1				|#ISGEC01090.so
| 				purchase.GL(1, loop.count) = get.GL.code
| 				sum.leac.amnt(loop.count) = temp.sum.amnt		|#ISGEC01090.eo
			endif	
		endselect
	else
		select	tfgld106.leac:temp.leac,
			tfgld106.ccty:temp.ccty,
			tfgld106.cvat:temp.cvat
		from	tfgld106
		where	tfgld106._index1 = {:i.rep.ttyp, :i.rep.docn}
		and	tfgld106.leac = FIX_LEDGER
		group by tfgld106.leac, tfgld106.ccty, tfgld106.cvat
		selectdo	
			select	tfgld071.vacp:get.GL.code
			from	tfgld071
			where	tfgld071._index1 = {:temp.ccty, :temp.cvat}
			selectdo
			selectempty
				get.GL.code = ""
			endselect
			
			select	sum(tfgld106.amth(1)):temp.sum.amnt
			from	tfgld106
			where	tfgld106._index1 = {:i.rep.ttyp, :i.rep.docn}
			and	tfgld106.leac = :temp.leac
			and	tfgld106.ccty = :temp.ccty
			and	tfgld106.cvat = :temp.cvat
			selectdo
			selectempty
				temp.sum.amnt = 0.00
			endselect
			
			assign.ledger = true
			
			for i = 1 to 5
				if purchase.GL(1, i) = get.GL.code then
					sum.leac.amnt(i) = sum.leac.amnt(i) + temp.sum.amnt
					assign.ledger = false
					break
				endif
			endfor	

			if assign.ledger = true then		|* For Accumulating the Purchase Ledgers assigned for different Tax Codes 
			if 	temp.sum.amnt <> 0.00 then				|#ISGEC01090.sn	
				loop.count = loop.count + 1
				purchase.GL(1, loop.count) = get.GL.code
				sum.leac.amnt(loop.count) = temp.sum.amnt		
			endif								|#ISGEC01090.en
| 				loop.count = loop.count + 1				|#ISGEC01090.so
| 				purchase.GL(1, loop.count) = get.GL.code
| 				sum.leac.amnt(loop.count) = temp.sum.amnt		|#ISGEC01090.eo
			endif	
		endselect
		
	endif

	i = 0
	
	for i = 1 to 2	|* As only Two Lines of Tax have to be printed
		GL.code = purchase.GL(1, i)
		
		tfgld.dll5008.get.ledger.account.description(ncmp.f, GL.code, GL.code.desc)
		
		ledger.line(1, i) = 	trim$(GL.code) & " - " &
					trim$(GL.code.desc) & "    " &
					str$(sum.leac.amnt(i))
					
		if isspace(GL.code) and sum.leac.amnt(i) = 0.00 then
			ledger.line(1, i) = ""
		endif				
	endfor			
}
				|#GST001026.en

function get.ptr.net.payable.amnt()
{
| 	ptr.net.payable = ptr_gross_amnt - sum.amth1 - sum.amth2 - abs(amth6)		
	ptr.net.payable = ptr_gross_amnt - sum.amth1 - sum.amth2 - abs(amth6) - amth5
	print1 = 4
| 	rprt_send()							|GH607CR936.a.s
	if brp_open > 0 then
		brp.ready(brp_open)
	else		
		rprt_send()
	endif								|GH607CR936.a.e
	print1 = 0
}

function	initialize.variable2()
{
	sum.amth1 = 0
	sum.amth2 = 0
	sum.amth3 = 0
	amth5 = 0
	amth6 = 0
}

														|ISGEC017005.en
														
function get.irno(	domain	tfgld.ttyp	irno.ttyp,						|GH315CR613.a.s
			domain	tfgld.docn	irno.docn)
{
	rep.irno = 0
	rep.irno.str = ""
	
	select	tfacp100.ninv:rep.irno
	from	tfacp100, tfisg001
	where	tfacp100._index4 = {:irno.ttyp, :irno.docn}
	and	tfisg001.ncmp = :ncmp.f
	and 	tfacp100.ninv refers to tfisg001
	as set with 1 rows
	selectdo
		rep.irno.str = str$(rep.irno)
	selectempty
		rep.irno = 0
		rep.irno.str = ""
	endselect
}
													|GH315CR613.e.s
																
function pint.reasoncode(	domain	tcncmp		i.comp,						|GH413CR739.a.s
				domain	tfgld.ttyp	i.ttyp,						
				domain	tfgld.docn	i.docn)
{
	reason.flag = 0
	
	select	tcemm030.lcmp 
	from	tcemm030
	where	tcemm030.fcmp = :i.comp
	as set with 1 rows
	selectdo
	endselect
	
	select	tfacp251.rcno,
		tfacp251.rseq
	from 	tfacp251	
	where	tfacp251._index1 = {:i.comp, :i.ttyp, :i.docn}
	and	tfacp251._compnr = :ncmp.f
	as set with 1 rows
	selectdo
		select	tdisg873.sdrn,
			tdisg873.edrn
		from	tdisg873
		where	tdisg873.rcno = {:tfacp251.rcno}
		and	tdisg873.rcln = {:tfacp251.rseq}
		and	tdisg873._compnr = :tcemm030.lcmp
		as set with 1 rows
		selectdo
			select	tdisg831.stat
			from	tdisg831
			where	tdisg831._index1 = {:tdisg873.sdrn}
			and	tdisg831.stat = tdisg.stat.process
			and	tdisg831._compnr = :tcemm030.lcmp
			as set with 1 rows
			selectdo
				reason.flag = 1
				reason.data = trim$(tdisg873.edrn)
			selectempty
				reason.flag = 0
			endselect
		selectempty
			select	tdisg832.tobi
			from	tdisg832
			where	tdisg832._index4 = {:tfacp251.rcno, :tfacp251.rseq}
			and	tdisg832.tobi = tcyesno.yes
			and	tdisg832._compnr = :tcemm030.lcmp
			as set with 1 rows
			selectdo
				reason.flag = 0
			selectempty
				select	tdisg832.reas,
					tdisg832.edrn
				from	tdisg832
				where	tdisg832._index4 = {:tfacp251.rcno, :tfacp251.rseq}
				and	tdisg832._compnr = :tcemm030.lcmp
				as set with 1 rows
				selectdo
					select	tdisg831.stat
					from	tdisg831
					where	tdisg831._index1 = {:tdisg832.edrn}
					and	tdisg831.stat = tdisg.stat.process
					and	tdisg831._compnr = :tcemm030.lcmp
					as set with 1 rows
					selectdo
						reason.flag = 1
						reason.data = trim$(tdisg832.reas)
					selectempty
						reason.flag = 0
					endselect
	| 				reason.flag = 0
				endselect
			endselect
		endselect
	endselect
}													|GH413CR739.a.e

function get.hdat.data(	domain	tfgld.ttyp	i.ttyp,				|GH457CR795.a.s
			domain	tfgld.docn	i.ninv)						
{
	domain	tcibd.sern	sern.irno
	select	tfacp251.shpm:sern.irno
	from	tfacp251
	where	tfacp251._index1 = {:ncmp.f, :i.ttyp, :i.ninv}
	and	tfacp251._compnr = :ncmp.f
	as set with 1 rows
	selectdo
	selectempty
		sern.irno = ""
	endselect
	
	select	tcemm030.lcmp
	from	tcemm030
	where	tcemm030.fcmp = :comp.curr
	as set with 1 rows
	selectdo
	endselect
	
	select	tfisg183.hdat,						
		tfisg183.user,
		tccom001.nama
	from	tfisg183, tccom001
	where	tfisg183._index1 = {:sern.irno}
	and	tfisg183.lsta in (8, 12)
	and	tfisg183.user refers to tccom001
	and	tfisg183._compnr = :tcemm030.lcmp
	order by tfisg183.hdat desc
	as set with 1 rows
	selectdo
	selectempty
		tfisg183.hdat = 0
		tccom001.nama = ""
	endselect						
}
									|GH457CR795.a.e


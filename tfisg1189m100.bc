|******************************************************************************
|* tfisg1189m100  0  VRC B61U a7 isg
|* Payment Request Details
|* merino1
|* 2016-07-16
|******************************************************************************
|* Main table tfisg189 , Form Type 1
|******************************************************************************
|* ID ISGEC016008, Shilpa Janardanan, B61U a7 ISG
|* Logic modification
|*
|* ID ISGEC01043, Dharmendra, 23-07.2016
|*
|* ID ISGECFIN009, IT0386, Saurabh Dubey, 03 August 2016, VRC B61U a7 isg
|* Modifications
|*
|* ID ISGEC016007, Manish Manchanda, 2016-08-31
|* Modifications - message pop up for user
|*
|* ID ISGEC016010, Manish Manchanda, 2016-09-26
|* Modifications - Retention condition to be checked in case of Payment Request
|*
|* ID ISGEC01050, Priya Jindal, 13/3/2018
|* Addition of date on process
|* Changes of zoom of adrq
|*
|* ID GH355CR646, RAvi Kumar, 24-07-2020
|* Display Remittance letter from Quick Payment
|*
|* GH409CR737, RAvi Kumar, 14-10-2020
|* Upgrade Quick Payment session
|*
|* GH608CR935, RAvi Kumar, 19-07-2021
|* Add Payment Information in Quick Payment session after Process of Payment
|*
|* GH610CR934, RAvi Kumar, 20-07-2021
|* Identification of Supplier Special Provision and PAN No. in Payment Request and Quick Payment
|****************************** declaration section ***************************
declaration:
	#pragma used dll ottstpapihand
	#include<bic_dam>

	table   ttfisg189 |
	table	ttfisg185
	table	ttfcmg109
	table	ttfisg000
	table	ttccom100
	Table 	ttfgld018
	table	ttfmsl020	| Advance Request
	table	ttfacp200	| Open Items (Purchase Invoices and Payments)
	table	ttfacp201	| Payment Schedules
	table	ttcemm170	| Companies
	table	ttfcmg103
	table	ttfcmg101
	table	ttfgld102
	table	ttfacp201
	table	ttccom100
	table	ttfgld025
	table	ttfgld100
	table	ttfcmg109
	table	ttdpur400
	table	ttdpur401
	table	ttdisg088
	table	ttdmsl400	|#ISGECFIN009.n
	table	ttcmcs032	|#ISGEC016007.n
	table	ttcmcs036	|#ISGEC016007.n
	table	ttcmcs035	|#ISGEC016007.n
	table	ttctax039	|#ISGEC016007.n
	table	ttcmcs033	|#ISGEC016007.n
	table	ttctax011	|#ISGEC016007.n

	long	advice.no,count.select,ret
	extern	domain	tfgld.amnt	v.totl
	extern	domain	tcncmp	i.ncmp
	extern	domain	tcorno	hold.orno
	extern	domain	tcyesno	fld1,fld2,fld3,fld4,fld5,fld6, fld7, fld8, fld9				|GH409CR737.a
	extern	domain	tfgld.user	curr.user
	extern  domain tcpono		p.data,ret_val
	extern	domain	tfcmg.tadv	tpay
	domain	tccprj	i.cprj
	domain	tcorno	i.orno
	domain	tfcmg.tadv	i.tadv
	domain	tcmcs.str6	i.btno
	string	i.erro(300)
	extern	domain	tfcmg.cheq	v.cheq
	extern	domain	tfcmg.tadv	tpay
	extern	domain	tfgld.date	v.post
	extern  domain tcmcs.str6	v.pyad,p.pyad

	extern	domain	tccom.bpid	var.suno
	extern	domain	tcnama		var.snnm
	extern	domain	tcemno		var.buyr			|#ISGEC016008.sn
	extern	domain	tcnama		var.bynm
	extern	domain	tcdate		var.odat
	extern	domain	tdpur.hdst	var.hdst
	extern	domain	tcdate		var.ddta
	extern	domain	tccprj		var.cprj
	extern	domain	tcdsca		var.pjdc
	extern	domain	tcamnt		var.obsc
	extern	domain	tcamnt		var.oexc
	extern	domain	tcamnt		var.osrv
	extern	domain	tcamnt		var.ocst
	extern	domain	tcamnt		var.ostx
	extern	domain	tcamnt		var.cgst
	extern	domain	tcamnt		var.sgst
	extern	domain	tcamnt		var.igst
	extern	domain	tcamnt		var.cess
	extern	domain	tcamnt		var.olct
	extern	domain	tcamnt		var.ogrs
	extern	domain	tcccty		var.reas
	extern	domain	tcmcs.st150m	var.rsdc
	extern	domain	tcdate		var.rvdt
	extern	domain	tdmsl.work	var.work
	extern	domain	tcyesno		var.stat
	extern	domain	tclogn		var.apby			|#ISGEC016008.en
	extern	domain	tcamnt		v.amnt				|#ISGEC016007.n
	extern  domain  tfgld.btno	i.pbtn
	extern  domain  tcmcs.str6	i.payd
	extern  domain  tccom.bpid	i.bpid
	extern	domain	tcnama		user.nama			|GH608CR935.a
	extern	domain	tfcmg.cheq	cheq.i				|GH608CR935.a
	extern	domain	tcdate		cheq.date			|GH608CR935.a
	extern	domain	tfcmg.chst	chst.i				|GH608CR935.a
	extern	domain	tfcmg.paym	paym.i				|GH608CR935.a
	extern	domain	tfcmg.bank	bank.i				|GH608CR935.a
	extern	domain	tcmcs.str215m	note.i				|GH608CR935.a
	extern	domain	tfgld.btno	pbtn.i				|GH608CR935.a
	extern	domain	tcfovn	pan.no				|GH610CR934.a
	extern	domain	tcyesno	provision.tick			|GH610CR934.a
|****************************** program section ********************************
before.program:
	i.ncmp	=	get.compnr()
	tcmcs.dll0095.read.parm("tfisg000")
	curr.user = logname$
	p.data = 0

import("tfisg500.pbtn",i.pbtn)
import("tfisg500.ptbp",i.bpid)
i.payd = str$(i.pbtn)

|****************************** group section **********************************

before.display.object:
	if i.pbtn <> 0 then


		select tfisg189.*
		from tfisg189
		where tfisg189.pyad =:i.payd
		and tfisg189.bpid =:i.bpid
		selectdo
			tfisg189.iprq =tfisg189.iprq
			tfisg189.bpid =tfisg189.bpid
			tfisg189.type =tfisg189.type
			tfisg189.adrq =tfisg189.adrq
			tfisg189.pyad =tfisg189.pyad
		selectempty
			message("Payment Advice not find , in Quick Payment Process")
			end()

		endselect

	endif

| 	disable.commands("paym.adv","process","tfisg2400m009","tfisg1402m000","finalize")		|#ISGEC016007.o
	disable.commands("paym.adv","process","tfisg2400m009","tfisg1402m000","finalize","calculate", "device.open","device.without.open")	|#ISGEC016007.n
	advice.no = val(strip$(shiftl$(tfisg189.pyad)))
	select tfcmg109.stpp
	from 	tfcmg109
	where	tfcmg109._index1 = {:advice.no}
	selectdo
	selectempty
| 		tfcmg109.stpp = ltoe(7)		|#ISGEC016008.o
		tfcmg109.stpp = ltoe(0)			|ISGEC016008.n
	endselect
	get.total()
	select tfisg185.sele from tfisg185
	where tfisg185._index3 = {:tfisg189.iprq,:tfisg189.bpid,:tfisg189.type}
	and tfisg185.sele = tcyesno.yes
	as set with 1 rows
	selectdo
	selectempty
		tfisg185.sele = tcyesno.no
	endselect

	if tfisg189.proc = tcyesno.no and tfisg185.sele = tcyesno.no then
		disable.commands("paym.adv","process","tfisg2400m009","tfisg1402m000","finalize", "device.open","device.without.open")
	else
		enable.commands("paym.adv","process","tfisg1402m000","finalize")
	endif
	if etol(tfcmg109.stpp) = 6 then
		enable.commands("tfisg2400m009", "device.open","device.without.open")
	endif

	if tfisg185.proc = tcyesno.yes then
		disable.commands("paym.adv","tfmsl0137m000")
	else
		if isspace(tfisg189.pyad) then
			if tfisg185.sele = tcyesno.yes then
				enable.commands("paym.adv")
			endif
		else
			enable.commands("process","tfmsl0137m000")
			disable.commands("paym.adv")
		endif
	endif
	get.batch()
	select	tfgld100.stat
	from	tfgld100
	where	tfgld100._index1 = {:tfgld018.year,:tfgld018.btno}
	and	tfgld100.stat = tfgld.bstt.term
	selectdo
		disable.commands("finalize")
	selectempty
		if tfisg185.sele = tcyesno.yes then
			enable.commands("finalize")
		endif
	endselect
	if tfisg189.type = tfisg.tran.stan and tfisg189.proc = tcyesno.no and not isspace(tfisg189.iprq) then
		enable.commands("process")
		select	tfisg186.leac
		from	tfisg186
		where	tfisg186._index1 = {:tfisg189.iprq}
		as set with 1 rows
		selectdo
			enable.commands("paym.adv")
		selectempty
			disable.commands("paym.adv")
		endselect
	else
		disable.commands("process")
	endif
	if tfisg189.type = tfisg.tran.payi then
		select	count(tfisg185.sele):count.select
		from	tfisg185
		where	tfisg185._index1 = {:tfisg189.iprq}
		and	tfisg185.sele = tcyesno.yes
		and	tfisg185.proc = tcyesno.no
		selectdo
		selectempty
			count.select = 0
		endselect

		if count.select > 0 then
			enable.commands("tfisg1188m000","paym.adv")
		else
			disable.commands("tfisg1188m000","paym.adv")
		endif
	else
		disable.commands("tfisg1188m000")
	endif

	if tfisg189.type = tfisg.tran.stan then
		enable.commands("tfcmg1508m000")
	else
		disable.commands("tfcmg1508m000")
	endif
| 	if tfisg189.type = tfisg.tran.stan or tfisg189.proc = tcyesno.yes  then		|#ISGEC016008.o
	if tfisg189.type = tfisg.tran.stan or tfisg189.proc = tcyesno.yes  or tfisg189.type = tfisg.tran.paym then
| 		or tfisg189.type = tfisg.tran.payi then		|#ISGEC016008.n	| ISGEC01043.o
		disable.fields  ("hold.orno")
	else
		enable.fields  ("hold.orno")
	endif
									|#ISGEC016007.sn
	if	tfisg189.type	=	tfisg.tran.paym	then
		enable.commands("calculate")
	endif
	disable.commands("finalize")
									|#ISGEC016007.en

|***************************** field section ************************************

field.hold.orno:
before.zoom:
| 	query.extend.where.in.zoom("tdpur400.otbp = "& quoted.string(tfisg185.bpid))
| 	query.extend.where.in.zoom("tdpur400.otbp = "& quoted.string(tfisg189.bpid))	|#ISGEC016008.n, |# ISGEC01043.o
											|# ISGEC01043.sn
	if tfisg189.type = tfisg.tran.payi then
		query.extend.where.in.zoom("tdpur400.otbp = "& quoted.string(tfisg189.bpid) &
			" and tdpur400.orno in (select tfmsl020.orno from tfmsl020)")
	else
		query.extend.where.in.zoom("tdpur400.otbp = "& quoted.string(tfisg189.bpid))
	endif
											|# ISGEC01043.en
field.tfisg189.bpid:
before.zoom:
	query.extend.where.in.zoom("tccom100.bprl = "&str$(3)&" or tccom100.bprl = "&str$(4))



field.tccom100.nama:
before.display:
	select	tccom100.nama
	from	tccom100
	where	tccom100._index1 = {:tfisg189.bpid}
	selectdo
	selectempty
		tccom100.nama = ""
	endselect
field.tfisg189.type:
before.input:
	set.enum.values.for.field("tfisg189.type",tfisg.tran.invo,tfisg.tran.stan,tfisg.tran.paym,tfisg.tran.payi)
after.field:
| 	if tfisg189.type = tfisg.tran.stan or tfisg189.proc = tcyesno.yes then		|#ISGEC016008.o
	if tfisg189.type = tfisg.tran.stan or tfisg189.proc = tcyesno.yes  or tfisg189.type = tfisg.tran.paym then
| 		or tfisg189.type = tfisg.tran.payi then		|#ISGEC016008.n |# ISGEC01043.o
		disable.fields  ("hold.orno")
	else
		enable.fields  ("hold.orno")
	endif
field.tfisg189.adrq:
before.zoom:
	if not isspace(tfisg189.bpid) then
		if	tfisg189.type	=	tfisg.tran.paym		then			|#ISGEC016010.n
| 		query.extend.where.in.zoom("tfmsl020.stat = "& str$(20) & " and tfmsl020.bpid = " & quoted.string(tfisg189.bpid) & " and tfmsl020.ackn = tfmsl.ackn.receive"
															|ISGEC01050.o
		query.extend.where.in.zoom("tfmsl020.stat = "& str$(90) & " and tfmsl020.bpid = " & quoted.string(tfisg189.bpid) & " and tfmsl020.ackn = tfmsl.ackn.receive"
													|ISGEC01050.n
					& " and tfmsl020.optn <> tfoption.retention")
		else										|#ISGEC016010.sn
| 			query.extend.where.in.zoom("tfmsl020.stat = "& str$(20) & " and tfmsl020.bpid = " & quoted.string(tfisg189.bpid) & " and tfmsl020.ackn = tfmsl.ackn.receive")
			query.extend.where.in.zoom("tfmsl020.stat = "& str$(90) & " and tfmsl020.bpid = " & quoted.string(tfisg189.bpid) & " and tfmsl020.ackn = tfmsl.ackn.receive")
		endif										|#ISGEC016010.en  |ISGEC01050.n


	else
		if	tfisg189.type	=	tfisg.tran.paym		then			|#ISGEC016010.n
| 			query.extend.where.in.zoom("tfmsl020.stat = "& str$(20) & " and tfmsl020.ackn = tfmsl.ackn.receive"  |ISGEC01050.o
			query.extend.where.in.zoom("tfmsl020.stat = "& str$(90) & " and tfmsl020.ackn = tfmsl.ackn.receive"  |ISGEC01050.n
			& " and tfmsl020.optn <> tfoption.retention")
		else										|#ISGEC016010.sn
| 			query.extend.where.in.zoom("tfmsl020.stat = "& str$(20) & " and tfmsl020.ackn = tfmsl.ackn.receive")	|ISGEC01050.o
			query.extend.where.in.zoom("tfmsl020.stat = "& str$(90) & " and tfmsl020.ackn = tfmsl.ackn.receive")	|ISGEC01050.n
		endif										|#ISGEC016010.en
	endif

|****************************** choice section **********************************
choice.process:
before.choice:
							|#ISGEC016007.sn
	if	not	check.user()	then
		message("User has not authorize to make the payment.")
		choice.again()
	endif
							|#ISGEC016007.en
	p.data = 1
on.choice:
	select tfisg185.* from tfisg185
	where tfisg185._index1 = {:tfisg189.iprq}
	and tfisg185.sele = tcyesno.yes
	as set with 1 rows
	selectdo
	endselect
	if tfisg189.type = tfisg.tran.stan then

		start.synchronized.child("tfisg1186m000","tfisg189.iprq","tfisg186.iprq")
	else
		afs.process()
	endif
choice.finalize:
before.choice:
	get.batch()

	select	tfgld100.user
	from	tfgld100
	where	tfgld100._index1 = {:tfgld018.year,:tfgld018.btno}
	and	tfgld100.user = :curr.user
	selectdo
	selectempty
		select	tfgld025.susr
		from	tfgld025
		where	tfgld025._index1 = {:curr.user}
		selectdo
		selectempty
			message("Batch %d not belongs to user %s",tfgld018.btno,curr.user)
			choice.again()
		endselect
	endselect

	select	tfgld100.itbc
	from	tfgld100 for update
	where	tfgld100._index1 = {:tfgld018.year,:tfgld018.btno}
	selectdo
		dal.change.object("tfgld100")
		dal.set.field("tfgld100.itbc",tcyesno.yes)
		ret_val = dal.save.object("tfgld100")
		if ret_val = 0 then
			commit.transaction()
		else
			abort.transaction()
		endif
	endselect
on.choice:
	afs.finalize()

choice.paym.adv:
before.choice:
							|#ISGEC016007.sn
	if	not	check.user()	then
		message("User has not authorize to make the payment.")
		choice.again()
	endif
							|#ISGEC016007.en
	p.data = 2
	if not po.amount.correct() then
		choice.again()
	endif

on.choice:
	select tfisg185.* from tfisg185
	where tfisg185._index1 = {:tfisg189.iprq}
	and tfisg185.sele = tcyesno.yes
	as set with 1 rows
	selectdo
	endselect

	start.session(MODAL,"tfisg1285m000","","")

	select tfisg189.* from tfisg189
	where tfisg189._index1 = {:tfisg189.iprq}
	as set with 1 rows
	selectdo
	endselect
	execute(find.data)

choice.tfcmg1508m000:
on.choice:
	start.synchronized.child("tfcmg1501m000", "tfisg189.pyad", "tfcmg101.btno")

| 	tpay =  tfcmg.tadv.alone
| 	start.synchronized.child.with(ADD.SET)
| 	start.synchronized.child("tfcmg1508m000",
| 		"tpay", "tfcmg108.tpay",
| 		"tfisg189.bpid", "tfcmg108.bpid")
	select tfisg189.* from tfisg189
	where tfisg189._index1 = {:tfisg189.iprq}
	as set with 1 rows
	selectdo
	endselect
	execute(find.data)

| choice.tfisg1188m000:
| before.choice:
| 	select tfisg185.* from tfisg185
| 	where tfisg185._index1 = {:tfisg189.iprq}
| 	and tfisg185.sele = tcyesno.yes
| 	as set with 1 rows
| 	selectdo
| 	endselect
| after.choice:
| 	select tfisg189.* from tfisg189
| 	where tfisg189._index1 = {:tfisg189.iprq}
| 	as set with 1 rows
| 	selectdo
| 	endselect
| 	execute(find.data)
choice.select.all:
on.choice:
	select	tfisg185.sele
	from	tfisg185 for  update
	where	tfisg185._index1 = {:tfisg189.iprq}
	selectdo
		ret = dal.change.object("tfisg185")
		dal.set.field("tfisg185.sele", tcyesno.yes)
		tfisg185.sele = tcyesno.yes
		ret = dal.save.object("tfisg185")
| 		tfisg185.rblk = tcyesno.yes
| 		db.update(ttfisg185, db.retry,e)
	endselect
	if not ret then
		commit.transaction()
	else
		message("Total payment exceeds PO value")
		abort.transaction()
	endif


choice.deselect.all:		|#ISGEC016005.sn
on.choice:
	select	tfisg185.sele
	from	tfisg185 for  update
	where	tfisg185._index1 = {:tfisg189.iprq}
	selectdo
		tfisg185.sele = tcyesno.no
		tfisg185.rblk = tcyesno.no
		db.update(ttfisg185, db.retry,e)
	endselect
	commit.transaction()
						|#ISGEC016008.sn
choice.add.set:
before.choice:
	delete.not.processed.record()		|#ISGEC016008.en
	hold.orno = ""				|# ISGEC01043.n

choice.update.db:
after.choice:
| 	execute(find.data)
| 	refresh.all.occs()
| 	refresh.parent(-1)
choice.end.program:
before.choice:
	delete.not.processed.record()
choice.abort.program:
before.choice:
	delete.not.processed.record()
								|#ISGEC016005.en
field.user.nama:						|GH608CR935.a.s
before.display:
	select	tccom001.nama:user.nama
	from	tccom001
	where	tccom001._index4 = {:tfisg189.user}
	as set with 1 rows
	selectdo
	selectempty
		user.nama = ""
	endselect

field.cheq.i:
before.display:
	if tfisg189.proc = tcyesno.yes then
		pbtn.i = lval(tfisg189.pyad)
		select	tfcmg100.bank:bank.i,
			tfcmg100.paym:paym.i,
			tfcmg100.cheq:cheq.i,
			tfcmg100.chst:chst.i,
			tfcmg100.rdat:cheq.date
		from	tfcmg100
		where	tfcmg100._index4 = {:pbtn.i}
		as set with 1 rows
		selectdo
		selectempty
			cheq.i = ""
			cheq.date = 0
			chst.i = empty
			paym.i = ""
			bank.i = ""
		endselect
	else
		cheq.i = ""
		cheq.date = 0
		chst.i = empty
		paym.i = ""
		bank.i = ""
	endif
	
field.note.i:
before.display:
	select	tfmsl020.note:note.i
	from	tfmsl020
	where	tfmsl020._index1 = {:tfisg189.adrq}
	as set with 1 rows
	selectdo
	selectempty
		note.i = ""
	endselect
								|GH608CR935.a.e

field.pan.no:					|GH610CR934.a.s
before.display:
	select	tctax400.fovn:pan.no
	from	tctax400
	where	tctax400._index1 = {:tfisg189.bpid}
	and	tctax400.catg.l = tctax.catg.l.pan
	as set with 1 rows
	selectdo
	selectempty
		pan.no = ""
	endselect
	
	select	tcisg012.rcom:provision.tick
	from	tcisg012
	where	tcisg012._index1 = {:tfisg189.bpid}
	as set with 1 rows
	selectdo
	selectempty
		provision.tick = empty
	endselect
						|GH610CR934.a.e
functions:

function get.total()
{
	if tfisg189.type = tfisg.tran.payi then
		select	sum(tfisg188.balh):v.totl
		from	tfisg188
		where	tfisg188._index1 = {:tfisg189.iprq}
		and	tfisg188.sele = tcyesno.yes
		and	tfisg188.proc = tcyesno.no
		and	tfisg188._compnr	=	:i.ncmp		|test.o
		selectdo
		selectempty
			v.totl	=	0
		endselect
	else
		select	sum(tfisg185.balh):v.totl
		from	tfisg185
| 		where	tfisg185._index1 = {:tfisg189.iprq,:tfisg189.bpid,:tfisg189.type,:tfisg189.adrq,:i.ncmp}
		where	tfisg185._index1 = {:tfisg189.iprq,:tfisg189.bpid,:tfisg189.type,:tfisg189.adrq}|,:i.ncmp}
		and	tfisg185.sele = tcyesno.yes
		and	tfisg185.proc = tcyesno.no
		and	tfisg185._compnr	=	:i.ncmp		|test.o
		selectdo
		selectempty
			v.totl	=	0
		endselect
	endif
}

function 	get.batch()
{
	domain	tfgld.btno	temp.btno

	temp.btno	=	val(tfisg189.pyad)
	select	tfcmg103.ttyp,
		tfcmg103.docn
	from	tfcmg103
	where	tfcmg103._index1	=	{:temp.btno}
	and	tfcmg103._compnr	=	:i.ncmp
	as	set with 1 rows
	selectdo
		select	tfgld018.btno,tfgld018.year
		from	tfgld018
		where	tfgld018._index1	=	{:tfcmg103.ttyp,:tfcmg103.docn}
		and	tfgld018._compnr	=	:i.ncmp
		as	set with 1 rows
		selectdo
		selectempty
			tfgld018.btno	=	0
		endselect
	endselect
}
function	delete.not.processed.record()
{
	db.retry.point()
	select tfisg185.* from tfisg185 for update
	where	tfisg185._index1 = {:tfisg189.iprq, :tfisg189.bpid,:tfisg189.type,:tfisg185.adrq}
	and tfisg185.proc = tcyesno.no
	selectdo
		db.delete(ttfisg185,db.retry,e)
		if	not	e	then
			commit.transaction()
		else
			abort.transaction()
		endif
	endselect
	commit.transaction()
	select tfisg189.* from tfisg189 for update
	where	tfisg189._index1 = {:tfisg189.iprq, :tfisg189.bpid,:tfisg189.type,:tfisg185.adrq}
	and tfisg189.proc = tcyesno.no
	selectdo
		db.delete(ttfisg189,db.retry,e)
		if	not	e	then
			commit.transaction()
		else
			abort.transaction()
		endif
	endselect
	commit.transaction()
}
function	afs.process()
{
	on	case	tfisg189.type
	case	tfisg.tran.invo:
		i.tadv	=	tfcmg.tadv.purinv
		break
	case	tfisg.tran.paym:
		i.tadv	=	tfcmg.tadv.purinv
		break
	case	tfisg.tran.adva:
		i.tadv	=	tfcmg.tadv.advance
		break
	case	tfisg.tran.unal:
		i.tadv	=	tfcmg.tadv.unallocated
		break
	case	tfisg.tran.stan:
		i.tadv	=	tfcmg.tadv.alone
		break
	case	tfisg.tran.rete:
		i.tadv	=	tfcmg.tadv.purinv
		break
	endcase

	select	tfisg185.pyad:i.btno,tfisg185.cheq:v.cheq,tfisg185.post:v.post
	from	tfisg185
	where	tfisg185._index1	=	{:tfisg189.iprq,:tfisg189.bpid,:tfisg189.type,:tfisg189.adrq}
	and	tfisg185.sele = tcyesno.yes
	and	tfisg185.proc = tcyesno.no
| 	and	tfisg185.ncmp	=	:i.ncmp
| 	and	tfisg185._compnr	=	:i.ncmp
	as set with 1 rows
	selectdo
		if	not	isspace(i.btno)	then
			tfmsldll0042.Process.Payment.Batch.For.Supplier.BP(
									v.cheq,
									i.btno,
									v.post
									)
			after.process.updation()
			update.tfisg185.proc()

| 			delete.tfisg815.proc.no(tfisg185.iprq,
| 						tfisg185.bpid,
| 						tfisg185.type,
| 						tfisg185.adrq,
| 						tfisg185.ncmp,
| 						tfisg185.ttyp,
| 						tfisg185.ninv
| 						)
			message("Process Complete")
			refresh.parent(-1)
		endif
	endselect
	check.and.update.process.flag()
}
function	after.process.updation()
{
	on 	case	tfisg189.type
	case	tfisg.tran.paym:
		update.tfmsl020()
	case	tfisg.tran.adva:
	case	tfisg.tran.unal:
		update.tfacp200()
		break
| 	case	tfisg.tran.rete:
| 		update.tfacp201()
| 		break
	endcase
}
function	update.tfmsl020()
{
	domain	tfgld.btno		i.btno

	i.btno = lval(tfisg185.pyad)

	select	tdpur400.orno
	from	tdpur400
	where	tdpur400._index1 = {:tfisg185.orno}
	and	tdpur400.otbp = :tfisg185.bpid
	selectdo
		select	tdpur401.cprj
		from	tdpur401
		where	tdpur401._index1 = {:tdpur400.orno}
		and	tdpur401.cprj <> ""
		as set with 1 rows
		selectdo
		endselect
	endselect

	select	tfcmg103.ttyp,
		tfcmg103.docn
	from	tfcmg103
	where	tfcmg103._index1 = {:i.btno}
	and	tfcmg103._compnr = :i.ncmp
	as set with 1 rows
	selectdo
	endselect

	select	tfmsl020.*
	from	tfmsl020	for	update
	where	tfmsl020._index1	=	{:tfisg185.adrq}
	and	tfmsl020._compnr	=	:i.ncmp
	selectdo
		ret_val	=	dal.change.object("tfmsl020")
		dal.set.field("tfmsl020.stat", tfmsl.lc.stat.proc)
		dal.set.field("tfmsl020.prdt",utc.num())		|ISGEC01050.n
		dal.set.field("tfmsl020.prby",logname$)		|ISGEC01050.n
		dal.set.field("tfmsl020.bank", tfisg185.bank)
		dal.set.field("tfmsl020.meth", tfisg185.paym)
		dal.set.field("tfmsl020.paym", tfpaym.advice)
		dal.set.field("tfmsl020.btno", lval(tfisg185.pyad))
		dal.set.field("tfmsl020.ttyp", tfcmg103.ttyp)
		dal.set.field("tfmsl020.docn", tfcmg103.docn)
		if isspace(tfmsl020.cprj)	then
			dal.set.field("tfmsl020.cprj",tdpur401.cprj)
		endif
		dal.set.field("tfmsl020.lino", 0)
		dal.set.field("tfmsl020.chqe", tfisg185.cheq)
		dal.set.field("tfmsl020.chdt", utc.num())
		dal.set.field("tfmsl020.pymt",tfisg185.balh)
		ret_val	=	dal.save.object("tfmsl020")
		if	ret_val	=	0	then
			commit.transaction()
		else
			show.dal.messages(MSG.ERROR)
			abort.transaction()
		endif
	endselect
}

function	update.tfacp200()
{
	domain tfgld.btno	batch.no
	batch.no = 0

	select	tfisg185.*
	from	tfisg185
	where	tfisg185._index1	=	{:tfisg185.iprq,:tfisg185.bpid,:tfisg185.type,:tfisg185.adrq}
	and	tfisg185.sele = tcyesno.yes
	and	tfisg185.proc = tcyesno.no
	selectdo
		batch.no = lval(tfisg185.pyad)
		select	tfcmg101.ptyp,tfcmg101.pdoc
		from	tfcmg101
		where	tfcmg101._index1 = {:batch.no,:tfisg185.bpid}
		and	tfcmg101.ttyp = :tfisg185.ttyp
		and	tfcmg101.ninv = :tfisg185.ninv
		selectdo
			if not isspace(tfisg185.ttyp) then
				db.retry.point()
				select	tfacp200.*
				from	tfacp200	for	update
				where	tfacp200._index1	=	{:tfisg185.ttyp,:tfisg185.ninv}
				and	tfacp200.tdoc		=	:tfcmg101.ptyp
				and	tfacp200.docn		=	:tfcmg101.pdoc
				and	tfacp200.ifbp		=	:tfisg185.bpid
				and	tfacp200._compnr	=	:tfisg185.ncmp
				selectdo
					put.var(pid, "tfacp200.cdf_cprj", tfisg185.cprj)
					put.var(pid, "tfacp200.cdf_prno", tfisg185.orno)
					db.update(ttfacp200, db.retry, e)
					if	not	e	then
						commit.transaction()
					else
						abort.transaction()
					endif
				endselect
			else
				select	tfgld102.ctyp,tfgld102.cdoc
				from	tfgld102
				where	tfgld102._index2 = {:i.ncmp,:tfcmg101.ptyp,:tfcmg101.pdoc}
				as set with 1 rows
				selectdo
					db.retry.point()
					select	tfacp200.*
					from	tfacp200	for	update
					where	tfacp200._index1	=	{:tfgld102.ctyp,:tfgld102.cdoc}
					and	tfacp200.ifbp		=	:tfisg185.bpid
					and	tfacp200._compnr	=	:tfisg185.ncmp
					selectdo
						put.var(pid, "tfacp200.cdf_cprj", tfisg185.cprj)
						put.var(pid, "tfacp200.cdf_prno", tfisg185.orno)
						db.update(ttfacp200, db.retry, e)
						if	not	e	then
							commit.transaction()
						else
							abort.transaction()
						endif
					endselect
				endselect
			endif
		endselect
	endselect
}
function	update.tfisg185.proc()
{
	select	tfisg185.*
	from	tfisg185	for	update
	where	tfisg185._index1	=	{:tfisg185.iprq,:tfisg185.bpid,:tfisg185.type,:tfisg185.adrq}
| 	and	tfisg185.sele = tcyesno.yes
	and	tfisg185.proc = tcyesno.no
	selectdo
		if tfisg185.sele = tcyesno.yes then
			tfisg185.proc = tcyesno.yes
			db.update(ttfisg185,db.retry,e)
			if tfisg185.rblk = tcyesno.yes then
				select tfacp201.* from tfacp201 for update
				where	tfacp201._index1	=	{:tfisg185.ttyp,:tfisg185.ninv}
				and	tfacp201._compnr	=	:tcemm170.comp
				and tfacp201.cdf_bloc <> ""
				selectdo
					put.var(pid,"tfacp201.cdf_bloc","")
					db.update(ttfacp201,db.retry,e)
				endselect
			endif
		else
			db.delete(ttfisg185,db.retry,e)
		endif
		if	e <> 0	then
			abort.transaction()
		endif
	endselect
	if	not	e	then
		select tfisg189.* from tfisg189	for	update
		where	tfisg189._index1	=	{:tfisg185.iprq,:tfisg185.bpid,:tfisg185.type,:tfisg185.adrq}
		selectdo
			tfisg189.proc = tcyesno.yes
			db.update(ttfisg189,db.retry,e)
		endselect
	endif
	if	not	e	then
		commit.transaction()
	else
		abort.transaction()
	endif
}
function check.and.update.process.flag()
{
	select	tfisg185.pyad:v.pyad
	from	tfisg185
	where	tfisg185._index1 = {:tfisg185.iprq,:tfisg185.bpid,:tfisg185.type,:tfisg185.adrq}
	and	tfisg185.pyad <> "      "
	as set with 1 rows
	selectempty
		v.pyad = ""
	endselect

	if not isspace(v.pyad) then					|#RR.04_06_2016.sn
		advice.no = val(strip$(shiftl$(v.pyad)))
		select tfcmg109.stpp
		from 	tfcmg109
		where	tfcmg109._index1 = {:advice.no}
		and tfcmg109.stpp = 6
		selectdo
			db.retry.point()
			select tfmsl020.* from tfmsl020 for update
			where tfmsl020._index5 = {:tfisg185.iprq}
			and tfmsl020.sele = tcyesno.yes
			selectdo
				ret_val	=	dal.change.object("tfmsl020")
				dal.set.field("tfmsl020.stat", tfmsl.lc.stat.proc)
				dal.set.field("tfmsl020.prdt",utc.num())			|ISGEC01050.n
				dal.set.field("tfmsl020.prby",logname$)		|ISGEC01050.n
				dal.set.field("tfmsl020.bank", tfisg185.bank)
				dal.set.field("tfmsl020.meth", tfisg185.paym)
				dal.set.field("tfmsl020.paym", tfpaym.advice)
				dal.set.field("tfmsl020.btno", lval(tfisg185.pyad))
				dal.set.field("tfmsl020.ttyp", tfcmg103.ttyp)
				dal.set.field("tfmsl020.docn", tfcmg103.docn)
				if isspace(tfmsl020.cprj)	then
					dal.set.field("tfmsl020.cprj",tdpur401.cprj)
				endif
				dal.set.field("tfmsl020.lino", 0)
				dal.set.field("tfmsl020.chqe", tfisg185.cheq)
				dal.set.field("tfmsl020.chdt", utc.num())
				ret_val	=	dal.save.object("tfmsl020")
				if	ret_val	=	0	then
					commit.transaction()
				else
					show.dal.messages(MSG.ERROR)
					abort.transaction()
				endif
			endselect
		endselect
	endif

}
function boolean po.amount.correct()
{
	domain tfgld.amnt	hold.pymt,pymt.made,alrd.pymt,po.amnt
	domain	tfgld.amnt	amount.home, total.paid
	domain	tfgld.btno	pyad
	hold.pymt = 0


	select tfisg185.orno,sum(tfisg185.balh):hold.pymt
	from tfisg185
	where tfisg185._index1 = {:tfisg189.iprq}
	and	tfisg185.orno <> ""
	and	tfisg185.sele = tcyesno.yes
	group by tfisg185.orno
	selectdo

		pymt.made = 0
		alrd.pymt = 0
		po.amnt = 0
| 		pyad = val(tfisg185.pyad)

| 		select	tdisg088.revi			|#ISGEC016008.sn
| 		from	tdisg088
| 		where	tdisg088._index1 = {:tfisg185.orno}
| 		order by tdisg088.revi desc
| 		as set with 1 rows
| 		selectdo
| 		endselect


		select	tdmsl400.vrsn	|#ISGECFIN009.sn
		from	tdmsl400
		where	tdmsl400._index1 = {:tfisg185.orno}
		and 	tdmsl400.stat = tcyesno.yes
		and	tdmsl400.work = tdmsl.work.completed
		order by tdmsl400.vrsn desc
		as set with 1 rows
		selectdo
		selectempty
			tdmsl400.vrsn = 0
		endselect	|#ISGECFIN009.en


		var.ogrs = 0

		tdisg.dll0002.Get_PO_Details(
				tfisg185.orno, tdmsl400.vrsn,
				var.suno,
				var.snnm,
				var.buyr,
				var.bynm,
				var.odat,
				var.hdst,
				var.ddta,
				var.cprj,
				var.pjdc,
				var.obsc,	|Basic Value
				var.oexc,	|Excise Value
				var.osrv,	|Service Tax
				var.ocst,	|CST/VAT
				var.ostx,	|S.Tax
				var.cgst,	|CGST
				var.sgst,	|SGST
				var.igst,	|IGST
				var.cess,	|Ces
				var.olct,	|LC Value
				var.ogrs)					|#ISGEC016008.en

		alrd.pymt = 0

		select	tfisg185.balh, tfisg185.pyad
		from	tfisg185
		where	tfisg185._index2 = {:tfisg185.orno}
		and	tfisg185.sele = tcyesno.yes
		and	tfisg185.proc = tcyesno.yes
		selectdo
			pyad = val(tfisg185.pyad)
			select	tfcmg100.btno
			from	tfcmg100
			where	tfcmg100._index4 = {:pyad}
			and	tfcmg100.chst in (5,7)
			selectdo
				alrd.pymt = alrd.pymt + tfisg185.balh
			endselect
		endselect

| 		select sum(tfisg185.balh):alrd.pymt,tfisg185.pyad
| 		from tfisg185, tfcmg100
| 		where tfisg185._index2 = {:tfisg185.orno}
| 		and	tfisg185.sele = tcyesno.yes
| 		and	tfisg185.proc = tcyesno.yes
| 		and	tfcmg100.btno = :pyad
| 		and	tfcmg100.chst in (5,7)
| 		group by tfisg185.pyad
| 		selectdo
| 		endselect

		amount.home = 0

		select	tcemm170.comp,
			tcemm170.fcua
		from	tcemm170
		selectdo
			select	tfacp200.amth
			from	tfacp200
			where	tfacp200.orno = {:tfisg185.orno}
			and	tfacp200.tpay = tfacp.tpay.credit
			and	tfacp200._compnr = :tcemm170.comp
			selectdo
				amount.home = amount.home + tfacp200.amth(1)
			selectempty
				select	tfacp200.amth
				from	tfacp200
				where	tfacp200.cdf_prno = {:tfisg185.orno}
				and	tfacp200.tpay = tfacp.tpay.credit
				and	tfacp200._compnr = :tcemm170.comp
				selectdo
					amount.home = amount.home + tfacp200.amth(1)
				endselect
			endselect
		endselect
		amount.home = abs(amount.home)
| 		select	tdpur400.oamt
| 		from	tdpur400
| 		where	tdpur400._index1 = {:tfisg185.orno}
| 		selectdo
| 		endselect

| 		if (tdpur400.oamt- (hold.pymt + amount.home)) < 0 then		|#ISGEC016008.o
		if (var.ogrs - (hold.pymt + amount.home + alrd.pymt)) < 0 then		|#ISGEC016008.n
			total.paid = amount.home + alrd.pymt
			message("PO No. %s, Total PO amount %d , Already utilised %d", tfisg185.orno, var.ogrs, total.paid)
			return(false)
		endif

	endselect
	return(true)
}
function	afs.finalize()
{
	get.batch()
	if	tfgld018.btno	<>	0	then
		stpapi.put.field("tfgld1101m000","tfgld100.year",str$(tfgld018.year))
		stpapi.put.field("tfgld1101m000","tfgld100.btno",str$(tfgld018.btno))
		ret_val	=	stpapi.find("tfgld1101m000", i.erro)
		if	ret_val	=	1	then
			spool.device	=	"D"
			stpapi.set.report("tfgld1211s000","rtfgld121111000","D",i.erro)
			stpapi.set.report("tfgld1210m000","rtfgld121111000","D",i.erro)
			stpapi.set.report("tfgld1211s000","rtfgld121111000","D",i.erro)
			stpapi.set.report("tfgld1210m000","rtfgld121111000","D",i.erro)
			stpapi.form.command("tfgld1101m000",5,"finalize.batch", i.erro)

			if	not	isspace(i.erro)	then
				message("%s", i.erro)
				stpapi.recover("tfacp1110s000",i.erro)
			else
				message("Finalize process completed.")
			endif
			stpapi.end.session("tfgld1211s000")
			stpapi.end.session("tfgld1210m000")
		endif
	endif
}

									|#ISGEC016007.sn
function	domain	tcbool	check.user()
{
	select	tfcmg107.user
	from	tfcmg107
	where	tfcmg107._index1	=	{:tfisg189.user}
	as	set with 1 rows
	selectdo
		return(true)
	endselect
	return(false)
}

function	extern	calculate()
{
	domain	tcamnt		v.amnt.1, v.amnt.2, v.frml
	domain	tcmcs.str10	v.str1

	v.amnt		=	0
	v.amnt.1	=	0
	v.amnt.2	=	0

	select	tfisg185.ccty,
		tfisg185.cvat,
		tfisg185.balh
	from	tfisg185
	where	tfisg185._index1	=	{:tfisg189.iprq}
	selectdo
	selectempty
		tfisg185.ccty	=	""
		tfisg185.cvat	=	""
		tfisg185.balh	=	0
	endselect

	select	tctax039.cvat,
		tcmcs032.pvat,
		tcmcs036.ktax,
		tcmcs036.tbvf,
		tctax011.frml
	from	tctax039, tcmcs036, tcmcs032, tctax011
	where	tctax039._index1	=		{:tfisg185.ccty,:tfisg185.cvat}
	and	tctax039.cmbb		refers	to	tcmcs036.cmba
	and	tcmcs036.ktax		in		(tcktax.income.tax, tcktax.vat)
	and	tctax039.cmbb		refers	to	tcmcs032.cmba
	and	tcmcs036.tbvf		refers	to	tctax011
	selectdo
		string.scan(tctax011.frml,"%s*%f",v.str1, v.frml)
		if	v.frml	=	0	then
			v.frml	=	1
		endif
		if	tcmcs032.pvat	<>	0	then
			on	case	tcmcs036.ktax
				case	tcktax.income.tax:
					v.amnt.1	=	v.amnt.1	+	(((v.frml*tfisg185.balh) * tcmcs032.pvat)/100)
				break
				case	tcktax.vat:
					v.amnt.2	=	v.amnt.2	+	((tfisg185.balh * tcmcs032.pvat)/100)
				break
			endcase
		else
			select	tcmcs035.sern
			from	tcmcs035
			where	tcmcs035._index1	=	{:tfisg185.ccty,:tctax039.cvat}
			selectdo
				select	tcmcs033.pvat,
					tcmcs033.edat
				from	tcmcs033
				where	tcmcs033._index1	=	{:tfisg185.ccty,:tctax039.cvat,:tcmcs035.sern}
				order	by tcmcs033.edat desc
				as	set with 1 rows
				selectdo
					if	tcmcs033.pvat	<>	0	then
						v.amnt.2	=	v.amnt.2	+	((tfisg185.balh * tcmcs033.pvat)/100)
					endif
				endselect
			endselect
		endif
	endselect

	v.amnt	=	tfisg185.balh	-	v.amnt.1	+	v.amnt.2
}
									|#ISGEC016007.en

function extern device.open()
{
| 	extern	domain	tcpono	mode.device
| 	mode.device = 0
	spool.device = "D"
	spool.preview = false

	export("spool.device", spool.device)
| 	export("mode.device", mode.device)
	start.session(MODAL, "tfisg2400m009", "", "")
}

function extern device.without.open()
{
| 	extern	domain	tcpono	mode.device
| 	mode.device = 0
	spool.device = "P"
	spool.preview = true

	export("spool.device", spool.device)
| 	export("mode.device", mode.device)
	start.session(MODAL, "tfisg2400m009", "", "")
}

function extern open.entries()							|GH409CR737.a.s
{
	session.zoomindex = 2
	start.synchronized.child.with(FIND.DATA)
	start.synchronized.child ("tfacp2520m000",
		"tfisg189.bpid", "tfacp200.ifbp")
}										|GH409CR737.a.e

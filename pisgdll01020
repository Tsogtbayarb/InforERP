|******************************************************************************
|* tfisgdll0102  0  VRC B61U a7 live
|* Salary/Perk
|* baan
|* 14-09-04 [16:07]
|******************************************************************************
|* Script Type: Library
|******************************************************************************
|* ID ISGECDV001048	Sujeet Kumar,	2014-09-19
|* AFS of CSH(CAsh Transaction Type)
|* Functional: Mr. Deepak Rawat
|******************************************************************************

	table	ttfisg102
	table	ttfgld100
	table	ttfgld101
	table	ttfgld011

#include <bic_dam>
#pragma used dll ottstpapihand
function extern string test
			(
				domain 	tcnama	i.nama
			)
{
	message("%s",i.nama)
	return("HELLO")
}
function extern string tfisgdll0102.add.perk.lines
	(
		domain		tcmcs.str3	s.cono,		|Financial Company
		domain		tcmcs.str3	s.ncmp,		|Target Company
		domain		tcmcs.str2	s.type,		|Type
		domain		tcmcs.str10	s.docd,		|Transaction Date
		domain		tcmcs.str10	s.prid,		|Process ID
	 	domain		tcmcs.str4	s.sern,		|Serial Number	
		domain		tccom.bpid	s.bpid,		|Business Partner
		domain		tfgld.ttyp	s.ttyp,		|Transaction Type
		domain		tcmcs.str4	s.dsrn,		|Series
		domain		tfgld.leac	s.leac,		|Ledger Account
		domain		tfgld.dimx	s.dim1,		|Dimension 1
		domain		tfgld.dimx	s.dim2,		|Dimension 2
		domain		tfgld.dimx	s.dim3,		|Dimension 3
		domain		tfgld.dimx	s.dim4,		|Dimension 4
		domain		tfgld.dimx	s.dim5,		|Dimension 5
		domain		tcccur		s.ccur,		|Currency
		domain		tcmcs.str20	s.amnt,		|Amount
		domain		tcmcs.str1	s.dbcr,		|Debit/Credit
		domain		tfgld.refc	s.refr,		|Reference
		domain		tcemno		s.emno		|Employee Code
	)
{


	domain		tcncmp		i.cono		|Financial Company
	domain		tcncmp		i.ncmp		|Target Company
	domain		tfisg.sal	i.type		|Type
	domain		tfgld.date	i.docd		|Transaction Date
	domain		tcmcs.long	i.prid		|Process ID
	domain		tcpono		i.sern		|Serial Number	
	domain		tccom.bpid	i.bpid		|Business Partner
	domain		tfgld.ttyp	i.ttyp		|Transaction Type
	domain		tfgld.seri	i.dsrn		|Series
	domain		tfgld.leac	i.leac		|Ledger Account
	domain		tfgld.dimx	i.dim1		|Dimension 1
	domain		tfgld.dimx	i.dim2		|Dimension 2
	domain		tfgld.dimx	i.dim3		|Dimension 3
	domain		tfgld.dimx	i.dim4		|Dimension 4
	domain		tfgld.dimx	i.dim5		|Dimension 5
	domain		tcccur		i.ccur		|Currency
	domain		tfgld.amnt	i.amnt		|Amount
	domain		tfgld.dbcr	i.dbcr		|Debit/Credit
	domain		tfgld.refc	i.refr		|Reference
	domain		tcemno		i.emno		|Employee Code


	string error.msg(500),error(500)
	long ret_val
	
	i.cono	= lval(s.cono)
	i.ncmp	= lval(s.ncmp)
	i.type	= ltoe(lval(s.type))
	i.prid	= lval(s.prid)
	i.sern 	= lval(s.sern)
	i.bpid	= s.bpid
	i.ttyp	= s.ttyp
	i.dsrn	= lval(s.dsrn)
	i.leac	= s.leac
	i.dim1	= s.dim1
	i.dim2	= s.dim2
	i.dim3	= s.dim3
	i.dim4	= s.dim4
	i.dim5	= s.dim5
	i.ccur	= s.ccur
	i.amnt	= val(s.amnt)
	i.dbcr	= ltoe(lval(s.dbcr))
	i.refr	= s.refr
	i.emno	= s.emno
	
	i.docd = convert.date(s.docd)
	
	dal.new.object("tfisg102")
	
	if i.dsrn = 0 then
		select 	tfgld011.dsrn:i.dsrn
		from	tfgld011
		where	tfgld011._index1 = {:i.ttyp}
		and	tfgld011._compnr = :i.cono
		as set with 1 rows
		selectdo
		endselect
	endif
	
	
	if i.cono <> 0 then
		dal.set.field("tfisg102.cono",i.cono)
	endif
	
	if i.ncmp <> 0 then
		dal.set.field("tfisg102.tcom",i.ncmp)
	endif
	
	
	if i.type <> empty then
		dal.set.field("tfisg102.type",i.type)
	endif
	
	if i.prid <> 0 then
		dal.set.field("tfisg102.prid",i.prid)
	else
		i.prid = get.max.pid(i.cono,i.type,i.docd)
		dal.set.field("tfisg102.prid",i.prid)
	endif
	
	i.sern = get.sequence.number(i.cono,i.type,i.docd,i.prid)
	
	dal.set.field("tfisg102.sern",i.sern)
	
	if not isspace(i.bpid) then
		dal.set.field("tfisg102.bpid",i.bpid)
	endif
	
	if i.docd > 0 then
		dal.set.field("tfisg102.docd",i.docd)
	endif
	
	if not isspace(i.ttyp) then
		dal.set.field("tfisg102.ttyp",i.ttyp)
	endif
	
	if i.dsrn <> 0 then
		dal.set.field("tfisg102.seri",i.dsrn)
	endif
	
	if not isspace(i.leac) then
		dal.set.field("tfisg102.leac",i.leac)
	endif
	
	if not isspace(i.dim1) then
		dal.set.field("tfisg102.dim1",i.dim1)
	endif
	
	if not isspace(i.dim2) then
		dal.set.field("tfisg102.dim2",i.dim2)
	endif
	
	if not isspace(i.dim3) then
		dal.set.field("tfisg102.dim3",i.dim3)
	endif
	
	if not isspace(i.dim4) then
		dal.set.field("tfisg102.dim4",i.dim4)
	endif
	
	if not isspace(i.dim5) then
		dal.set.field("tfisg102.dim5",i.dim5)
	endif
	
	if not isspace(i.ccur) then
		dal.set.field("tfisg102.ccur",i.ccur)
	endif
	
	if i.amnt <> 0 then
		dal.set.field("tfisg102.amnt",i.amnt)
	endif
	
	if etol(i.dbcr) = 1 or etol(i.dbcr) = 2 then
		dal.set.field("tfisg102.dbcr",i.dbcr)
	endif
	
	if not isspace(i.refr) then
		dal.set.field("tfisg102.refr",i.refr)
	endif
	
	if not isspace(i.emno) then
		dal.set.field("tfisg102.emno",i.emno)
	endif
	
	ret_val = dal.save.object("tfisg102")
	error.msg = ""
	error = ""
	if ret_val <> 0 then
		error.msg = "1"
		dal.get.error.message(error)
		error.msg = strip$(error.msg) & "|" & strip$(error) 
		abort.transaction()
	else
		error.msg = "0|" & str$(i.prid) & "|" & str$(i.sern)
		commit.transaction()
	endif
	
	return(error.msg)
}


function domain tcpono	 get.sequence.number
			(
				domain	tcncmp		i.cono,		|Company
				domain	tfisg.sal	i.type,		|Salary/Perk
				domain	tfgld.date	i.docd,		|Transaction Date
				domain	tcmcs.long	i.prid		|Process ID
			)
{
	domain	tcpono		max.sern
	max.sern = 0
	
	select 	max(tfisg102.sern):max.sern
	from	tfisg102
	where	tfisg102._index1 = {:i.cono,:i.type,:i.docd,:i.prid}
	selectdo
	selectempty
		max.sern = 0
	endselect
	
	max.sern = max.sern + 1
	
	return(max.sern)
}


function domain tcmcs.long get.max.pid
			(
				domain	tcncmp		i.cono,		|Company
				domain	tfisg.sal	i.type,		|Salary/Perk
				domain	tfgld.date	i.docd		|Transaction Date
			)
{
	domain	tcmcs.long	max.prid
	max.prid = 0
	
| 	i.docd = date.num()
| 	i.docd = convert.date(s.docd)
	
	select 	max(tfisg102.prid):max.prid
	from	tfisg102
	where	tfisg102._index1 = {:i.cono,:i.type,:i.docd}
	selectdo
	selectempty
		max.prid = 0
	endselect
	
	max.prid = max.prid + 1
	
	return(max.prid)
}

function extern string tfisgdll0102.create.batch
			(
				domain		tcmcs.str3	s.cono,		|Company
				domain		tcmcs.str2	s.type,		|Type
				domain		tcmcs.str10	s.docd,		|Transaction Date
				domain		tcmcs.str10	s.prid,		|Process ID
												|#ISGECDV001048.sn
				domain		tfgld.ttyp	i.ttyp		|Transaction Type
												|#ISGECDV001048.en
			)
{
	string error.msg(500)
	
	domain	tfgld.btno		o.btno
	domain	tfgld.year		o.year
	domain	tfgld.prod		o.fprd
	domain	tfgld.ttyp		o.ttyp
	
	
	domain		tcncmp		i.cono		|Company
	domain		tfisg.sal	i.type		|Type
	domain		tfgld.date	i.docd		|Transaction Date
	domain		tcmcs.long	i.prid
	
	
	domain	tfgld.docn		o.docn
	domain	tfgld.lino		o.lino
	domain	tfgld.lino		o.serl
	
	
	i.cono = lval(s.cono)
	i.type = ltoe(lval(s.type))
| 	i.docd = date.num()
	i.prid = lval(s.prid)
	
	i.docd = convert.date(s.docd)
	error.msg = ""
	
	switch.to.company(i.cono)	
	
	|******************
	|* Chek All the Data of the Given Index Having Same 
	|* Transaction Type & Same Series
	|******************
								|#ISGECDV001048.so
| 	if tfisgdll0102.check.transaction.type.series(i.cono,i.type,i.docd,i.prid,o.ttyp) then
| 		error.msg = "Transaction Type and Series are Not Same With All Records"
| 		return(error.msg)
| 	endif
| 								|#ISGECDV001048.eo
	
	|****************
	|* Check Already Batch is Created
	|* If Batch Created, Check Batch Status
	|* If the Batch Status is Free Or Ready
	|* No Need to Create New Batch Other Wise New Batch will be Created
	|****************
	if tfisgdll0102.check.batch.already.created(i.cono,i.type,i.docd,
					i.prid,o.btno,o.year,o.fprd) then
		|********
		|* Create New Batch
		|********
| 		if tfisgdll0102.Create.Transaction.Batch(o.btno,i.docd,"",o.ttyp,o.year,o.fprd) then		|#ISGECDV001048.o
		if tfisgdll0102.Create.Transaction.Batch(o.btno,i.docd,"",i.ttyp,o.year,o.fprd) then		|#ISGECDV001048.n
			show.dal.messages(MSG.ALL)
		else
			|********
			|* Find and Mark Batch & Transaction Type
			|********
														|#ISGECDV001048.sn
			select 	tfgld011.ses1
			from	tfgld011
			where	tfgld011._index1 = {:i.ttyp}
			as set with 1 rows
			selectdo
			endselect
			
			on case tfgld011.ses1
			case	"tfgld1115m000" :
														|#ISGECDV001048.en
		
	| 			if tfisgdll0102.mark.transaction(o.year,o.btno,o.ttyp) = 1 then			|#ISGECDV001048.o
				if tfisgdll0102.mark.transaction(o.year,o.btno,i.ttyp,"tfgld1115m000") = 1 then	|#ISGECDV001048.n			|#ISGECDV001048.sn
					
					select 	tfisg102.seri,
						tfisg102.ccur
					from	tfisg102
					where	tfisg102._index1 = {:i.cono,:i.type,:i.docd,:i.prid}
					and	tfisg102.ttyp = :i.ttyp						|#ISGECDV001048.n
					and	tfisg102.docn = 0
					and	tfisg102.lino = 0
					as set with 1 rows
					selectdo
					endselect
					
					
					if not tfisgdll0102.create.new.jv.header(o.ttyp,tfisg102.seri,tfisg102.ccur) then
						select 	tfisg102.*
						from	tfisg102 for update
						where	tfisg102._index1 = {:i.cono,:i.type,:i.docd,:i.prid}
						and	tfisg102.ttyp = :i.ttyp					|#ISGECDV001048.n	 
						and	tfisg102.docn = 0
						and	tfisg102.lino = 0
						selectdo
							error.msg = ""
							error.msg = tfisgdll0102.create.lines(
									tfisg102.tcom,		|Target Company
									tfisg102.bpid,		|Business Partner
									tfisg102.leac,		|Ledger Account
									tfisg102.dim1,		|Dimension 1
									tfisg102.dim2,		|Dimension 2
									tfisg102.dim3,		|Dimension 3
									tfisg102.dim4,		|Dimension 4
									tfisg102.dim5,		|Dimension 5
		| 							domain	tccvat		i.cvat,		|Tax Code
		| 							domain	tfgld.vtyp	i.vtyp,		|Tax Origin
									tfisg102.refr,		|Transaction Reference
									tfisg102.dbcr,		|Debit/Credit
									tfisg102.amnt,	|Net Amount
									o.docn,		|Document Number
									o.lino)
									
							if not isspace(error.msg) then
								tfisg102.errm = strip$(error.msg)
								db.update(ttfisg102,db.retry,e)
							else
								tfisg102.errm = ""
								tfisg102.btno = o.btno
								tfisg102.docn = o.docn
								tfisg102.lino = o.lino
								db.update(ttfisg102,db.retry,e)
								commit.transaction()
							endif
						endselect
					endif
				endif
				tfisgdll0102.close.session()
											|#ISGECDV001048.sn
				break
			case	"tfcmg2100s000" :
				if tfisgdll0102.mark.transaction(o.year,o.btno,i.ttyp,"tfcmg2100m000") = 1 then
					select 	tfisg102.seri,
						tfisg102.ccur,
						tfisg102.amnt,
						tfisg102.refr,
						tfisg102.docd,
						tfisg102.sern
					from	tfisg102
					where	tfisg102._index1 = {:i.cono,:i.type,:i.docd,:i.prid}
					and	tfisg102.ttyp = :i.ttyp						|#ISGECDV001048.n
					and	tfisg102.dbcr = tfgld.dbcr.credit
					and	tfisg102.docn = 0
					and	tfisg102.lino = 0
					as set with 1 rows
					selectdo
					endselect
					o.docn = 0
					o.lino = 0
					error.msg = tfisgdll0102.create.cash.transaction.header(
									tfisg102.seri,
									tfisg102.docd,
									tfcmg.tran.journal,
									tfisg102.ccur,
									tfisg102.amnt,
									tfisg102.refr,
									o.docn,o.lino)
					if not isspace(error.msg) then
						select 	tfisg102.errm
						from	tfisg102 for update
						where	tfisg102._index1 = {:i.cono,:i.type,:i.docd,:i.prid,:tfisg102.sern}
						selectdo
							tfisg102.errm = error.msg
							db.update(ttfisg102,db.retry,e)
							commit.transaction()
						endselect
						
						close.cash.transaction.session()
					else
						select 	tfisg102.btno,
							tfisg102.docn,
							tfisg102.lino
						from	tfisg102 for update
						where	tfisg102._index1 = {:i.cono,:i.type,:i.docd,:i.prid,:tfisg102.sern}
						selectdo
							tfisg102.btno = o.btno
							tfisg102.docn = o.docn
							tfisg102.lino = o.lino
							db.update(ttfisg102,db.retry,e)
							commit.transaction()
						endselect
						
						open.cash.transaction.line.session()
						
						select 	tfisg102.*
						from	tfisg102 for update
						where	tfisg102._index1 = {:i.cono,:i.type,:i.docd,:i.prid}
						and	tfisg102.ttyp = :i.ttyp					|#ISGECDV001048.n	 
						and	tfisg102.dbcr = tfgld.dbcr.debit
						and	tfisg102.docn = 0
						and	tfisg102.lino = 0
						selectdo
							error.msg = ""
							error.msg = insert.cash.transaction.lines(
									tfisg102.tcom,
									tfisg102.bpid,
									tfisg102.leac,
									tfisg102.dim1,
									tfisg102.dim2,
									tfisg102.dim3,
									tfisg102.dim4,
									tfisg102.dim5,
									tfisg102.amnt,
									o.docn,
									o.lino,
									o.serl)
							if not isspace(error.msg) then
								tfisg102.errm = strip$(error.msg)
								db.update(ttfisg102,db.retry,e)
							else
								tfisg102.errm = ""
								tfisg102.btno = o.btno
								tfisg102.docn = o.docn
								tfisg102.lino = o.lino
| 								tfisg102.serl = o.serl
								db.update(ttfisg102,db.retry,e)
								commit.transaction()
							endif	
						
						endselect
						
							
					endif
					
					
					
				endif
				close.cash.transaction.line()
				break
			endcase
											|#ISGECDV001048.en
		endif		
	else
		|*******
		|* Use Existing Batch
		|*******
		
| 		tfisgdll0102.update.batch(i.cono,i.type,i.docd,i.prid,i.sern,o.btno,o.year,o.fprd)
	endif
	
	error.msg = "0|"
	return(error.msg)

}



function long tfisgdll0102.check.transaction.type.series
			(
				domain		tcncmp		i.cono,		|Company
				domain		tfisg.sal	i.type,		|Type
				domain		tfgld.date	i.docd,		|Transaction Date
				domain		tcmcs.long	i.prid,		|Process ID
			ref 	domain		tfgld.ttyp	o.ttyp		|Transaction Type
			)
{
	long record_count 
	domain	tfgld.seri		o.seri
	
	
	record_count = 0
	
	select 	tfisg102.ttyp:o.ttyp,
		tfisg102.seri:o.seri
	from	tfisg102
	where	tfisg102._index1 = {:i.cono,:i.type,:i.docd,:i.prid}
	and	tfisg102.docn = 0
	group by tfisg102.ttyp,tfisg102.seri
	selectdo
		record_count = record_count + 1
	selectempty
		
	endselect
	
	if record_count > 1 then
		return(-1)
	endif
	
	return(0)
}

function long tfisgdll0102.check.batch.already.created
			(
				domain		tcncmp		i.cono,		|Company
				domain		tfisg.sal	i.type,		|Type
				domain		tfgld.date	i.docd,		|Transaction Date
				domain		tcmcs.long	i.prid,		|Process ID
			ref 	domain		tfgld.btno	o.btno,		|Batch Number
			ref 	domain		tfgld.year	o.year,		|Fiscal Year
			ref 	domain		tfgld.prod	o.fprd		|Fiscal Period
			)
{
	select 	tfisg102.btno:o.btno,
		tfisg102.year:o.year,
		tfisg102.fprd:o.fprd
	from	tfisg102
	where	tfisg102._index1 = {:i.cono,:i.type,:i.docd,:i.prid}
	and	tfisg102.btno <> 0
	order by tfisg102.btno desc
	as set with 1 rows
	selectdo
		if tfisgdll0102.get.batch.status(o.btno,o.year) then
			o.btno = 0
			o.year = 0
			return(-1)
		endif
	selectempty
		o.btno = 0
		o.year = 0
		return(-1)
	endselect
	
	return(0)
}

function extern long tfisgdll0102.get.batch.status
			(
				domain	tfgld.btno	i.btno,		|Batch
				domain	tfgld.year	i.year		|Fiscal Year
			)
{
	domain	tfgld.btno	o.btno
	
	select 	tfgld100.btno:o.btno
	from	tfgld100
	where	tfgld100._index1 = {:i.year,:i.btno}
	and	(tfgld100.stat = tfgld.bstt.open.free or tfgld100.stat = tfgld.bstt.ready)
	as set with 1 rows
	selectdo
	selectempty
		return(-1)
	endselect
	return(0)
}


function extern  tfisgdll0102.update.batch
			(
				domain		tcncmp		i.cono,		|Company
				domain		tfisg.sal	i.type,		|Type
				domain		tfgld.date	i.docd,		|Transaction Date
				domain		tcmcs.long	i.prid,		|Process ID
				domain		tcpono		i.sern,		|Serail No.
			 	domain		tfgld.btno	i.btno,		|Batch Number
			 	domain		tfgld.year	i.year,		|Fiscal Year
			 	domain		tfgld.prod	i.fprd		|Fiscal Period
			)
{
	select 	tfisg102.btno,
		tfisg102.year,
		tfisg102.fprd
	from	tfisg102 for update
	where	tfisg102._index1 = {:i.cono,:i.type,:i.docd,:i.prid,:i.sern}
	selectdo
		tfisg102.btno = i.btno
		tfisg102.year = i.year
		tfisg102.fprd = i.fprd
		db.update(ttfisg102,db.retry,e)
	endselect
	
}


|************* Create Batch


function extern long  tfisgdll0102.Create.Transaction.Batch			
			(
			ref	domain	tfgld.btno	i.btno,		|Batch Number
				domain	tfgld.date	i.tedt,		|Transaction Date
				domain	tfgld.desc	i.bref,		|Batch Reference
				domain	tfgld.ttyp	i.ttyp,		|Transaction Type
			ref 	domain	tfgld.year	o.year,		|Fiscal Year
			ref 	domain	tfgld.prod	o.prod		|Fiscal Period
			)
{
	DLLUSAGE
		This Fucntion Insert The Transactions Entry
		And Create the Batch.
		Input:-	Transaction Type,Year,Payment Date, Remarks,
		Output:- Batch No.,Year,Period
		Return:-	Message
	ENDDLLUSAGE
	
	string error(500)
	long ret_val,rt1,i
	
	if not i.btno then
		ret_val = dal.new.object("tfgld100")
		
		if i.tedt <> 0 then
			dal.set.field("tfgld100.tedt",i.tedt)
		endif
		
		if not isspace(i.bref) then
			dal.set.field("tfgld100.bref",i.bref)
		endif
		
		ret_val = dal.save.object("tfgld100")
		
		if ret_val  = 0 then
			i.btno = tfgld100.btno
			o.year = tfgld100.year
			o.prod = tfgld100.fprd
			commit.transaction()
		else
			abort.transaction()
			return(DALHOOKERROR)
		endif
	endif
	if i.btno then
		select tfgld101.ttyp 
		from tfgld101
		where tfgld101._index1 = {:o.year,:i.btno,:i.ttyp}
		as set with 1 rows
		selectdo
		selectempty
			ret_val = dal.new.object("tfgld101")
			dal.set.field("tfgld101.year",o.year)
			dal.set.field("tfgld101.btno",i.btno)
			dal.set.field("tfgld101.ttyp",i.ttyp)
			ret_val = dal.save.object("tfgld101")
			if ret_val  = 0 then
				commit.transaction()
			else
				abort.transaction()
				return(DALHOOKERROR)
			endif
		endselect
	endif
	return(0)
}


function extern long tfisgdll0102.mark.transaction
				(
					domain	tfgld.year	i.year,		|Fiscal Year
					domain	tfgld.btno	i.btno,		|Batch Number
					domain	tfgld.ttyp	i.ttyp,		|Transaction Type
					domain	tfgld.sess	i.sess		|Session Code
				) 
{

	string error.msg(500)
	long ret_val
	
	stpapi.put.field("tfgld1101m100", "tfgld101.year", str$(i.year))
	stpapi.put.field("tfgld1101m100", "tfgld101.btno", str$(i.btno))
	stpapi.put.field("tfgld1101m100", "tfgld101.ttyp", i.ttyp )
	ret_val = stpapi.find("tfgld1101m100", error.msg)
	if ret_val = 1 then
		ret_val = stpapi.mark("tfgld1101m100",error.msg)
		if ret_val = 1 then
| 			stpapi.handle.subproc("tfgld1101m100","tfgld1115m000", "add")		|#ISGECDV001048.o
			stpapi.handle.subproc("tfgld1101m100",i.sess, "add")			|#ISGECDV001048.n
			stpapi.form.command("tfgld1101m100",5,"enter.transactions",error.msg)
		endif
	endif
	
	return(ret_val)
}

function extern long tfisgdll0102.create.new.jv.header
				(
					domain	tfgld.ttyp	i.ttyp,		|Transaction Type
					domain	tfgld.seri	i.seri,		|Series
					domain	tcccur		i.ccur		|Currency
				)
{
	string error.msg(500)
	string temp.docn(16)
	long ret_val
	
	stpapi.put.field("tfgld1115m000","tfgld102.ttyp",i.ttyp)
	stpapi.put.field("tfgld1115m000","tfgld102.docn",str$(i.seri))
	stpapi.put.field("tfgld1115m000","ccur.f",i.ccur)	
	ret_val = stpapi.change.view("tfgld1115m000", error.msg)
| 	stpapi.get.field("tfgld1115m000","tfgld102.docn",temp.docn)
	
| 	return(temp.docn)

	return(0)
}

function extern long tfisgdll0102.find.existing.jv.document
				(
					domain	tfgld.ttyp	i.ttyp,		|Transaction Type
					domain	tfgld.docn	i.docn		|Document Number
				)
{
	string error.msg(500)
	long ret_val
	
	stpapi.put.field("tfgld1115m000","tfgld102.ttyp",i.ttyp)
	stpapi.put.field("tfgld1115m000","tfgld102.docn",str$(i.docn))
	ret_val = stpapi.find("tfgld1115m000",error.msg)
	if ret_val = 1 then
		ret_val = stpapi.mark("tfgld1115m000",error.msg)
		if ret_val = 1 then
			ret_val = stpapi.change.view("tfgld1115m000",error.msg)
		endif
	endif
	return(ret_val)
}


function string tfisgdll0102.create.lines(
				domain	tcncmp		i.ncmp,		|Company
				domain	tccom.bpid	i.bpid,		|Business Partner
				domain	tfgld.leac	i.leac,		|Ledger Account
				domain	tfgld.dimx	i.dim1,		|Dimension 1
				domain	tfgld.dimx	i.dim2,		|Dimension 2
				domain	tfgld.dimx	i.dim3,		|Dimension 3
				domain	tfgld.dimx	i.dim4,		|Dimension 4
				domain	tfgld.dimx	i.dim5,		|Dimension 5
| 				domain	tccvat		i.cvat,		|Tax Code
| 				domain	tfgld.vtyp	i.vtyp,		|Tax Origin
				domain	tfgld.refc	i.refr,		|Transaction Reference
				domain	tfgld.dbcr	i.dbcr,		|Debit/Credit
				domain	tfgld.amnt	i.amount,	|Net Amount
			ref 	domain	tfgld.docn	o.docn,		|Document Number
			ref 	domain	tfgld.lino	o.lino
			)
{
	long ret_val
	string error.msg(500) ,temp.lino(4),error1(100)
	
	string temp.docn(16)
	
	if i.ncmp <> 0 then
		stpapi.put.field("tfgld1115m000","tfgld102.tcom",str$(i.ncmp))
	endif
	
	
	if not isspace(i.bpid) then
		stpapi.put.field("tfgld1115m000","tfgld102.bpid",i.bpid)
	endif
	
	if not isspace(i.leac) then
		stpapi.put.field("tfgld1115m000","tfgld102.leac",i.leac)
	endif
	
	if not isspace(i.dim1) then
		stpapi.put.field("tfgld1115m000","tfgld102.dim1",i.dim1)
	endif
	
	if not isspace(i.dim2) then
		stpapi.put.field("tfgld1115m000","tfgld102.dim2",i.dim2)
	endif
	
	if not isspace(i.dim3) then
		stpapi.put.field("tfgld1115m000","tfgld102.dim3",i.dim3)
	endif
	
	if not isspace(i.dim4) then
		stpapi.put.field("tfgld1115m000","tfgld102.dim4",i.dim4)
	endif
	
	if not isspace(i.dim5) then
		stpapi.put.field("tfgld1115m000","tfgld102.dim5",i.dim5)
	endif
	
| 	if not isspace(i.cvat) then
| 		stpapi.put.field("tfgld1115m000","tfgld102.cvat",i.cvat)
| 	endif
	
| 	if i.vtyp <> empty then
| 		stpapi.put.field("tfgld1115m000","tfgld102.vtyp",str$(etol(i.vtyp)))
| 	endif
	
	if not isspace(i.refr) then
		stpapi.put.field("tfgld1115m000","tfgld102.refr",i.refr)
	endif
	
	if i.dbcr <> empty then
		stpapi.put.field("tfgld1115m000","tfgld102.dbcr",str$(etol(i.dbcr)))
	endif
	
	if i.amount <> 0 then
		stpapi.put.field("tfgld1115m000","tfgld102.amnt",str$(i.amount))
	endif
	
	ret_val = stpapi.insert("tfgld1115m000",true,error.msg)
	if ret_val = 1 then
		stpapi.get.field("tfgld1115m000","tfgld102.docn",temp.docn)
		stpapi.get.field("tfgld1115m000","tfgld102.lino",temp.lino)
		o.lino = lval(temp.lino)
		o.docn = lval(temp.docn)
	else
		stpapi.recover("tfgld1115m000",error1)
	endif
	
	
	return(error.msg)
}


function extern tfisgdll0102.close.session()
{
	string error(500)
	stpapi.end.session("tfgld1115m000",error)
	stpapi.end.session("tfgld1101m100",error)
}



function extern string tfisgdll0102.get.batch.document
			(
				domain		tcmcs.str3	s.cono,		|Company
				domain		tcmcs.str2	s.type,		|Type
				domain		tcmcs.str10	s.docd,		|Transaction Date
				domain		tcmcs.str10	s.prid,		|Process ID
				domain		tcmcs.str4	s.sern
			)
{
	string error.msg(500)
	domain		tcncmp		i.cono		|Company
	domain		tfisg.sal	i.type		|Type
	domain		tfgld.date	i.docd		|Transaction Date
	domain		tcmcs.long	i.prid
	domain		tcpono		i.sern
	
	i.cono = lval(s.cono)
	i.type = ltoe(lval(s.type))
|	i.docd = date.num()
	i.docd = convert.date(s.docd)
	i.prid = lval(s.prid)
	i.sern = lval(s.sern)
	
	select 	tfisg102.btno,
		tfisg102.docn,
		tfisg102.lino,
		tfisg102.errm
	from	tfisg102
	where	tfisg102._index1 = {:i.cono,:i.type,:i.docd,:i.prid,:i.sern}
	as set with 1 rows
	selectdo
	selectempty
		tfisg102.btno = 0
		tfisg102.docn = 0
		tfisg102.lino = 0
		tfisg102.errm = ""
	endselect
	
	error.msg = ""
	if not isspace(tfisg102.errm) then
		error.msg = "1|" & strip$(tfisg102.errm)
	else
		error.msg = "0|" & str$(tfisg102.btno) & "|" & str$(tfisg102.docn) & "|" & str$(tfisg102.lino) 
	endif
		
	return(error.msg)
}


function domain tfgld.date convert.date
				(
					domain 	tcmcs.str10	i.docd
				)
{
	long year
	long month
	long day
	domain 	tfgld.date	temp.date
	day = lval(i.docd(1;2))
	month = lval(i.docd(4;2))
	year = lval(i.docd(7;4))
	
	temp.date = date.to.num  (year, month, day)
	return(temp.date)
}



function extern string tfisgdll0102.create.cash.transaction.header
				(
					domain	tfgld.docn		i.docn,		|Document Number
					domain	tfgld.date		i.docd,		|Document Date
					domain	tfcmg.tran		i.tran,		|Type of Transaction 
					domain	tcccur			i.ccur,		|Currency
					domain	tfgld.amnt		i.amnt,		|Amount
					domain	tfgld.refc		i.refr,		|Reference
				ref 	domain	tfgld.docn		o.docn,		|Document Number
				ref 	domain	tfgld.lino		o.lino		|Line Number
					
				)
{
	long ret_val
	string error.msg(500)
	
	string	tmp.docn(16)
	string	tmp.lino(4)
	
	stpapi.put.field("tfcmg2100s000","tfcmg204.docn",str$(i.docn))
	
	stpapi.put.field("tfcmg2100s000","tfcmg204.docd",str$(i.docd))
	
	stpapi.put.field("tfcmg2100s000","tfcmg204.tran",str$(etol(i.tran)))
	
	stpapi.put.field("tfcmg2100s000","tfcmg204.ccur",i.ccur)
	
	stpapi.put.field("tfcmg2100s000","tfcmg204.amnt",str$(i.amnt))
	
	stpapi.put.field("tfcmg2100s000","tfcmg204.refr",i.refr)
	
	ret_val = stpapi.insert("tfcmg2100s000",true,error.msg)
	
	if ret_val = 1 then
		stpapi.get.field("tfcmg2100s000","tfcmg204.docn",tmp.docn)
		stpapi.get.field("tfcmg2100s000","tfcmg204.lino",tmp.lino)
	endif
	
	return(error.msg)
}

function close.cash.transaction.session()
{
	string error(100)
	stpapi.end.session("tfcmg2100s000",error)
	stpapi.end.session("tfgld1101m100",error)
}

function open.cash.transaction.line.session()
{
	string error(500)
	
	stpapi.handle.subproc("tfcmg2100s000","tfcmg2120s000", "add")
	stpapi.form.command("tfcmg2100s000",5,"exec.cont.process",error)
}


function string insert.cash.transaction.lines
				(
					domain	tcncmp		i.tcom,		|Target Company
					domain	tccom.bpid	i.bpid,		|Business Partner
					domain	tfgld.leac	i.leac,		|Line Number
					domain	tfgld.dimx	i.dim1,		|Dimension 1
					domain	tfgld.dimx	i.dim2,		|Dimension 2
					domain	tfgld.dimx	i.dim3,		|Dimension 3
					domain	tfgld.dimx	i.dim4,		|Dimension 4
					domain	tfgld.dimx	i.dim5,		|Dimension 5
					domain	tfgld.amnt	i.amnt,		|Amount
				ref 	domain	tfgld.docn	o.docn,		|Document Number
				ref 	domain	tfgld.lino	o.lino,		|Line Number
				ref 	domain	tfgld.lino	o.serl		|Serial Number
				)
{
	string	tmp.docn(16)
	string	tmp.lino(4)
	string tmp.serl(4)
	string	error.msg(500)
	long ret_val
	
	
	stpapi.put.field("tfcmg2120s000","tfgld102.tcom",str$(i.tcom))
	
	stpapi.put.field("tfcmg2120s000","tfgld102.bpid",i.bpid)
	
	stpapi.put.field("tfcmg2120s000","tfgld102.leac",i.leac)
	
	stpapi.put.field("tfcmg2120s000","tfgld102.dim1",i.dim1)
	stpapi.put.field("tfcmg2120s000","tfgld102.dim2",i.dim2)
	stpapi.put.field("tfcmg2120s000","tfgld102.dim3",i.dim3)
	stpapi.put.field("tfcmg2120s000","tfgld102.dim4",i.dim4)
	stpapi.put.field("tfcmg2120s000","tfgld102.dim5",i.dim5)
	stpapi.put.field("tfcmg2120s000","tfgld102.ccty","")
	stpapi.put.field("tfcmg2120s000","form.amount",str$(i.amnt))
	ret_val = stpapi.insert("tfcmg2120s000",true,error.msg)
	if ret_val = 1 then
		stpapi.get.field("tfcmg2120s000","tfgld102.docn",tmp.docn)
		stpapi.get.field("tfcmg2120s000","tfgld102.lino",tmp.lino)
		stpapi.get.field("tfcmg2120s000","tfgld102.lino",tmp.serl)
		
		o.docn = lval(tmp.docn)
		o.lino = lval(tmp.lino)
		o.serl = lval(tmp.serl)
	endif
	
	return(error.msg)
		
}

function close.cash.transaction.line()
{
	string error(500)
	
	stpapi.end.session("tfcmg2120s000",error)
	stpapi.end.session("tfcmg2100s000",error)
	stpapi.end.session("tfgld1101m100",error)
}

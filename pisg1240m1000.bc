|******************************************************************************
|* dmisg1240m100  0  VRC B61U a7 isg 
|* Upload Planned MDL
|* merino1                       
|* 2017-09-14
|******************************************************************************
|* Main table dmisg140 Project MDL, Form Type 4
|******************************************************************************
|* ID: ISGEC01042, Sumit Bansal, 14/09/2017
|* New Development
|****************************** declaration section ***************************
declaration:

  table   tdmisg140 | Project MDL
  table   tdmisg148
  table   tdmisg153
  
  #pragma used dll ottdllbw
  #include <bic_desktop>

   extern  domain  tcdate		o.t1, o.b2, o.d2, o.k2, o.l2, o.m2, o.n2, o.o2
   extern  domain  tcmcs.str100	f.file.path, msg.errs
   extern  domain  tcmcs.str100	a1,b1,c1,d1,e1,f1,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1,q1,r1,s1,t1,u1,v1,w1,x1,y1,z1
   extern  domain  tcmcs.str100	a2,b2,c2,d2,e2,f2,h2,i2,j2,k2,l2,m2,n2,o2,p2,q2, r2, s2
   extern  domain  tcyesno		temp.oscd

	string		line(2500), err.file(100), file.name(100), err.log(100), line1(1500)
	long		ret2, cnt_rec
	long		pointer, pointer1
|****************************** program section ********************************


|****************************** group section **********************************

group.1:
init.group:
   get.screen.defaults()

|****************************** functions **********************************

functions:

function extern browse.file()
{
	mess("tigenstring", 0, "Select The File . . .")
| 	if seq.open.dialog.local( false, "", "","Text Files(*.csv)|*.txt|All File(*.*)|*.*", f.file.path ) > 0 then	|#Atul.o
	if seq.open.dialog.local( false, "", "","CSV Files(*.csv)|*.csv|All File(*.*)|*.*", f.file.path ) > 0 then	|#Atul.n	
		mess("tigenstring", 0, "Success . . .")
	else
		mess("tigenstring", 0, "Cancelled . . .")
	endif
	if isspace(f.file.path) then
		mess("tigenstring", 1, "Please Specify a File")
	else
		display("f.file.path")
	endif
}

function extern process()
{	
	err.file = bse.dir$()  &"/" & strip$(str$(utc.num())) & ".csv"
	if	client2server(f.file.path,err.file,true) =  0 then
		pointer  = seq.open(err.file,"r")
		if pointer >= 1 then
			err.log = bse.dir$()  &"/" & strip$(str$(utc.num())) & ".txt"
			file.name = "c:\temp\" & str$(utc.num())  & ".txt"
			pointer1 = seq.open(err.log, "w+")
			seq.puts("Errors on the Records while uploading...", pointer1)
			seq.puts(" ", pointer1)
			
			if pointer1 >= 1 then
				get.data()  
				seq.close(pointer)
			endif
			
			seq.close(pointer1)
			ret2 = server2client(err.log,file.name,1)
			ret2 = app_start(file.name,"c:","","","")
		endif
	endif

}

function get.data()
{
	cnt_rec = 0
	while (not seq.eof(pointer))
		ret2 = seq.gets(line,1500,pointer)
		if ret2 = 0 then
			initialize()		  |1 |2 |3 |4 |5 |6 |7 |8 |9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48	
			ret2 = string.scan(line,"%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s",
					a1,b1,c1,d1,e1,f1,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1,q1,r1,s1,t1,u1,v1,w1,x1,y1,z1,a2,j2,b2,c2,d2,e2,f2,h2,i2,k2,l2,m2,n2,o2,p2,q2,r2,s2)
			
			if trim$(a1) <> "Product" then
				if ret2 > 0 then 
					if chk_record() = 0 then
						if  insert.record() = 0 then
							cnt_rec = cnt_rec + 1
							commit.transaction()
							initialize()
						else
							message("Error in Product " & a1 & " with Project " & b1 & " and UID " & c1 & ".")
							abort.transaction()
						endif
					else
						print.err.log()
					endif
				endif
			endif	
		endif
	endwhile
	
	message("%d Records Processed....", cnt_rec)
}

function initialize()
{
	a1 = ""
	b1 = ""
	c1 = ""
	d1 = ""
	e1 = ""
	f1 = ""
	g1 = ""
	h1 = ""
	i1 = ""
	j1 = ""
	k1 = ""
	l1 = ""
	m1 = ""
	n1 = ""
	o1 = ""
	p1 = ""
	q1 = ""
	r1 = ""
	s1 = ""
	t1 = ""
	u1 = ""
	v1 = ""
	w1 = ""
	x1 = ""
	y1 = ""
	z1 = ""
	a2 = ""
	b2 = ""
	c2 = ""
	d2 = ""
	e2 = "" 
	f2 = ""
	h2 = ""
	i2 = ""
	j2 = ""
	l2 = ""
	m2 = ""
	n2 = ""
	o2 = ""
	p2 = ""
	q2 = ""
	r2 = ""
	s2 = ""
}

function long insert.record()
{
	a1 = shiftl$(strip$(a1))
	b1 = shiftl$(strip$(b1))
	c1 = shiftl$(strip$(c1))
	
	
	select dmisg140.*
	from   dmisg140 
	where  dmisg140._index1 = {:a1, :b1, :c1}
	selectdo
	selectempty
		db.set.to.default(tdmisg140)
		
		dmisg140.pcod = a1
		dmisg140.cprj = b1
		dmisg140.uidn = c1
		dmisg140.docn = e1
		dmisg140.subm = ltoe(lval(n1))
		dmisg140.intr = ltoe(lval(o1))
		dmisg140.prod = ltoe(lval(p1))
		dmisg140.erec = ltoe(lval(q1))
		dmisg140.info = ltoe(lval(r1))
		dmisg140.drwn = v1
		dmisg140.chec = w1
		dmisg140.engg = x1
		extract.date.time(k2, o.k2)	
		dmisg140.bssd = o.k2
		extract.date.time(l2, o.l2)
		dmisg140.bsfd = o.l2
		dmisg140.rsfd = o.l2
		dmisg140.drep = toupper$(r2)
		dmisg140.oscd = ltoe(lval(s2))
		
		assign.other.values()

		db.insert(tdmisg140, db.skip.dupl, e)
		if e <> 0 then
			return(e)
		endif
	endselect	
	return(0)
}

function extract.date.time(domain tcdsca i.s,ref domain tcdate e.date)
{	
	long yy,mm,dd,hh,mn,ss,ret.var,ret.var1
	domain tcdsca s.dt,s.time
	
	if not isspace(i.s) then
		s.dt = i.s(1;10)
		s.time = i.s(11;19)
		ret.var = string.scan(s.dt,"%d/%d/%d",dd,mm,yy)
		ret.var1 =string.scan(s.time,"%d:%d:%d",hh,mn,ss)
		e.date = date.to.utc( yy,mm,dd,hh,mn,ss)
	endif		
					
}

function long chk_record()
{
	select	dmisg145.prod
	from	dmisg145
	where	dmisg145._index1 = {:a1}
	selectdo		
	selectempty
		msg.errs = "Invalid Product Code"
		return(1)
	endselect
	
	select	tppdm600.cprj
	from	tppdm600
	where	tppdm600._index1 = {:b1}
	selectdo
	selectempty
		msg.errs = "Invalid Project Code"
		return(1)
	endselect

	
	select	dmisg148.uidn
	from	dmisg148
	where	dmisg148._index1 = {:a1, :c1}
	and	dmisg148.iuse = tcyesno.yes
	selectdo
	selectempty
		msg.errs = "Invalid UID or Not in Use.."
		return(1)
	endselect
	
	select	dmisg100.type
	from	dmisg100
	where	dmisg100._index1 = {:j1}
	selectdo
	selectempty
		msg.errs = "Invalid Document Category ID"
		return(1)
	endselect
	
	select	dmisg090.grup
	from	dmisg090
	where	dmisg090._index1 = {:k1}
	selectdo
	selectempty
		msg.errs = "Invalid Resposible department ID"
		return(1)
	endselect
	
	select	dmisg122.orgn
	from	dmisg122
	where	dmisg122._index1 = {:m1}
	selectdo
	selectempty
		msg.errs = "Invalid Originator ID"
		return(1)
	endselect

	select	dmisg147.scod
	from	dmisg147
	where	dmisg147._index1 = {:u1}
	selectdo
	selectempty
		msg.errs = "Invalid Software Used Code"		
		return(1)
	endselect
	
	select	dmisg146.dcod
	from	dmisg146
	where	dmisg146._index1 = {:f2}
	selectdo
	selectempty
		msg.errs = "Invalid Generation Method Code"		
		return(1)		
	endselect
	
	temp.oscd = ltoe(lval(s2))
	
	select	dmisg153.*
	from	dmisg153
	where	dmisg153._index1 = {:a1, :k1}
	and	dmisg153.drep = :r2
	and	dmisg153.oscd = :temp.oscd
	selectdo
	selectempty
		msg.errs = "Invalid Design Repeatibility"
		return(1)
	endselect
	
	if val(l1) > 5 then
		msg.errs = ("Invalid Field Value....Size")
		return(1)
	endif
	
	if val(e2) > 2 then
		msg.errs = ("Invalid Field Value....Drawing(Standard/Customized)")
		return(1)
	endif
	
	if val(h2) > 2 then
		msg.errs = ("Invalid Field Value....Input Dependent")
		return(1)
	endif
	
	if val(n1) > 2 then
		msg.errs = ("Invalid Field Value....Customer Submission")
		return(1)
	endif
	
	if val(o1) > 2 then
		msg.errs = ("Invalid Field Value....Internal Use")
		return(1)
	endif
	
	if val(p1) > 2 then
		msg.errs = ("Invalid Field Value....Production")
		return(1)
	endif
	
	if val(q1) > 2 then
		msg.errs = ("Invalid Field Value....Erection")
		return(1)
	endif
	
	if val(r1) > 2 then
		msg.errs = ("Invalid Field Value....Information")
		return(1)
	endif
	
	if val(s2) > 2 then
		msg.errs = ("Invalid Field Value....Outsourced")
		return(1)
	endif

	return(0)
}

function calculate.hours()
{
	select	dmisg153.*
	from	dmisg153
	where	dmisg153._index1 = {:a1, :k1}
	and	dmisg153.drep = :r2
	and	dmisg153.oscd = :temp.oscd
	selectdo
		dmisg140.dhrs = dmisg148.drhr * (dmisg153.dref / 100)
		dmisg140.chrs = dmisg148.chhr * (dmisg153.chef / 100)
		dmisg140.ehrs = dmisg148.lehr * (dmisg153.leef / 100)
		dmisg140.lmhr = dmisg148.lmhr * (dmisg153.lmef / 100)
		dmisg140.dref = dmisg153.dref
		dmisg140.chef = dmisg153.chef
		dmisg140.leef = dmisg153.leef
		dmisg140.lmef = dmisg153.lmef
	selectempty
		dmisg140.dref = 0.0
		dmisg140.chef = 0.0
		dmisg140.leef = 0.0
		dmisg140.lmef = 0.0
		dmisg140.dhrs = 0.0
		dmisg140.chrs = 0.0
		dmisg140.ehrs = 0.0
		dmisg140.lmhr = 0.0
	endselect
}

function print.err.log()
{
		line1 = concat$(",",
		sprintf$("%s", a1),				|Product Code
		sprintf$("%s", b1),				|UID
		sprintf$("%s", i1),				|Software Used
		sprintf$("%s", f1),				|Dwg-Doc Generation Code
		sprintf$("%s", msg.errs))
		
		line1 = strip$(shiftl$(line1))
		seq.puts(line1, pointer1)
}

function assign.other.values()
{
	select	dmisg148.*
	from	dmisg148
	where	dmisg148._index1 = {:dmisg140.pcod, :dmisg140.uidn}
	selectdo
		dmisg140.dsca = dmisg148.titl
		dmisg140.cspa = dmisg148.cspa
		dmisg140.type = dmisg148.catg
		dmisg140.resp = dmisg148.rspd
		dmisg140.size = dmisg148.size
		dmisg140.orgn = dmisg148.down
		dmisg140.soft = dmisg148.soft
		dmisg140.dwgs = dmisg148.dwgs
		dmisg140.genm = dmisg148.genm
		dmisg140.inpt = dmisg148.inpt
		dmisg140.seqn = dmisg148.seqn
		dmisg140.iref = dmisg148.iref								|#Anadi.n 28-06-2018
		
		calculate.hours()
	endselect
	
}

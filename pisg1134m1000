|******************************************************************************
|* dmisg1134m100  0  VRC B61U a7 isg 
|* Send Vendor Document for Technical Clearance
|* Installation user             
|* 2015-02-02
|******************************************************************************
|* Main table dmisg134 Receive Vendor Document, Form Type 1
|******************************************************************************
|* ISGEC004004, IT0047, Dharmendra, Dt. 30-01-2015, B61U a7 isg                                                                                
|****************************** declaration section ***************************
declaration:

  table   tdmisg134 | Receive Vendor Document
  table   tdmisg136
  extern	domain	tcorno	order.no.pre


|****************************** program section ********************************
before.program:
	order.no.pre = ""
	query.extend.where("dmisg134.orno = " & quoted.string(order.no.pre))

before.display.object:
	if dmisg134.stat = dmisg.receipt.submitted then
		enable.fields("dmisg134.stat", actual.occ)
		enable.fields("dmisg134.sent", actual.occ)
	else
		enable.fields("dmisg134.stat", actual.occ)
		disable.fields("dmisg134.sent", actual.occ)
	endif

|****************************** choice section ********************************
choice.process.1:
on.choice:
	do.selection(false, send_for_approval)

choice.comment.sub:
on.choice:
	on.main.table(change_status_comment)
	
choice.technically:
on.choice:
	on.main.table(change_status_technically)
	
choice.closed:
on.choice:
	on.main.table(change_status_closed)
	
|****************************** field section ********************************

|****************************** function section **********************************
functions:

function send_for_approval()
{
	domain tcsern i, found
	
	i = 0
	found = 0
	
	select	dmisg134.*
	from	dmisg134 for update
	where	dmisg134._index1 = {:dmisg134.rcno, :dmisg134.revn}
	selectdo
		if dmisg134.stat = dmisg.receipt.submitted then
			for i = 1 to 7
				if dmisg134.sent(i) = tcyesno.yes then
					insert_dmisg136(i)
					found = i
				endif	
			endfor
			if found then
				dmisg134.suer = logname$
				dmisg134.sdat = utc.num()
				dmisg134.stat = dmisg.receipt.evaluation
				db.update(tdmisg134, db.retry)
			else
				message("Not any Engineering department selected for Receipt No. %s and Revision %s", dmisg134.rcno, dmisg134.revn)	
			endif
		else
			message("Receipt No. %s and Revision %s not in Submitted State", dmisg134.rcno, dmisg134.revn)
		endif
	endselect
	commit.transaction()

}

function insert_dmisg136(domain tcsern i.engi)
{
	domain dmisg.eng engineering
	
	on case i.engi
	case 1:
		engineering = dmisg.eng.mechanical
		break
	case 2:
		engineering = dmisg.eng.structure
		break
	case 3:
		engineering = dmisg.eng.piping
		break
	case 4:
		engineering = dmisg.eng.process
		break
	case 5:
		engineering = dmisg.eng.ci
		break
	case 6:
		engineering = dmisg.eng.electrical
		break
	case 7:
		engineering = dmisg.eng.others
		break
	endcase
	
	select	dmisg136.*
	from	dmisg136 for update
	where	dmisg136._index1 = {:dmisg134.rcno, :dmisg134.revn, :engineering}
	selectdo
	selectempty
		dmisg136.rcno = dmisg134.rcno
		dmisg136.revn = dmisg134.revn
		dmisg136.engi = engineering
		db.insert(tdmisg136, db.retry)
	endselect
	

}


function change_status_comment()
{
	select	dmisg134.stat
	from	dmisg134 for update
	where	dmisg134._index1 = {:dmisg134.rcno, :dmisg134.revn}
	selectdo
		dmisg134.stat = dmisg.receipt.comment
		db.update(tdmisg134, db.retry)
		commit.transaction()
	endselect

}

function change_status_technically()
{
	select	dmisg134.stat
	from	dmisg134 for update
	where	dmisg134._index1 = {:dmisg134.rcno, :dmisg134.revn}
	selectdo
		dmisg134.stat = dmisg.receipt.cleared
		db.update(tdmisg134, db.retry)
		commit.transaction()
	endselect

}

function change_status_closed()
{
	select	dmisg134.stat
	from	dmisg134 for update
	where	dmisg134._index1 = {:dmisg134.rcno, :dmisg134.revn}
	selectdo
		dmisg134.stat = dmisg.receipt.closed
		db.update(tdmisg134, db.retry)
		commit.transaction()
	endselect

}
